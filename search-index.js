var searchIndex = {};
searchIndex["oldnav_lib"] = {"doc":"# The OldNav Library","items":[[0,"navdata","oldnav_lib","Navigation data functionality.",null,null],[0,"airport","oldnav_lib::navdata","A module with methods for `Airport` and other associated functions.",null,null],[3,"Airport","oldnav_lib::navdata::airport","An airport on earth.",null,null],[12,"waypoint","","This airport&#39;s waypoint.",0,null],[11,"new","","Constructor for `Airport`.",0,{"inputs":[{"name":"s"},{"name":"s"},{"name":"sphericalcoordinate"},{"name":"option"}],"output":{"name":"airport"}}],[11,"code","","",0,null],[11,"name","","",0,null],[11,"pos","","",0,null],[11,"fmt","","",0,null],[0,"coord","oldnav_lib::navdata","Spherical and Geographic coordinates.",null,null],[3,"SphericalCoordinate","oldnav_lib::navdata::coord","Represents a coordinate in the spherical coordinate system.",null,null],[12,"r","","Radius component",1,null],[12,"theta","","Theta component",1,null],[12,"phi","","Phi component",1,null],[5,"dms_to_deg","","Convert degrees minutes seconds format into seconds.",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[7,"EARTH_MSL_RADIUS","","Mean sea level on earth",null,null],[11,"clone","","",1,null],[11,"new","","Constructor for `SphericalCoordinate`",1,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"sphericalcoordinate"}}],[11,"from_geographic","","Create a new SphericalCoordinate from geographic coordinate.",1,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"sphericalcoordinate"}}],[11,"from_cartesian","","Create a new SphericalCoordinate from cartesian coordinate.",1,{"inputs":[{"name":"vector3"}],"output":{"name":"sphericalcoordinate"}}],[11,"rectify_bounds","","Create a clone with values that fall within the normal\nboundary of Spherical coordinate system.",1,null],[11,"rectify_bounds_inplace","","Ensure that this object&#39;s values fall within the normal\nboundary of Spherical coordinate system.",1,null],[11,"approx_eq","","Check whether this `SphericalCoordinate` and another are approximately equal",1,null],[11,"alt","","get the altitude",1,null],[11,"set_alt","","set the altitude above MSL (in metres)",1,null],[11,"lat","","get the latitude (in degrees)",1,null],[11,"set_lat","","set the latitude (in degrees)",1,null],[11,"lon","","get the longitude (in degrees)",1,null],[11,"set_lon","","set the longitude (in degrees)",1,null],[11,"r_cart_uv","","get the r cartesian unit vector",1,null],[11,"phi_cart_uv","","get the phi cartesian unit vector",1,null],[11,"theta_cart_uv","","get the theta cartesian unit vector",1,null],[11,"arc_distance","","arc distance between two points along the surface of the sphere.\n**warning: only tested to be accurate to within 5 meters at earth&#39;s surface**",1,null],[11,"fmt_geographic","","Format the `SphericalCoordinate` as a Geographical point string (altitude,\nlatitude and longitude).",1,null],[11,"angle_difference_heuristic","","A very simple difference in angle heuristic",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"integer_decode","","",1,{"inputs":[{"name":"u64"}],"output":{"name":"result"}}],[11,"integer_encode","","",1,null],[0,"waypoint","oldnav_lib::navdata","A module with methods for `Waypoint` and other associated functions and interfaces.",null,null],[3,"Waypoint","oldnav_lib::navdata::waypoint","An ICAO waypoint",null,null],[12,"code","","ICAO airport code",2,null],[12,"name","","Name of airport",2,null],[12,"pos","","Position of airport",2,null],[12,"country","","`Country` containing this `Waypoint`",2,null],[8,"WaypointInterface","","A common interface for accessing objects which can provide waypoint information.",null,null],[10,"code","","Get the ICAO code for this waypoint.",3,null],[10,"name","","Get the name of this waypoint.",3,null],[10,"pos","","Get the position of this waypoint.",3,null],[11,"new","","Constructor for `Waypoint`.",2,{"inputs":[{"name":"s"},{"name":"s"},{"name":"sphericalcoordinate"},{"name":"option"}],"output":{"name":"waypoint"}}],[11,"code","","",2,null],[11,"name","","",2,null],[11,"pos","","",2,null],[11,"fmt","","",2,null],[0,"country","oldnav_lib::navdata","A module with methods for `Country` and other associated functions and interfaces.",null,null],[3,"Country","oldnav_lib::navdata::country","Represents a country on earth that is recognised in the icao codes.",null,null],[12,"code","","The [icao code](http://www.avcodes.co.uk/icaonat.asp) of the country",4,null],[12,"name","","The name of the country",4,null],[11,"new","","Constructor for the `Country` struct.",4,{"inputs":[{"name":"s"},{"name":"s"}],"output":{"name":"country"}}],[11,"fmt","","",4,null],[0,"route","oldnav_lib::navdata","Routes and Legs",null,null],[3,"Route","oldnav_lib::navdata::route","Defines a route",null,null],[12,"name","","Name of the `Route`",5,null],[12,"waypoints","","Legs of the `Route`",5,null],[11,"fmt","","",5,null],[11,"new","","Constructor for `Route`",5,{"inputs":[{"name":"option"}],"output":{"name":"route"}}],[11,"append","","Move all legs from `other` route to the end of this route.\nThis reuses all the nodes from `other` and moves them into\n`self`. After this operation `other` route is emptied.\nThis operation should be in O(1) time and memory.",5,null],[11,"insert_waypoint","","Insert a waypoint into this route at the given index position.",5,null],[11,"append_waypoint","","Append a waypoint to the end of this route.",5,null],[11,"len","","Returns the number of waypoints in the route.",5,null],[11,"first","","Get the first waypoint in the route.",5,null],[11,"last","","Get the last waypoint in the route.",5,null],[0,"database","oldnav_lib::navdata","The Navdata Database - Loaded from the x-plane GNS430 database.",null,null],[3,"Database","oldnav_lib::navdata::database","A navigation database",null,null],[12,"fixes","","Where all the fixes are stored in the database",6,null],[12,"waypoint_hash","","hash of waypoints associated with their names",6,null],[12,"countries","","note: if I want to make waypoint mutable, or country mutable,\nI may need to put them in a Rc&lt;RefCell&lt;Waypoint&gt;&gt;.",6,null],[12,"airways","","Where all the airways are stored in the database",6,null],[12,"cycle_info","","Information about the current AIRAC cycle loaded into this navigation\ndatabase.",6,null],[3,"CycleInfo","","AIRAC Cycle Info",null,null],[12,"airac_cycle","","The cycle number",7,null],[12,"version","","Version of the cycle format?",7,null],[12,"valid_from","","The date this cycle comes into effect (and becomes valid)",7,null],[12,"valid_to","","The date after which this cycle expires and becomes invalid",7,null],[12,"message","","Message embedded with the cycle data",7,null],[4,"WaypointQueryResult","","The result of a query for waypoint or waypoints in `Database`",null,null],[13,"Found","","`T` was found",8,null],[13,"TooFar","","`T` was found but it was too far.",8,null],[13,"NotFound","","`T` was not found at all.",8,null],[11,"is_found","","Returns true if the result is `Found`.",8,null],[11,"is_none","","Returns true if the result is `None`.",8,null],[11,"is_too_far","","Returns true if the result is `TooFar`.",8,null],[11,"found","","Converts from `WaypointQueryResult&lt;T&gt; to `Option&lt;T&gt;`\nReturns a None if the result is not Found.",8,null],[11,"too_far","","Converts from `WaypointQueryResult&lt;T&gt; to `Option&lt;T&gt;`.\nReturns a None if the result is not TooFar.",8,null],[11,"new","","Constructor for `Database`",6,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"database"}}],[11,"insert_fix","","Insert a fix waypoint into this database.",6,null],[11,"match_waypoint_dist","","Find a waypoint which most closely matches the supplied parameters.\n+ code: the icao code for the waypoint\n+ position and max_dist: max distance of the waypoint from the given position",6,null],[11,"fmt","","",6,null],[11,"fmt","","",7,null],[11,"new","","Constructor for `CycleInfo`",7,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"datetime"},{"name":"datetime"},{"name":"string"}],"output":{"name":"cycleinfo"}}],[0,"multihash","oldnav_lib::navdata","This is a collection which is similar to a hashmap in that you\nstore values associated with a key, but the difference is that\nthere can be multiple values associated with the same key.",null,null],[3,"MultiHash","oldnav_lib::navdata::multihash","Not currently used",null,null],[11,"new","","Constructor for `MultiHash`",9,{"inputs":[],"output":{"name":"multihash"}}],[11,"insert","","Insert a new value",9,null],[11,"get","","Get a value out",9,null],[11,"get_mut","","Get a mutable value out",9,null],[11,"contains_key","","Check whether this hash contains any items associated with a given key",9,null],[11,"fmt","","",9,null],[0,"geohash","oldnav_lib::navdata","An integer based geohash. Inspired by the geohashrust package.",null,null],[3,"Bounds","oldnav_lib::navdata::geohash","A rectangular boundary",null,null],[12,"x_min","","x coordinate minimum",10,null],[12,"x_max","","x coordinate maximum",10,null],[12,"y_min","","y coordinate minimum",10,null],[12,"y_max","","y coordinate maximum",10,null],[5,"encode","","encode a `Vector2` position into an unsigned integer geohash.\nwraps the position around the boundaries, to keep it within them.",null,{"inputs":[{"name":"vector2"},{"name":"u8"},{"name":"bounds"}],"output":{"name":"result"}}],[5,"hash_to_string","","Convert an integer geohash to a string representation of the binary values",null,{"inputs":[{"name":"u64"}],"output":{"name":"result"}}],[5,"hash_from_string","","Create an integer geohash from a String",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"decode","","Decode integer geohash into a `Bounds`",null,{"inputs":[{"name":"u64"},{"name":"bounds"}],"output":{"name":"result"}}],[5,"decode_precision","","decode an integer geohash with the specified precision.",null,{"inputs":[{"name":"u64"},{"name":"u8"},{"name":"bounds"}],"output":{"name":"result"}}],[5,"decode_precision_nocheck","","decode an integer geohash with specified precision, without checking\nwhether or not the precision is less than the hash&#39;s internal precision.",null,{"inputs":[{"name":"u64"},{"name":"u8"},{"name":"bounds"}],"output":{"name":"result"}}],[5,"hash_precision","","Get the precision value for an integer geohash.",null,{"inputs":[{"name":"u64"}],"output":{"name":"u8"}}],[5,"neighbor","","Get the neighboring hash in the direction specified\nspherical: is whether or not to use spherical rectification/bounds wrapping.\n# Example",null,null],[7,"PRECISION_MAX","","maximum value for precision of a geohash",null,null],[7,"PRECISION_MIN","","minimum value for precision of a geohash",null,null],[7,"PRECISION_BITS","","number of precision bits",null,null],[7,"LATLON_BOUNDS","","bounds for the lat/lon coordinate system",null,null],[8,"Geohashable","","An object which is able to be geohashed.",null,null],[10,"integer_decode","","decode this object of type `T`from an integer geohash",11,{"inputs":[{"name":"u64"}],"output":{"name":"result"}}],[10,"integer_encode","","encode this object of type `T` into an unsigned integer geohash",11,null],[8,"Rectifiable","","A trait for a vector type object that can be rectified to fit\nwithin a boundary.",null,null],[10,"spherical_rectify","","wrap this position around the bounds,\nsuch that it becomes the equivalent position\nwithin the bounds.",12,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"new","","Constructor for `Bounds`",10,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bounds"}}],[11,"mid","","Get the midpoint of this `Bound`",10,null],[11,"contains","","Test whether a `Vector2` position falls within this `Bound`",10,null],[11,"x_range","","get the width of the boundary",10,null],[11,"y_range","","get the height of the boundary",10,null]],"paths":[[3,"Airport"],[3,"SphericalCoordinate"],[3,"Waypoint"],[8,"WaypointInterface"],[3,"Country"],[3,"Route"],[3,"Database"],[3,"CycleInfo"],[4,"WaypointQueryResult"],[3,"MultiHash"],[3,"Bounds"],[8,"Geohashable"],[8,"Rectifiable"]]};
searchIndex["oldnav"] = {"doc":"","items":[],"paths":[]};
searchIndex["nalgebra"] = {"doc":"# nalgebra","items":[[3,"Identity","nalgebra","Special identity matrix. All its operation are no-ops.",null,null],[3,"DMatrix","","Matrix with dimensions unknown at compile-time.",null,null],[3,"DMatrix1","","A stack-allocated dynamically sized matrix with at most one row and column.",null,null],[3,"DMatrix2","","A stack-allocated dynamically sized square or rectangular matrix with at most 2 rows and columns.",null,null],[3,"DMatrix3","","A stack-allocated dynamically sized square or rectangular matrix with at most 3 rows and columns.",null,null],[3,"DMatrix4","","A stack-allocated dynamically sized square or rectangular matrix with at most 4 rows and columns.",null,null],[3,"DMatrix5","","A stack-allocated dynamically sized square or rectangular matrix with at most 5 rows and columns.",null,null],[3,"DMatrix6","","A stack-allocated dynamically sized square or rectangular matrix with at most 6 rows and columns.",null,null],[3,"DVector","","Heap allocated, dynamically sized vector.",null,null],[12,"at","","Components of the vector. Contains as much elements as the vector dimension.",0,null],[3,"DVector1","","Stack-allocated, dynamically sized vector with a maximum size of 1.",null,null],[3,"DVector2","","Stack-allocated, dynamically sized vector with a maximum size of 2.",null,null],[3,"DVector3","","Stack-allocated, dynamically sized vector with a maximum size of 3.",null,null],[3,"DVector4","","Stack-allocated, dynamically sized vector with a maximum size of 4.",null,null],[3,"DVector5","","Stack-allocated, dynamically sized vector with a maximum size of 5.",null,null],[3,"DVector6","","Stack-allocated, dynamically sized vector with a maximum size of 6.",null,null],[3,"Isometry2","","Two dimensional **direct** isometry.",null,null],[12,"rotation","","The rotation applicable by this isometry.",1,null],[12,"translation","","The translation applicable by this isometry.",1,null],[3,"Isometry3","","Three dimensional **direct** isometry.",null,null],[12,"rotation","","The rotation applicable by this isometry.",2,null],[12,"translation","","The translation applicable by this isometry.",2,null],[3,"Similarity2","","A two-dimensional similarity transformation.",null,null],[12,"isometry","","The isometry applicable by this similarity transformation.",3,null],[3,"Similarity3","","A three-dimensional similarity transformation.",null,null],[12,"isometry","","The isometry applicable by this similarity transformation.",4,null],[3,"Matrix1","","Square matrix of dimension 1.",null,null],[12,"m11","","",5,null],[3,"Matrix2","","Square matrix of dimension 2.",null,null],[12,"m11","","",6,null],[12,"m21","","",6,null],[12,"m12","","",6,null],[12,"m22","","",6,null],[3,"Matrix3","","Square matrix of dimension 3.",null,null],[12,"m11","","",7,null],[12,"m21","","",7,null],[12,"m31","","",7,null],[12,"m12","","",7,null],[12,"m22","","",7,null],[12,"m32","","",7,null],[12,"m13","","",7,null],[12,"m23","","",7,null],[12,"m33","","",7,null],[3,"Matrix4","","Square matrix of dimension 4.",null,null],[12,"m11","","",8,null],[12,"m21","","",8,null],[12,"m31","","",8,null],[12,"m41","","",8,null],[12,"m12","","",8,null],[12,"m22","","",8,null],[12,"m32","","",8,null],[12,"m42","","",8,null],[12,"m13","","",8,null],[12,"m23","","",8,null],[12,"m33","","",8,null],[12,"m43","","",8,null],[12,"m14","","",8,null],[12,"m24","","",8,null],[12,"m34","","",8,null],[12,"m44","","",8,null],[3,"Matrix5","","Square matrix of dimension 5.",null,null],[12,"m11","","",9,null],[12,"m21","","",9,null],[12,"m31","","",9,null],[12,"m41","","",9,null],[12,"m51","","",9,null],[12,"m12","","",9,null],[12,"m22","","",9,null],[12,"m32","","",9,null],[12,"m42","","",9,null],[12,"m52","","",9,null],[12,"m13","","",9,null],[12,"m23","","",9,null],[12,"m33","","",9,null],[12,"m43","","",9,null],[12,"m53","","",9,null],[12,"m14","","",9,null],[12,"m24","","",9,null],[12,"m34","","",9,null],[12,"m44","","",9,null],[12,"m54","","",9,null],[12,"m15","","",9,null],[12,"m25","","",9,null],[12,"m35","","",9,null],[12,"m45","","",9,null],[12,"m55","","",9,null],[3,"Matrix6","","Square matrix of dimension 6.",null,null],[12,"m11","","",10,null],[12,"m21","","",10,null],[12,"m31","","",10,null],[12,"m41","","",10,null],[12,"m51","","",10,null],[12,"m61","","",10,null],[12,"m12","","",10,null],[12,"m22","","",10,null],[12,"m32","","",10,null],[12,"m42","","",10,null],[12,"m52","","",10,null],[12,"m62","","",10,null],[12,"m13","","",10,null],[12,"m23","","",10,null],[12,"m33","","",10,null],[12,"m43","","",10,null],[12,"m53","","",10,null],[12,"m63","","",10,null],[12,"m14","","",10,null],[12,"m24","","",10,null],[12,"m34","","",10,null],[12,"m44","","",10,null],[12,"m54","","",10,null],[12,"m64","","",10,null],[12,"m15","","",10,null],[12,"m25","","",10,null],[12,"m35","","",10,null],[12,"m45","","",10,null],[12,"m55","","",10,null],[12,"m65","","",10,null],[12,"m16","","",10,null],[12,"m26","","",10,null],[12,"m36","","",10,null],[12,"m46","","",10,null],[12,"m56","","",10,null],[12,"m66","","",10,null],[3,"Rotation2","","Two dimensional rotation matrix.",null,null],[3,"Rotation3","","Three dimensional rotation matrix.",null,null],[3,"Vector1","","Vector of dimension 1.",null,null],[12,"x","","First component of the vector.",11,null],[3,"Vector2","","Vector of dimension 2.",null,null],[12,"x","","First component of the vector.",12,null],[12,"y","","Second component of the vector.",12,null],[3,"Vector3","","Vector of dimension 3.",null,null],[12,"x","","First component of the vector.",13,null],[12,"y","","Second component of the vector.",13,null],[12,"z","","Third component of the vector.",13,null],[3,"Vector4","","Vector of dimension 4.",null,null],[12,"x","","First component of the vector.",14,null],[12,"y","","Second component of the vector.",14,null],[12,"z","","Third component of the vector.",14,null],[12,"w","","Fourth component of the vector.",14,null],[3,"Vector5","","Vector of dimension 5.",null,null],[12,"x","","First component of the vector.",15,null],[12,"y","","Second component of the vector.",15,null],[12,"z","","Third component of the vector.",15,null],[12,"w","","Fourth component of the vector.",15,null],[12,"a","","Fifth of the vector.",15,null],[3,"Vector6","","Vector of dimension 6.",null,null],[12,"x","","First component of the vector.",16,null],[12,"y","","Second component of the vector.",16,null],[12,"z","","Third component of the vector.",16,null],[12,"w","","Fourth component of the vector.",16,null],[12,"a","","Fifth of the vector.",16,null],[12,"b","","Sixth component of the vector.",16,null],[3,"Point1","","Point of dimension 1.",null,null],[12,"x","","First component of the point.",17,null],[3,"Point2","","Point of dimension 2.",null,null],[12,"x","","First component of the point.",18,null],[12,"y","","Second component of the point.",18,null],[3,"Point3","","Point of dimension 3.",null,null],[12,"x","","First component of the point.",19,null],[12,"y","","Second component of the point.",19,null],[12,"z","","Third component of the point.",19,null],[3,"Point4","","Point of dimension 4.",null,null],[12,"x","","First component of the point.",20,null],[12,"y","","Second component of the point.",20,null],[12,"z","","Third component of the point.",20,null],[12,"w","","Fourth component of the point.",20,null],[3,"Point5","","Point of dimension 5.",null,null],[12,"x","","First component of the point.",21,null],[12,"y","","Second component of the point.",21,null],[12,"z","","Third component of the point.",21,null],[12,"w","","Fourth component of the point.",21,null],[12,"a","","Fifth of the point.",21,null],[3,"Point6","","Point of dimension 6.",null,null],[12,"x","","First component of the point.",22,null],[12,"y","","Second component of the point.",22,null],[12,"z","","Third component of the point.",22,null],[12,"w","","Fourth component of the point.",22,null],[12,"a","","Fifth of the point.",22,null],[12,"b","","Sixth component of the point.",22,null],[3,"Perspective3","","A 3D perspective projection stored without any matrix.",null,null],[3,"PerspectiveMatrix3","","A 3D perspective projection stored as a 4D matrix.",null,null],[3,"Orthographic3","","A 3D orthographic projection stored without any matrix.",null,null],[3,"OrthographicMatrix3","","A 3D orthographic projection stored as a 4D matrix.",null,null],[3,"Quaternion","","A quaternion. See the `UnitQuaternion` type alias for a quaternion that can be used as a rotation.",null,null],[12,"w","","The scalar component of the quaternion.",23,null],[12,"i","","The first vector component of the quaternion.",23,null],[12,"j","","The second vector component of the quaternion.",23,null],[12,"k","","The third vector component of the quaternion.",23,null],[3,"Unit","","A wrapper that ensures the undelying algebraic entity has a unit norm.",null,null],[4,"PartialOrdering","","Result of a partial ordering.",null,null],[13,"PartialLess","","Result of a strict comparison.",24,null],[13,"PartialEqual","","Equality relationship.",24,null],[13,"PartialGreater","","Result of a strict comparison.",24,null],[13,"NotComparable","","Result of a comparison between two objects that are not comparable.",24,null],[5,"qr","","QR decomposition using Householder reflections.",null,null],[5,"householder_matrix","","Get the householder matrix corresponding to a reflexion to the hyperplane\ndefined by `vector`. It can be a reflexion contained in a subspace.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"v"}],"output":{"name":"m"}}],[5,"cholesky","","Cholesky decomposition G of a square symmetric positive definite matrix A, such that A = G * G^T",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"hessenberg","","Hessenberg\nReturns the matrix m in Hessenberg form and the corresponding similarity transformation",null,null],[5,"clamp","","Change the input value to ensure it is on the range `[min, max]`.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Same as `cmp::max`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"min","","Same as `cmp::min`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"inf","","Returns the infimum of `a` and `b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"sup","","Returns the supremum of `a` and `b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"partial_cmp","","Compare `a` and `b` using a partial ordering relation.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"partialordering"}}],[5,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a &lt; b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a &lt;= b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a &gt; b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a &gt;= b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_min","","Return the minimum of `a` and `b` if they are comparable.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"partial_max","","Return the maximum of `a` and `b` if they are comparable.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"identity","","Create a special identity object.",null,{"inputs":[],"output":{"name":"identity"}}],[5,"zero","","Create a zero-valued value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"is_zero","","Tests is a value is iqual to zero.",null,{"inputs":[{"name":"t"}],"output":{"name":"bool"}}],[5,"one","","Create a one-valued value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"origin","","Returns the trivial origin of an affine space.",null,{"inputs":[],"output":{"name":"p"}}],[5,"center","","Returns the center of two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[5,"distance","","Returns the distance between two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"n"}}],[5,"distance_squared","","Returns the squared distance between two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"n"}}],[5,"translation","","Gets the translation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"inverse_translation","","Gets the inverse translation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"append_translation","","Applies the translation `v` to a copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"m"}}],[5,"translate","","Applies a translation to a point.",null,{"inputs":[{"name":"m"},{"name":"p"}],"output":{"name":"p"}}],[5,"inverse_translate","","Applies an inverse translation to a point.",null,{"inputs":[{"name":"m"},{"name":"p"}],"output":{"name":"p"}}],[5,"rotation","","Gets the rotation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"inverse_rotation","","Gets the inverse rotation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"append_rotation","","Applies the rotation `v` to a copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"m"}}],[5,"prepend_rotation","","Pre-applies the rotation `v` to a copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"m"}}],[5,"rotate","","Applies a rotation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"inverse_rotate","","Applies an inverse rotation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"append_rotation_wrt_point","","Rotates a copy of `m` by `amount` using `center` as the pivot point.",null,{"inputs":[{"name":"m"},{"name":"av"},{"name":"lv"}],"output":{"name":"m"}}],[5,"append_rotation_wrt_center","","Rotates a copy of `m` by `amount` using `m.translation()` as the pivot point.",null,{"inputs":[{"name":"m"},{"name":"av"}],"output":{"name":"m"}}],[5,"angle_between","","Computes the angle of the rotation needed to transfom `a` to `b`.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"angletype"}}],[5,"rotation_between","","Computes the rotation needed to transform `a` to `b`.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"deltarotationtype"}}],[5,"to_rotation_matrix","","Builds a rotation matrix from `r`.",null,{"inputs":[{"name":"r"}],"output":{"name":"m"}}],[5,"absolute_rotate","","Applies a rotation using the absolute values of its components.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"transformation","","Gets the transformation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"t"}}],[5,"inverse_transformation","","Gets the inverse transformation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"t"}}],[5,"append_transformation","","Gets a transformed copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"t"}],"output":{"name":"m"}}],[5,"transform","","Applies a transformation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"inverse_transform","","Applies an inverse transformation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"dot","","Computes the dot product of two vectors.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"n"}}],[5,"norm","","Computes the L2 norm of a vector.",null,{"inputs":[{"name":"v"}],"output":{"name":"normtype"}}],[5,"norm_squared","","Computes the squared L2 norm of a vector.",null,{"inputs":[{"name":"v"}],"output":{"name":"normtype"}}],[5,"normalize","","Gets the normalized version of a vector.",null,{"inputs":[{"name":"v"}],"output":{"name":"v"}}],[5,"try_normalize","","Gets the normalized version of a vector or `None` if its norm is smaller than `min_norm`.",null,{"inputs":[{"name":"v"},{"name":"normtype"}],"output":{"name":"option"}}],[5,"determinant","","Computes the determinant of a square matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"n"}}],[5,"cross","","Computes the cross product of two vectors.",null,{"inputs":[{"name":"lv"},{"name":"lv"}],"output":{"name":"crossproducttype"}}],[5,"cross_matrix","","Given a vector, computes the matrix which, when multiplied by another vector, computes a cross\nproduct.",null,{"inputs":[{"name":"v"}],"output":{"name":"m"}}],[5,"to_homogeneous","","Converts a matrix or vector to homogeneous coordinates.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"from_homogeneous","","Converts a matrix or vector from homogeneous coordinates.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"sample_sphere","","Samples the unit sphere living on the dimension as the samples types.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"approx_eq","","Tests approximate equality.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"approx_eq_eps","","Tests approximate equality using a custom epsilon.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"n"}],"output":{"name":"bool"}}],[5,"abs","","Computes a component-wise absolute value.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"inverse","","Gets an inverted copy of a matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"option"}}],[5,"transpose","","Gets a transposed copy of a matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"m"}}],[5,"outer","","Computes the outer product of two vectors.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"outerproducttype"}}],[5,"covariance","","Computes the covariance of a set of observations.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"mean","","Computes the mean of a set of observations.",null,{"inputs":[{"name":"m"}],"output":{"name":"n"}}],[5,"eigen_qr","","Computes the eigenvalues and eigenvectors of a square matrix usin the QR algorithm.",null,null],[5,"new_identity","","Construct the identity matrix for a given dimension",null,{"inputs":[{"name":"usize"}],"output":{"name":"m"}}],[5,"repeat","","Create an object by repeating a value.",null,{"inputs":[{"name":"n"}],"output":{"name":"t"}}],[5,"canonical_basis","","Computes the canonical basis for a given dimension.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"orthonormal_subspace_basis","","Computes the basis of the orthonormal subspace of a given vector.",null,{"inputs":[{"name":"v"},{"name":"f"}],"output":null}],[5,"canonical_basis_element","","Gets the (0-based) i-th element of the canonical basis of V.",null,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[5,"diagonal","","Gets the diagonal of a square matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"dimension","","Gets the dimension an object lives in.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"shape","","Gets the indexable range of an object.",null,{"inputs":[{"name":"v"}],"output":{"name":"i"}}],[5,"cast","","Converts an object from one type to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[11,"clone","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"new_uninitialized","","Creates an uninitialized matrix.",25,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"from_element","","Builds a matrix filled with a given constant.",25,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is much faster than `from_row_vector` since a `DMatrix` stores its data\nin column-major order.",25,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is much faster than `from_row_vector` since a `DMatrix` stores its data\nin column-major order.",25,null],[11,"from_row_iter","","Builds a matrix filled with the components provided by a source that may be moved into an iterator.\nThe source contains the matrix data in row-major order.\nNote that `from_column_iter` is much faster than `from_row_iter` since a `DMatrix` stores its data\nin column-major order.",25,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"i"}],"output":{"name":"dmatrix"}}],[11,"from_column_iter","","Builds a matrix filled with the components provided by a source that may be moved into an iterator.\nThe source contains the matrix data in column-major order.\nNote that `from_column_iter` is much faster than `from_row_iter` since a `DMatrix` stores its data\nin column-major order.",25,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"i"}],"output":{"name":"dmatrix"}}],[11,"from_fn","","Builds a matrix filled with the results of a function applied to each of its component coordinates.",25,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix"}}],[11,"into_vector","","Transforms this matrix into an array. This consumes the matrix and is O(1).\nThe returned vector contains the matrix data in column-major order.",25,null],[11,"new_zeros","","Builds a matrix filled with zeros.",25,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",25,null],[11,"reset","","Set this matrix components to zero.",25,null],[11,"new_random","","Builds a matrix filled with random values.",25,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",25,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"nrows","","The number of row on the matrix.",25,null],[11,"ncols","","The number of columns on the matrix.",25,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",25,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",25,null],[11,"new_identity","","Builds an identity matrix.",25,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",25,null],[11,"unsafe_at","","Just like `at` without bounds checking.",25,null],[11,"swap","","",25,null],[11,"shape","","",25,null],[11,"index","","",25,null],[11,"index_mut","","",25,null],[11,"mul","","",25,null],[11,"mul","","",25,null],[11,"mul_assign","","",25,null],[11,"mul_assign","","",25,null],[11,"mul","","",25,null],[11,"mul","","",25,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"mul_assign","","",0,null],[11,"add","","",25,null],[11,"add","","",25,null],[11,"add_assign","","",25,null],[11,"add_assign","","",25,null],[11,"sub","","",25,null],[11,"sub_assign","","",25,null],[11,"sub","","",25,null],[11,"sub","","",25,null],[11,"sub_assign","","",25,null],[11,"sub_assign","","",25,null],[11,"inverse","","",25,null],[11,"inverse_mut","","",25,null],[11,"transpose","","",25,null],[11,"transpose_mut","","",25,null],[11,"mean","","",25,null],[11,"covariance","","",25,null],[11,"ncols","","",25,null],[11,"set_column","","",25,null],[11,"column","","",25,null],[11,"column_slice","","",25,null],[11,"nrows","","",25,null],[11,"set_row","","",25,null],[11,"row","","",25,null],[11,"row_slice","","",25,null],[11,"from_diagonal","","",25,{"inputs":[{"name":"dvector"}],"output":{"name":"dmatrix"}}],[11,"diagonal","","",25,null],[11,"approx_epsilon","","",25,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",25,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",25,null],[11,"approx_eq_ulps","","",25,null],[11,"fmt","","",25,null],[11,"mul","","",25,null],[11,"div","","",25,null],[11,"add","","",25,null],[11,"eq","","",26,null],[11,"clone","","",26,null],[11,"new_zeros","","Builds a matrix filled with zeros.",26,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",26,null],[11,"reset","","Set this matrix components to zero.",26,null],[11,"new_random","","Builds a matrix filled with random values.",26,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",26,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"nrows","","The number of row on the matrix.",26,null],[11,"ncols","","The number of columns on the matrix.",26,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",26,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",26,null],[11,"new_identity","","Builds an identity matrix.",26,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",26,null],[11,"unsafe_at","","Just like `at` without bounds checking.",26,null],[11,"swap","","",26,null],[11,"shape","","",26,null],[11,"index","","",26,null],[11,"index_mut","","",26,null],[11,"mul","","",26,null],[11,"mul","","",26,null],[11,"mul_assign","","",26,null],[11,"mul_assign","","",26,null],[11,"mul","","",26,null],[11,"mul","","",26,null],[11,"mul","","",27,null],[11,"mul","","",27,null],[11,"mul_assign","","",27,null],[11,"mul_assign","","",27,null],[11,"add","","",26,null],[11,"add","","",26,null],[11,"add_assign","","",26,null],[11,"add_assign","","",26,null],[11,"sub","","",26,null],[11,"sub_assign","","",26,null],[11,"sub","","",26,null],[11,"sub","","",26,null],[11,"sub_assign","","",26,null],[11,"sub_assign","","",26,null],[11,"inverse","","",26,null],[11,"inverse_mut","","",26,null],[11,"transpose","","",26,null],[11,"transpose_mut","","",26,null],[11,"mean","","",26,null],[11,"covariance","","",26,null],[11,"ncols","","",26,null],[11,"set_column","","",26,null],[11,"column","","",26,null],[11,"column_slice","","",26,null],[11,"nrows","","",26,null],[11,"set_row","","",26,null],[11,"row","","",26,null],[11,"row_slice","","",26,null],[11,"from_diagonal","","",26,{"inputs":[{"name":"dvector1"}],"output":{"name":"dmatrix1"}}],[11,"diagonal","","",26,null],[11,"approx_epsilon","","",26,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",26,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",26,null],[11,"approx_eq_ulps","","",26,null],[11,"fmt","","",26,null],[11,"mul","","",26,null],[11,"div","","",26,null],[11,"add","","",26,null],[11,"from_element","","Builds a matrix filled with a given constant.",26,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix1"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",26,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",26,null],[11,"from_fn","","Builds a matrix using an initialization function.",26,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix1"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",26,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix1"}}],[11,"eq","","",28,null],[11,"clone","","",28,null],[11,"new_zeros","","Builds a matrix filled with zeros.",28,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",28,null],[11,"reset","","Set this matrix components to zero.",28,null],[11,"new_random","","Builds a matrix filled with random values.",28,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",28,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"nrows","","The number of row on the matrix.",28,null],[11,"ncols","","The number of columns on the matrix.",28,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",28,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",28,null],[11,"new_identity","","Builds an identity matrix.",28,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",28,null],[11,"unsafe_at","","Just like `at` without bounds checking.",28,null],[11,"swap","","",28,null],[11,"shape","","",28,null],[11,"index","","",28,null],[11,"index_mut","","",28,null],[11,"mul","","",28,null],[11,"mul","","",28,null],[11,"mul_assign","","",28,null],[11,"mul_assign","","",28,null],[11,"mul","","",28,null],[11,"mul","","",28,null],[11,"mul","","",29,null],[11,"mul","","",29,null],[11,"mul_assign","","",29,null],[11,"mul_assign","","",29,null],[11,"add","","",28,null],[11,"add","","",28,null],[11,"add_assign","","",28,null],[11,"add_assign","","",28,null],[11,"sub","","",28,null],[11,"sub_assign","","",28,null],[11,"sub","","",28,null],[11,"sub","","",28,null],[11,"sub_assign","","",28,null],[11,"sub_assign","","",28,null],[11,"inverse","","",28,null],[11,"inverse_mut","","",28,null],[11,"transpose","","",28,null],[11,"transpose_mut","","",28,null],[11,"mean","","",28,null],[11,"covariance","","",28,null],[11,"ncols","","",28,null],[11,"set_column","","",28,null],[11,"column","","",28,null],[11,"column_slice","","",28,null],[11,"nrows","","",28,null],[11,"set_row","","",28,null],[11,"row","","",28,null],[11,"row_slice","","",28,null],[11,"from_diagonal","","",28,{"inputs":[{"name":"dvector2"}],"output":{"name":"dmatrix2"}}],[11,"diagonal","","",28,null],[11,"approx_epsilon","","",28,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",28,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",28,null],[11,"approx_eq_ulps","","",28,null],[11,"fmt","","",28,null],[11,"mul","","",28,null],[11,"div","","",28,null],[11,"add","","",28,null],[11,"from_element","","Builds a matrix filled with a given constant.",28,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix2"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",28,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",28,null],[11,"from_fn","","Builds a matrix using an initialization function.",28,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix2"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",28,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix2"}}],[11,"eq","","",30,null],[11,"clone","","",30,null],[11,"new_zeros","","Builds a matrix filled with zeros.",30,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",30,null],[11,"reset","","Set this matrix components to zero.",30,null],[11,"new_random","","Builds a matrix filled with random values.",30,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",30,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"nrows","","The number of row on the matrix.",30,null],[11,"ncols","","The number of columns on the matrix.",30,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",30,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",30,null],[11,"new_identity","","Builds an identity matrix.",30,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",30,null],[11,"unsafe_at","","Just like `at` without bounds checking.",30,null],[11,"swap","","",30,null],[11,"shape","","",30,null],[11,"index","","",30,null],[11,"index_mut","","",30,null],[11,"mul","","",30,null],[11,"mul","","",30,null],[11,"mul_assign","","",30,null],[11,"mul_assign","","",30,null],[11,"mul","","",30,null],[11,"mul","","",30,null],[11,"mul","","",31,null],[11,"mul","","",31,null],[11,"mul_assign","","",31,null],[11,"mul_assign","","",31,null],[11,"add","","",30,null],[11,"add","","",30,null],[11,"add_assign","","",30,null],[11,"add_assign","","",30,null],[11,"sub","","",30,null],[11,"sub_assign","","",30,null],[11,"sub","","",30,null],[11,"sub","","",30,null],[11,"sub_assign","","",30,null],[11,"sub_assign","","",30,null],[11,"inverse","","",30,null],[11,"inverse_mut","","",30,null],[11,"transpose","","",30,null],[11,"transpose_mut","","",30,null],[11,"mean","","",30,null],[11,"covariance","","",30,null],[11,"ncols","","",30,null],[11,"set_column","","",30,null],[11,"column","","",30,null],[11,"column_slice","","",30,null],[11,"nrows","","",30,null],[11,"set_row","","",30,null],[11,"row","","",30,null],[11,"row_slice","","",30,null],[11,"from_diagonal","","",30,{"inputs":[{"name":"dvector3"}],"output":{"name":"dmatrix3"}}],[11,"diagonal","","",30,null],[11,"approx_epsilon","","",30,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",30,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",30,null],[11,"approx_eq_ulps","","",30,null],[11,"fmt","","",30,null],[11,"mul","","",30,null],[11,"div","","",30,null],[11,"add","","",30,null],[11,"from_element","","Builds a matrix filled with a given constant.",30,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix3"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",30,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",30,null],[11,"from_fn","","Builds a matrix using an initialization function.",30,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix3"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",30,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix3"}}],[11,"eq","","",32,null],[11,"clone","","",32,null],[11,"new_zeros","","Builds a matrix filled with zeros.",32,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",32,null],[11,"reset","","Set this matrix components to zero.",32,null],[11,"new_random","","Builds a matrix filled with random values.",32,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",32,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"nrows","","The number of row on the matrix.",32,null],[11,"ncols","","The number of columns on the matrix.",32,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",32,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",32,null],[11,"new_identity","","Builds an identity matrix.",32,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",32,null],[11,"unsafe_at","","Just like `at` without bounds checking.",32,null],[11,"swap","","",32,null],[11,"shape","","",32,null],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"mul","","",32,null],[11,"mul","","",32,null],[11,"mul_assign","","",32,null],[11,"mul_assign","","",32,null],[11,"mul","","",32,null],[11,"mul","","",32,null],[11,"mul","","",33,null],[11,"mul","","",33,null],[11,"mul_assign","","",33,null],[11,"mul_assign","","",33,null],[11,"add","","",32,null],[11,"add","","",32,null],[11,"add_assign","","",32,null],[11,"add_assign","","",32,null],[11,"sub","","",32,null],[11,"sub_assign","","",32,null],[11,"sub","","",32,null],[11,"sub","","",32,null],[11,"sub_assign","","",32,null],[11,"sub_assign","","",32,null],[11,"inverse","","",32,null],[11,"inverse_mut","","",32,null],[11,"transpose","","",32,null],[11,"transpose_mut","","",32,null],[11,"mean","","",32,null],[11,"covariance","","",32,null],[11,"ncols","","",32,null],[11,"set_column","","",32,null],[11,"column","","",32,null],[11,"column_slice","","",32,null],[11,"nrows","","",32,null],[11,"set_row","","",32,null],[11,"row","","",32,null],[11,"row_slice","","",32,null],[11,"from_diagonal","","",32,{"inputs":[{"name":"dvector4"}],"output":{"name":"dmatrix4"}}],[11,"diagonal","","",32,null],[11,"approx_epsilon","","",32,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",32,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",32,null],[11,"approx_eq_ulps","","",32,null],[11,"fmt","","",32,null],[11,"mul","","",32,null],[11,"div","","",32,null],[11,"add","","",32,null],[11,"from_element","","Builds a matrix filled with a given constant.",32,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix4"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",32,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",32,null],[11,"from_fn","","Builds a matrix using an initialization function.",32,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix4"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",32,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix4"}}],[11,"eq","","",34,null],[11,"clone","","",34,null],[11,"new_zeros","","Builds a matrix filled with zeros.",34,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",34,null],[11,"reset","","Set this matrix components to zero.",34,null],[11,"new_random","","Builds a matrix filled with random values.",34,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",34,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"nrows","","The number of row on the matrix.",34,null],[11,"ncols","","The number of columns on the matrix.",34,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",34,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",34,null],[11,"new_identity","","Builds an identity matrix.",34,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",34,null],[11,"unsafe_at","","Just like `at` without bounds checking.",34,null],[11,"swap","","",34,null],[11,"shape","","",34,null],[11,"index","","",34,null],[11,"index_mut","","",34,null],[11,"mul","","",34,null],[11,"mul","","",34,null],[11,"mul_assign","","",34,null],[11,"mul_assign","","",34,null],[11,"mul","","",34,null],[11,"mul","","",34,null],[11,"mul","","",35,null],[11,"mul","","",35,null],[11,"mul_assign","","",35,null],[11,"mul_assign","","",35,null],[11,"add","","",34,null],[11,"add","","",34,null],[11,"add_assign","","",34,null],[11,"add_assign","","",34,null],[11,"sub","","",34,null],[11,"sub_assign","","",34,null],[11,"sub","","",34,null],[11,"sub","","",34,null],[11,"sub_assign","","",34,null],[11,"sub_assign","","",34,null],[11,"inverse","","",34,null],[11,"inverse_mut","","",34,null],[11,"transpose","","",34,null],[11,"transpose_mut","","",34,null],[11,"mean","","",34,null],[11,"covariance","","",34,null],[11,"ncols","","",34,null],[11,"set_column","","",34,null],[11,"column","","",34,null],[11,"column_slice","","",34,null],[11,"nrows","","",34,null],[11,"set_row","","",34,null],[11,"row","","",34,null],[11,"row_slice","","",34,null],[11,"from_diagonal","","",34,{"inputs":[{"name":"dvector5"}],"output":{"name":"dmatrix5"}}],[11,"diagonal","","",34,null],[11,"approx_epsilon","","",34,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",34,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",34,null],[11,"approx_eq_ulps","","",34,null],[11,"fmt","","",34,null],[11,"mul","","",34,null],[11,"div","","",34,null],[11,"add","","",34,null],[11,"from_element","","Builds a matrix filled with a given constant.",34,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix5"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",34,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",34,null],[11,"from_fn","","Builds a matrix using an initialization function.",34,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix5"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",34,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix5"}}],[11,"eq","","",36,null],[11,"clone","","",36,null],[11,"new_zeros","","Builds a matrix filled with zeros.",36,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",36,null],[11,"reset","","Set this matrix components to zero.",36,null],[11,"new_random","","Builds a matrix filled with random values.",36,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",36,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"nrows","","The number of row on the matrix.",36,null],[11,"ncols","","The number of columns on the matrix.",36,null],[11,"as_vector","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",36,null],[11,"as_mut_vector","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",36,null],[11,"new_identity","","Builds an identity matrix.",36,{"inputs":[{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",36,null],[11,"unsafe_at","","Just like `at` without bounds checking.",36,null],[11,"swap","","",36,null],[11,"shape","","",36,null],[11,"index","","",36,null],[11,"index_mut","","",36,null],[11,"mul","","",36,null],[11,"mul","","",36,null],[11,"mul_assign","","",36,null],[11,"mul_assign","","",36,null],[11,"mul","","",36,null],[11,"mul","","",36,null],[11,"mul","","",37,null],[11,"mul","","",37,null],[11,"mul_assign","","",37,null],[11,"mul_assign","","",37,null],[11,"add","","",36,null],[11,"add","","",36,null],[11,"add_assign","","",36,null],[11,"add_assign","","",36,null],[11,"sub","","",36,null],[11,"sub_assign","","",36,null],[11,"sub","","",36,null],[11,"sub","","",36,null],[11,"sub_assign","","",36,null],[11,"sub_assign","","",36,null],[11,"inverse","","",36,null],[11,"inverse_mut","","",36,null],[11,"transpose","","",36,null],[11,"transpose_mut","","",36,null],[11,"mean","","",36,null],[11,"covariance","","",36,null],[11,"ncols","","",36,null],[11,"set_column","","",36,null],[11,"column","","",36,null],[11,"column_slice","","",36,null],[11,"nrows","","",36,null],[11,"set_row","","",36,null],[11,"row","","",36,null],[11,"row_slice","","",36,null],[11,"from_diagonal","","",36,{"inputs":[{"name":"dvector6"}],"output":{"name":"dmatrix6"}}],[11,"diagonal","","",36,null],[11,"approx_epsilon","","",36,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",36,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",36,null],[11,"approx_eq_ulps","","",36,null],[11,"fmt","","",36,null],[11,"mul","","",36,null],[11,"div","","",36,null],[11,"add","","",36,null],[11,"from_element","","Builds a matrix filled with a given constant.",36,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmatrix6"}}],[11,"from_row_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",36,null],[11,"from_column_vector","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_column_vector` is a lot faster than `from_row_vector` since a `$dmatrix` stores its data\nin column-major order.",36,null],[11,"from_fn","","Builds a matrix using an initialization function.",36,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmatrix6"}}],[11,"new_uninitialized","","Creates a new matrix with uninitialized components (with `mem::uninitialized()`).",36,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"dmatrix6"}}],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"new_uninitialized","","Creates an uninitialized vector.",0,{"inputs":[{"name":"usize"}],"output":{"name":"dvector"}}],[11,"from_element","","Builds a vector filled with a constant.",0,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",0,null],[11,"from_fn","","Builds a vector filled with the results of a function applied to each of its component coordinates.",0,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector"}}],[11,"len","","The vector length.",0,null],[11,"from_iter","","",0,{"inputs":[{"name":"i"}],"output":{"name":"dvector"}}],[11,"outer","","",0,null],[11,"is_zero","","Tests if all components of the vector are zeroes.",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"shape","","",0,null],[11,"swap","","",0,null],[11,"unsafe_at","","",0,null],[11,"unsafe_set","","",0,null],[11,"index","","",0,null],[11,"index_mut","","",0,null],[11,"iter","","",0,null],[11,"iter_mut","","",0,null],[11,"axpy","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"div_assign","","",0,null],[11,"add","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"sub_assign","","",0,null],[11,"neg","","",0,null],[11,"dot","","",0,null],[11,"norm_squared","","",0,null],[11,"normalize","","",0,null],[11,"normalize_mut","","",0,null],[11,"try_normalize","","",0,null],[11,"try_normalize_mut","","",0,null],[11,"mean","","",0,null],[11,"approx_epsilon","","",0,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",0,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",0,null],[11,"approx_eq_ulps","","",0,null],[11,"new_zeros","","Builds a vector filled with zeros.",0,{"inputs":[{"name":"usize"}],"output":{"name":"dvector"}}],[11,"new_ones","","Builds a vector filled with ones.",0,{"inputs":[{"name":"usize"}],"output":{"name":"dvector"}}],[11,"new_random","","Builds a vector filled with random values.",0,{"inputs":[{"name":"usize"}],"output":{"name":"dvector"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",0,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",0,null],[11,"is_zero","","Tests if all components of the vector are zeroes.",27,null],[11,"as_ref","","",27,null],[11,"as_mut","","",27,null],[11,"shape","","",27,null],[11,"swap","","",27,null],[11,"unsafe_at","","",27,null],[11,"unsafe_set","","",27,null],[11,"index","","",27,null],[11,"index_mut","","",27,null],[11,"iter","","",27,null],[11,"iter_mut","","",27,null],[11,"axpy","","",27,null],[11,"mul","","",27,null],[11,"mul","","",27,null],[11,"mul_assign","","",27,null],[11,"mul_assign","","",27,null],[11,"div","","",27,null],[11,"div","","",27,null],[11,"div_assign","","",27,null],[11,"div_assign","","",27,null],[11,"add","","",27,null],[11,"add","","",27,null],[11,"add_assign","","",27,null],[11,"add_assign","","",27,null],[11,"sub","","",27,null],[11,"sub","","",27,null],[11,"sub_assign","","",27,null],[11,"sub_assign","","",27,null],[11,"neg","","",27,null],[11,"dot","","",27,null],[11,"norm_squared","","",27,null],[11,"normalize","","",27,null],[11,"normalize_mut","","",27,null],[11,"try_normalize","","",27,null],[11,"try_normalize_mut","","",27,null],[11,"mean","","",27,null],[11,"approx_epsilon","","",27,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",27,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",27,null],[11,"approx_eq_ulps","","",27,null],[11,"new_zeros","","Builds a vector filled with zeros.",27,{"inputs":[{"name":"usize"}],"output":{"name":"dvector1"}}],[11,"new_ones","","Builds a vector filled with ones.",27,{"inputs":[{"name":"usize"}],"output":{"name":"dvector1"}}],[11,"new_random","","Builds a vector filled with random values.",27,{"inputs":[{"name":"usize"}],"output":{"name":"dvector1"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",27,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",27,null],[11,"len","","The number of elements of this vector.",27,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",27,{"inputs":[{"name":"usize"}],"output":{"name":"dvector1"}}],[11,"eq","","",27,null],[11,"clone","","",27,null],[11,"from_element","","Builds a vector filled with a constant.",27,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector1"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",27,null],[11,"from_fn","","Builds a vector filled with the result of a function.",27,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector1"}}],[11,"from_iter","","",27,{"inputs":[{"name":"i"}],"output":{"name":"dvector1"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",29,null],[11,"as_ref","","",29,null],[11,"as_mut","","",29,null],[11,"shape","","",29,null],[11,"swap","","",29,null],[11,"unsafe_at","","",29,null],[11,"unsafe_set","","",29,null],[11,"index","","",29,null],[11,"index_mut","","",29,null],[11,"iter","","",29,null],[11,"iter_mut","","",29,null],[11,"axpy","","",29,null],[11,"mul","","",29,null],[11,"mul","","",29,null],[11,"mul_assign","","",29,null],[11,"mul_assign","","",29,null],[11,"div","","",29,null],[11,"div","","",29,null],[11,"div_assign","","",29,null],[11,"div_assign","","",29,null],[11,"add","","",29,null],[11,"add","","",29,null],[11,"add_assign","","",29,null],[11,"add_assign","","",29,null],[11,"sub","","",29,null],[11,"sub","","",29,null],[11,"sub_assign","","",29,null],[11,"sub_assign","","",29,null],[11,"neg","","",29,null],[11,"dot","","",29,null],[11,"norm_squared","","",29,null],[11,"normalize","","",29,null],[11,"normalize_mut","","",29,null],[11,"try_normalize","","",29,null],[11,"try_normalize_mut","","",29,null],[11,"mean","","",29,null],[11,"approx_epsilon","","",29,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",29,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",29,null],[11,"approx_eq_ulps","","",29,null],[11,"new_zeros","","Builds a vector filled with zeros.",29,{"inputs":[{"name":"usize"}],"output":{"name":"dvector2"}}],[11,"new_ones","","Builds a vector filled with ones.",29,{"inputs":[{"name":"usize"}],"output":{"name":"dvector2"}}],[11,"new_random","","Builds a vector filled with random values.",29,{"inputs":[{"name":"usize"}],"output":{"name":"dvector2"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",29,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",29,null],[11,"len","","The number of elements of this vector.",29,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",29,{"inputs":[{"name":"usize"}],"output":{"name":"dvector2"}}],[11,"eq","","",29,null],[11,"clone","","",29,null],[11,"from_element","","Builds a vector filled with a constant.",29,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector2"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",29,null],[11,"from_fn","","Builds a vector filled with the result of a function.",29,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector2"}}],[11,"from_iter","","",29,{"inputs":[{"name":"i"}],"output":{"name":"dvector2"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",31,null],[11,"as_ref","","",31,null],[11,"as_mut","","",31,null],[11,"shape","","",31,null],[11,"swap","","",31,null],[11,"unsafe_at","","",31,null],[11,"unsafe_set","","",31,null],[11,"index","","",31,null],[11,"index_mut","","",31,null],[11,"iter","","",31,null],[11,"iter_mut","","",31,null],[11,"axpy","","",31,null],[11,"mul","","",31,null],[11,"mul","","",31,null],[11,"mul_assign","","",31,null],[11,"mul_assign","","",31,null],[11,"div","","",31,null],[11,"div","","",31,null],[11,"div_assign","","",31,null],[11,"div_assign","","",31,null],[11,"add","","",31,null],[11,"add","","",31,null],[11,"add_assign","","",31,null],[11,"add_assign","","",31,null],[11,"sub","","",31,null],[11,"sub","","",31,null],[11,"sub_assign","","",31,null],[11,"sub_assign","","",31,null],[11,"neg","","",31,null],[11,"dot","","",31,null],[11,"norm_squared","","",31,null],[11,"normalize","","",31,null],[11,"normalize_mut","","",31,null],[11,"try_normalize","","",31,null],[11,"try_normalize_mut","","",31,null],[11,"mean","","",31,null],[11,"approx_epsilon","","",31,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",31,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",31,null],[11,"approx_eq_ulps","","",31,null],[11,"new_zeros","","Builds a vector filled with zeros.",31,{"inputs":[{"name":"usize"}],"output":{"name":"dvector3"}}],[11,"new_ones","","Builds a vector filled with ones.",31,{"inputs":[{"name":"usize"}],"output":{"name":"dvector3"}}],[11,"new_random","","Builds a vector filled with random values.",31,{"inputs":[{"name":"usize"}],"output":{"name":"dvector3"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",31,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",31,null],[11,"len","","The number of elements of this vector.",31,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",31,{"inputs":[{"name":"usize"}],"output":{"name":"dvector3"}}],[11,"eq","","",31,null],[11,"clone","","",31,null],[11,"from_element","","Builds a vector filled with a constant.",31,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector3"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",31,null],[11,"from_fn","","Builds a vector filled with the result of a function.",31,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector3"}}],[11,"from_iter","","",31,{"inputs":[{"name":"i"}],"output":{"name":"dvector3"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",33,null],[11,"as_ref","","",33,null],[11,"as_mut","","",33,null],[11,"shape","","",33,null],[11,"swap","","",33,null],[11,"unsafe_at","","",33,null],[11,"unsafe_set","","",33,null],[11,"index","","",33,null],[11,"index_mut","","",33,null],[11,"iter","","",33,null],[11,"iter_mut","","",33,null],[11,"axpy","","",33,null],[11,"mul","","",33,null],[11,"mul","","",33,null],[11,"mul_assign","","",33,null],[11,"mul_assign","","",33,null],[11,"div","","",33,null],[11,"div","","",33,null],[11,"div_assign","","",33,null],[11,"div_assign","","",33,null],[11,"add","","",33,null],[11,"add","","",33,null],[11,"add_assign","","",33,null],[11,"add_assign","","",33,null],[11,"sub","","",33,null],[11,"sub","","",33,null],[11,"sub_assign","","",33,null],[11,"sub_assign","","",33,null],[11,"neg","","",33,null],[11,"dot","","",33,null],[11,"norm_squared","","",33,null],[11,"normalize","","",33,null],[11,"normalize_mut","","",33,null],[11,"try_normalize","","",33,null],[11,"try_normalize_mut","","",33,null],[11,"mean","","",33,null],[11,"approx_epsilon","","",33,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",33,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",33,null],[11,"approx_eq_ulps","","",33,null],[11,"new_zeros","","Builds a vector filled with zeros.",33,{"inputs":[{"name":"usize"}],"output":{"name":"dvector4"}}],[11,"new_ones","","Builds a vector filled with ones.",33,{"inputs":[{"name":"usize"}],"output":{"name":"dvector4"}}],[11,"new_random","","Builds a vector filled with random values.",33,{"inputs":[{"name":"usize"}],"output":{"name":"dvector4"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",33,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",33,null],[11,"len","","The number of elements of this vector.",33,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",33,{"inputs":[{"name":"usize"}],"output":{"name":"dvector4"}}],[11,"eq","","",33,null],[11,"clone","","",33,null],[11,"from_element","","Builds a vector filled with a constant.",33,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector4"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",33,null],[11,"from_fn","","Builds a vector filled with the result of a function.",33,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector4"}}],[11,"from_iter","","",33,{"inputs":[{"name":"i"}],"output":{"name":"dvector4"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",35,null],[11,"as_ref","","",35,null],[11,"as_mut","","",35,null],[11,"shape","","",35,null],[11,"swap","","",35,null],[11,"unsafe_at","","",35,null],[11,"unsafe_set","","",35,null],[11,"index","","",35,null],[11,"index_mut","","",35,null],[11,"iter","","",35,null],[11,"iter_mut","","",35,null],[11,"axpy","","",35,null],[11,"mul","","",35,null],[11,"mul","","",35,null],[11,"mul_assign","","",35,null],[11,"mul_assign","","",35,null],[11,"div","","",35,null],[11,"div","","",35,null],[11,"div_assign","","",35,null],[11,"div_assign","","",35,null],[11,"add","","",35,null],[11,"add","","",35,null],[11,"add_assign","","",35,null],[11,"add_assign","","",35,null],[11,"sub","","",35,null],[11,"sub","","",35,null],[11,"sub_assign","","",35,null],[11,"sub_assign","","",35,null],[11,"neg","","",35,null],[11,"dot","","",35,null],[11,"norm_squared","","",35,null],[11,"normalize","","",35,null],[11,"normalize_mut","","",35,null],[11,"try_normalize","","",35,null],[11,"try_normalize_mut","","",35,null],[11,"mean","","",35,null],[11,"approx_epsilon","","",35,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",35,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",35,null],[11,"approx_eq_ulps","","",35,null],[11,"new_zeros","","Builds a vector filled with zeros.",35,{"inputs":[{"name":"usize"}],"output":{"name":"dvector5"}}],[11,"new_ones","","Builds a vector filled with ones.",35,{"inputs":[{"name":"usize"}],"output":{"name":"dvector5"}}],[11,"new_random","","Builds a vector filled with random values.",35,{"inputs":[{"name":"usize"}],"output":{"name":"dvector5"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",35,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",35,null],[11,"len","","The number of elements of this vector.",35,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",35,{"inputs":[{"name":"usize"}],"output":{"name":"dvector5"}}],[11,"eq","","",35,null],[11,"clone","","",35,null],[11,"from_element","","Builds a vector filled with a constant.",35,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector5"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",35,null],[11,"from_fn","","Builds a vector filled with the result of a function.",35,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector5"}}],[11,"from_iter","","",35,{"inputs":[{"name":"i"}],"output":{"name":"dvector5"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",37,null],[11,"as_ref","","",37,null],[11,"as_mut","","",37,null],[11,"shape","","",37,null],[11,"swap","","",37,null],[11,"unsafe_at","","",37,null],[11,"unsafe_set","","",37,null],[11,"index","","",37,null],[11,"index_mut","","",37,null],[11,"iter","","",37,null],[11,"iter_mut","","",37,null],[11,"axpy","","",37,null],[11,"mul","","",37,null],[11,"mul","","",37,null],[11,"mul_assign","","",37,null],[11,"mul_assign","","",37,null],[11,"div","","",37,null],[11,"div","","",37,null],[11,"div_assign","","",37,null],[11,"div_assign","","",37,null],[11,"add","","",37,null],[11,"add","","",37,null],[11,"add_assign","","",37,null],[11,"add_assign","","",37,null],[11,"sub","","",37,null],[11,"sub","","",37,null],[11,"sub_assign","","",37,null],[11,"sub_assign","","",37,null],[11,"neg","","",37,null],[11,"dot","","",37,null],[11,"norm_squared","","",37,null],[11,"normalize","","",37,null],[11,"normalize_mut","","",37,null],[11,"try_normalize","","",37,null],[11,"try_normalize_mut","","",37,null],[11,"mean","","",37,null],[11,"approx_epsilon","","",37,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",37,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",37,null],[11,"approx_eq_ulps","","",37,null],[11,"new_zeros","","Builds a vector filled with zeros.",37,{"inputs":[{"name":"usize"}],"output":{"name":"dvector6"}}],[11,"new_ones","","Builds a vector filled with ones.",37,{"inputs":[{"name":"usize"}],"output":{"name":"dvector6"}}],[11,"new_random","","Builds a vector filled with random values.",37,{"inputs":[{"name":"usize"}],"output":{"name":"dvector6"}}],[11,"canonical_basis_with_dimension","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",37,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",37,null],[11,"len","","The number of elements of this vector.",37,null],[11,"new_uninitialized","","Creates an uninitialized vector of dimension `dimension`.",37,{"inputs":[{"name":"usize"}],"output":{"name":"dvector6"}}],[11,"eq","","",37,null],[11,"clone","","",37,null],[11,"from_element","","Builds a vector filled with a constant.",37,{"inputs":[{"name":"usize"},{"name":"n"}],"output":{"name":"dvector6"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",37,null],[11,"from_fn","","Builds a vector filled with the result of a function.",37,{"inputs":[{"name":"usize"},{"name":"f"}],"output":{"name":"dvector6"}}],[11,"from_iter","","",37,{"inputs":[{"name":"i"}],"output":{"name":"dvector6"}}],[11,"fmt","","",11,null],[11,"hash","","",11,null],[11,"clone","","",11,null],[11,"decode","","",11,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"add","","",11,null],[11,"add_assign","","",11,null],[11,"add","","",11,null],[11,"sub","","",11,null],[11,"sub_assign","","",11,null],[11,"sub","","",11,null],[11,"mul","","",11,null],[11,"mul_assign","","",11,null],[11,"mul","","",11,null],[11,"div","","",11,null],[11,"div_assign","","",11,null],[11,"div","","",11,null],[11,"zero","","",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"is_zero","","",11,null],[11,"one","","",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"abs","","",11,{"inputs":[{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"dot","","",11,null],[11,"norm_squared","","",11,null],[11,"normalize","","",11,null],[11,"normalize_mut","","",11,null],[11,"try_normalize","","",11,null],[11,"try_normalize_mut","","",11,null],[11,"translation","","",11,null],[11,"inverse_translation","","",11,null],[11,"append_translation_mut","","",11,null],[11,"append_translation","","",11,null],[11,"prepend_translation_mut","","",11,null],[11,"prepend_translation","","",11,null],[11,"set_translation","","",11,null],[11,"translate","","",11,null],[11,"inverse_translate","","",11,null],[11,"rotate","","",11,null],[11,"inverse_rotate","","",11,null],[11,"rotate","","",17,null],[11,"inverse_rotate","","",17,null],[11,"transform","","",11,null],[11,"inverse_transform","","",11,null],[11,"to_point","","Converts this vector to a point.",11,null],[11,"as_point","","Reinterprets this vector as a point.",11,null],[11,"mean","","",11,null],[11,"fmt","","",11,null],[11,"neg","","",11,null],[11,"repeat","","",11,{"inputs":[{"name":"n"}],"output":{"name":"vector1"}}],[11,"rand","","",11,{"inputs":[{"name":"r"}],"output":{"name":"vector1"}}],[11,"add_assign","","",11,null],[11,"add","","",11,null],[11,"add","","",11,null],[11,"sub_assign","","",11,null],[11,"sub","","",11,null],[11,"sub","","",11,null],[11,"mul_assign","","",11,null],[11,"mul","","",11,null],[11,"mul","","",11,null],[11,"div_assign","","",11,null],[11,"div","","",11,null],[11,"div","","",11,null],[11,"new","","Creation from component values.",11,{"inputs":[{"name":"n"}],"output":{"name":"vector1"}}],[11,"inf","","",11,null],[11,"sup","","",11,null],[11,"partial_cmp","","",11,null],[11,"partial_lt","","",11,null],[11,"partial_le","","",11,null],[11,"partial_gt","","",11,null],[11,"partial_ge","","",11,null],[11,"from","","",11,{"inputs":[{"name":"vector1"}],"output":{"name":"vector1"}}],[11,"approx_epsilon","","",11,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",11,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",11,null],[11,"approx_eq_eps","","",11,null],[11,"approx_eq_ulps","","",11,null],[11,"at_fast","","Unsafe read access to a vector element by index.",11,null],[11,"set_fast","","Unsafe write access to a vector element by index.",11,null],[11,"axpy","","",11,null],[11,"max_value","","",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"min_value","","",11,{"inputs":[],"output":{"name":"vector1"}}],[11,"len","","The dimension of this entity.",11,null],[11,"as_ref","","",11,null],[11,"as_mut","","",11,null],[11,"from","","",11,null],[11,"dimension","","",11,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",11,null],[11,"swap","","",11,null],[11,"unsafe_at","","",11,null],[11,"unsafe_set","","",11,null],[11,"index","","",11,null],[11,"index_mut","","",11,null],[11,"iter","","",11,null],[11,"iter_mut","","",11,null],[11,"from_iter","","",11,{"inputs":[{"name":"i"}],"output":{"name":"vector1"}}],[11,"to_homogeneous","","",11,null],[11,"from","","",11,{"inputs":[{"name":"vector2"}],"output":{"name":"vector1"}}],[11,"fmt","","",12,null],[11,"hash","","",12,null],[11,"clone","","",12,null],[11,"decode","","",12,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"add","","",12,null],[11,"add_assign","","",12,null],[11,"add","","",12,null],[11,"sub","","",12,null],[11,"sub_assign","","",12,null],[11,"sub","","",12,null],[11,"mul","","",12,null],[11,"mul_assign","","",12,null],[11,"mul","","",12,null],[11,"div","","",12,null],[11,"div_assign","","",12,null],[11,"div","","",12,null],[11,"zero","","",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"is_zero","","",12,null],[11,"one","","",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"abs","","",12,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"dot","","",12,null],[11,"norm_squared","","",12,null],[11,"normalize","","",12,null],[11,"normalize_mut","","",12,null],[11,"try_normalize","","",12,null],[11,"try_normalize_mut","","",12,null],[11,"translation","","",12,null],[11,"inverse_translation","","",12,null],[11,"append_translation_mut","","",12,null],[11,"append_translation","","",12,null],[11,"prepend_translation_mut","","",12,null],[11,"prepend_translation","","",12,null],[11,"set_translation","","",12,null],[11,"translate","","",12,null],[11,"inverse_translate","","",12,null],[11,"rotate","","",12,null],[11,"inverse_rotate","","",12,null],[11,"rotate","","",18,null],[11,"inverse_rotate","","",18,null],[11,"transform","","",12,null],[11,"inverse_transform","","",12,null],[11,"to_point","","Converts this vector to a point.",12,null],[11,"as_point","","Reinterprets this vector as a point.",12,null],[11,"mean","","",12,null],[11,"fmt","","",12,null],[11,"neg","","",12,null],[11,"repeat","","",12,{"inputs":[{"name":"n"}],"output":{"name":"vector2"}}],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"vector2"}}],[11,"add_assign","","",12,null],[11,"add","","",12,null],[11,"add","","",12,null],[11,"sub_assign","","",12,null],[11,"sub","","",12,null],[11,"sub","","",12,null],[11,"mul_assign","","",12,null],[11,"mul","","",12,null],[11,"mul","","",12,null],[11,"div_assign","","",12,null],[11,"div","","",12,null],[11,"div","","",12,null],[11,"new","","Creation from component values.",12,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"vector2"}}],[11,"inf","","",12,null],[11,"sup","","",12,null],[11,"partial_cmp","","",12,null],[11,"partial_lt","","",12,null],[11,"partial_le","","",12,null],[11,"partial_gt","","",12,null],[11,"partial_ge","","",12,null],[11,"from","","",12,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[11,"approx_epsilon","","",12,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",12,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",12,null],[11,"approx_eq_eps","","",12,null],[11,"approx_eq_ulps","","",12,null],[11,"at_fast","","Unsafe read access to a vector element by index.",12,null],[11,"set_fast","","Unsafe write access to a vector element by index.",12,null],[11,"axpy","","",12,null],[11,"max_value","","",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"min_value","","",12,{"inputs":[],"output":{"name":"vector2"}}],[11,"len","","The dimension of this entity.",12,null],[11,"as_ref","","",12,null],[11,"as_mut","","",12,null],[11,"from","","",12,null],[11,"dimension","","",12,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",12,null],[11,"swap","","",12,null],[11,"unsafe_at","","",12,null],[11,"unsafe_set","","",12,null],[11,"index","","",12,null],[11,"index_mut","","",12,null],[11,"iter","","",12,null],[11,"iter_mut","","",12,null],[11,"from_iter","","",12,{"inputs":[{"name":"i"}],"output":{"name":"vector2"}}],[11,"to_homogeneous","","",12,null],[11,"from","","",12,{"inputs":[{"name":"vector3"}],"output":{"name":"vector2"}}],[11,"fmt","","",13,null],[11,"hash","","",13,null],[11,"clone","","",13,null],[11,"decode","","",13,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"add","","",13,null],[11,"add_assign","","",13,null],[11,"add","","",13,null],[11,"sub","","",13,null],[11,"sub_assign","","",13,null],[11,"sub","","",13,null],[11,"mul","","",13,null],[11,"mul_assign","","",13,null],[11,"mul","","",13,null],[11,"div","","",13,null],[11,"div_assign","","",13,null],[11,"div","","",13,null],[11,"zero","","",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"is_zero","","",13,null],[11,"one","","",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"abs","","",13,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"z","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"dot","","",13,null],[11,"norm_squared","","",13,null],[11,"normalize","","",13,null],[11,"normalize_mut","","",13,null],[11,"try_normalize","","",13,null],[11,"try_normalize_mut","","",13,null],[11,"translation","","",13,null],[11,"inverse_translation","","",13,null],[11,"append_translation_mut","","",13,null],[11,"append_translation","","",13,null],[11,"prepend_translation_mut","","",13,null],[11,"prepend_translation","","",13,null],[11,"set_translation","","",13,null],[11,"translate","","",13,null],[11,"inverse_translate","","",13,null],[11,"rotate","","",13,null],[11,"inverse_rotate","","",13,null],[11,"rotate","","",19,null],[11,"inverse_rotate","","",19,null],[11,"transform","","",13,null],[11,"inverse_transform","","",13,null],[11,"to_point","","Converts this vector to a point.",13,null],[11,"as_point","","Reinterprets this vector as a point.",13,null],[11,"mean","","",13,null],[11,"fmt","","",13,null],[11,"neg","","",13,null],[11,"repeat","","",13,{"inputs":[{"name":"n"}],"output":{"name":"vector3"}}],[11,"rand","","",13,{"inputs":[{"name":"r"}],"output":{"name":"vector3"}}],[11,"add_assign","","",13,null],[11,"add","","",13,null],[11,"add","","",13,null],[11,"sub_assign","","",13,null],[11,"sub","","",13,null],[11,"sub","","",13,null],[11,"mul_assign","","",13,null],[11,"mul","","",13,null],[11,"mul","","",13,null],[11,"div_assign","","",13,null],[11,"div","","",13,null],[11,"div","","",13,null],[11,"new","","Creation from component values.",13,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vector3"}}],[11,"inf","","",13,null],[11,"sup","","",13,null],[11,"partial_cmp","","",13,null],[11,"partial_lt","","",13,null],[11,"partial_le","","",13,null],[11,"partial_gt","","",13,null],[11,"partial_ge","","",13,null],[11,"from","","",13,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[11,"approx_epsilon","","",13,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",13,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",13,null],[11,"approx_eq_eps","","",13,null],[11,"approx_eq_ulps","","",13,null],[11,"at_fast","","Unsafe read access to a vector element by index.",13,null],[11,"set_fast","","Unsafe write access to a vector element by index.",13,null],[11,"axpy","","",13,null],[11,"max_value","","",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"min_value","","",13,{"inputs":[],"output":{"name":"vector3"}}],[11,"len","","The dimension of this entity.",13,null],[11,"as_ref","","",13,null],[11,"as_mut","","",13,null],[11,"from","","",13,null],[11,"dimension","","",13,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",13,null],[11,"swap","","",13,null],[11,"unsafe_at","","",13,null],[11,"unsafe_set","","",13,null],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"iter","","",13,null],[11,"iter_mut","","",13,null],[11,"from_iter","","",13,{"inputs":[{"name":"i"}],"output":{"name":"vector3"}}],[11,"to_homogeneous","","",13,null],[11,"from","","",13,{"inputs":[{"name":"vector4"}],"output":{"name":"vector3"}}],[11,"fmt","","",14,null],[11,"hash","","",14,null],[11,"clone","","",14,null],[11,"decode","","",14,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"add","","",14,null],[11,"add_assign","","",14,null],[11,"add","","",14,null],[11,"sub","","",14,null],[11,"sub_assign","","",14,null],[11,"sub","","",14,null],[11,"mul","","",14,null],[11,"mul_assign","","",14,null],[11,"mul","","",14,null],[11,"div","","",14,null],[11,"div_assign","","",14,null],[11,"div","","",14,null],[11,"zero","","",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"is_zero","","",14,null],[11,"one","","",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"abs","","",14,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"z","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"w","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"dot","","",14,null],[11,"norm_squared","","",14,null],[11,"normalize","","",14,null],[11,"normalize_mut","","",14,null],[11,"try_normalize","","",14,null],[11,"try_normalize_mut","","",14,null],[11,"translation","","",14,null],[11,"inverse_translation","","",14,null],[11,"append_translation_mut","","",14,null],[11,"append_translation","","",14,null],[11,"prepend_translation_mut","","",14,null],[11,"prepend_translation","","",14,null],[11,"set_translation","","",14,null],[11,"translate","","",14,null],[11,"inverse_translate","","",14,null],[11,"rotate","","",14,null],[11,"inverse_rotate","","",14,null],[11,"rotate","","",20,null],[11,"inverse_rotate","","",20,null],[11,"transform","","",14,null],[11,"inverse_transform","","",14,null],[11,"to_point","","Converts this vector to a point.",14,null],[11,"as_point","","Reinterprets this vector as a point.",14,null],[11,"mean","","",14,null],[11,"fmt","","",14,null],[11,"neg","","",14,null],[11,"repeat","","",14,{"inputs":[{"name":"n"}],"output":{"name":"vector4"}}],[11,"rand","","",14,{"inputs":[{"name":"r"}],"output":{"name":"vector4"}}],[11,"add_assign","","",14,null],[11,"add","","",14,null],[11,"add","","",14,null],[11,"sub_assign","","",14,null],[11,"sub","","",14,null],[11,"sub","","",14,null],[11,"mul_assign","","",14,null],[11,"mul","","",14,null],[11,"mul","","",14,null],[11,"div_assign","","",14,null],[11,"div","","",14,null],[11,"div","","",14,null],[11,"new","","Creation from component values.",14,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vector4"}}],[11,"inf","","",14,null],[11,"sup","","",14,null],[11,"partial_cmp","","",14,null],[11,"partial_lt","","",14,null],[11,"partial_le","","",14,null],[11,"partial_gt","","",14,null],[11,"partial_ge","","",14,null],[11,"from","","",14,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[11,"approx_epsilon","","",14,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",14,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",14,null],[11,"approx_eq_eps","","",14,null],[11,"approx_eq_ulps","","",14,null],[11,"at_fast","","Unsafe read access to a vector element by index.",14,null],[11,"set_fast","","Unsafe write access to a vector element by index.",14,null],[11,"axpy","","",14,null],[11,"max_value","","",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"min_value","","",14,{"inputs":[],"output":{"name":"vector4"}}],[11,"len","","The dimension of this entity.",14,null],[11,"as_ref","","",14,null],[11,"as_mut","","",14,null],[11,"from","","",14,null],[11,"dimension","","",14,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",14,null],[11,"swap","","",14,null],[11,"unsafe_at","","",14,null],[11,"unsafe_set","","",14,null],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"iter","","",14,null],[11,"iter_mut","","",14,null],[11,"from_iter","","",14,{"inputs":[{"name":"i"}],"output":{"name":"vector4"}}],[11,"canonical_basis","","",14,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",14,{"inputs":[{"name":"vector4"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"to_homogeneous","","",14,null],[11,"from","","",14,{"inputs":[{"name":"vector5"}],"output":{"name":"vector4"}}],[11,"fmt","","",15,null],[11,"hash","","",15,null],[11,"clone","","",15,null],[11,"decode","","",15,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"add","","",15,null],[11,"add_assign","","",15,null],[11,"add","","",15,null],[11,"sub","","",15,null],[11,"sub_assign","","",15,null],[11,"sub","","",15,null],[11,"mul","","",15,null],[11,"mul_assign","","",15,null],[11,"mul","","",15,null],[11,"div","","",15,null],[11,"div_assign","","",15,null],[11,"div","","",15,null],[11,"zero","","",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"is_zero","","",15,null],[11,"one","","",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"abs","","",15,{"inputs":[{"name":"vector5"}],"output":{"name":"vector5"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"z","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"w","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"a","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"dot","","",15,null],[11,"norm_squared","","",15,null],[11,"normalize","","",15,null],[11,"normalize_mut","","",15,null],[11,"try_normalize","","",15,null],[11,"try_normalize_mut","","",15,null],[11,"translation","","",15,null],[11,"inverse_translation","","",15,null],[11,"append_translation_mut","","",15,null],[11,"append_translation","","",15,null],[11,"prepend_translation_mut","","",15,null],[11,"prepend_translation","","",15,null],[11,"set_translation","","",15,null],[11,"translate","","",15,null],[11,"inverse_translate","","",15,null],[11,"rotate","","",15,null],[11,"inverse_rotate","","",15,null],[11,"rotate","","",21,null],[11,"inverse_rotate","","",21,null],[11,"transform","","",15,null],[11,"inverse_transform","","",15,null],[11,"to_point","","Converts this vector to a point.",15,null],[11,"as_point","","Reinterprets this vector as a point.",15,null],[11,"mean","","",15,null],[11,"fmt","","",15,null],[11,"neg","","",15,null],[11,"repeat","","",15,{"inputs":[{"name":"n"}],"output":{"name":"vector5"}}],[11,"rand","","",15,{"inputs":[{"name":"r"}],"output":{"name":"vector5"}}],[11,"add_assign","","",15,null],[11,"add","","",15,null],[11,"add","","",15,null],[11,"sub_assign","","",15,null],[11,"sub","","",15,null],[11,"sub","","",15,null],[11,"mul_assign","","",15,null],[11,"mul","","",15,null],[11,"mul","","",15,null],[11,"div_assign","","",15,null],[11,"div","","",15,null],[11,"div","","",15,null],[11,"new","","Creation from component values.",15,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vector5"}}],[11,"inf","","",15,null],[11,"sup","","",15,null],[11,"partial_cmp","","",15,null],[11,"partial_lt","","",15,null],[11,"partial_le","","",15,null],[11,"partial_gt","","",15,null],[11,"partial_ge","","",15,null],[11,"from","","",15,{"inputs":[{"name":"vector5"}],"output":{"name":"vector5"}}],[11,"approx_epsilon","","",15,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",15,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",15,null],[11,"approx_eq_eps","","",15,null],[11,"approx_eq_ulps","","",15,null],[11,"at_fast","","Unsafe read access to a vector element by index.",15,null],[11,"set_fast","","Unsafe write access to a vector element by index.",15,null],[11,"axpy","","",15,null],[11,"max_value","","",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"min_value","","",15,{"inputs":[],"output":{"name":"vector5"}}],[11,"len","","The dimension of this entity.",15,null],[11,"as_ref","","",15,null],[11,"as_mut","","",15,null],[11,"from","","",15,null],[11,"dimension","","",15,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",15,null],[11,"swap","","",15,null],[11,"unsafe_at","","",15,null],[11,"unsafe_set","","",15,null],[11,"index","","",15,null],[11,"index_mut","","",15,null],[11,"iter","","",15,null],[11,"iter_mut","","",15,null],[11,"from_iter","","",15,{"inputs":[{"name":"i"}],"output":{"name":"vector5"}}],[11,"canonical_basis","","",15,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",15,{"inputs":[{"name":"vector5"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"to_homogeneous","","",15,null],[11,"from","","",15,{"inputs":[{"name":"vector6"}],"output":{"name":"vector5"}}],[11,"fmt","","",16,null],[11,"hash","","",16,null],[11,"clone","","",16,null],[11,"decode","","",16,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"add","","",16,null],[11,"add_assign","","",16,null],[11,"add","","",16,null],[11,"sub","","",16,null],[11,"sub_assign","","",16,null],[11,"sub","","",16,null],[11,"mul","","",16,null],[11,"mul_assign","","",16,null],[11,"mul","","",16,null],[11,"div","","",16,null],[11,"div_assign","","",16,null],[11,"div","","",16,null],[11,"zero","","",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"is_zero","","",16,null],[11,"one","","",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"abs","","",16,{"inputs":[{"name":"vector6"}],"output":{"name":"vector6"}}],[11,"x","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"y","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"z","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"w","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"a","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"b","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"dot","","",16,null],[11,"norm_squared","","",16,null],[11,"normalize","","",16,null],[11,"normalize_mut","","",16,null],[11,"try_normalize","","",16,null],[11,"try_normalize_mut","","",16,null],[11,"translation","","",16,null],[11,"inverse_translation","","",16,null],[11,"append_translation_mut","","",16,null],[11,"append_translation","","",16,null],[11,"prepend_translation_mut","","",16,null],[11,"prepend_translation","","",16,null],[11,"set_translation","","",16,null],[11,"translate","","",16,null],[11,"inverse_translate","","",16,null],[11,"rotate","","",16,null],[11,"inverse_rotate","","",16,null],[11,"rotate","","",22,null],[11,"inverse_rotate","","",22,null],[11,"transform","","",16,null],[11,"inverse_transform","","",16,null],[11,"to_point","","Converts this vector to a point.",16,null],[11,"as_point","","Reinterprets this vector as a point.",16,null],[11,"mean","","",16,null],[11,"fmt","","",16,null],[11,"neg","","",16,null],[11,"repeat","","",16,{"inputs":[{"name":"n"}],"output":{"name":"vector6"}}],[11,"rand","","",16,{"inputs":[{"name":"r"}],"output":{"name":"vector6"}}],[11,"add_assign","","",16,null],[11,"add","","",16,null],[11,"add","","",16,null],[11,"sub_assign","","",16,null],[11,"sub","","",16,null],[11,"sub","","",16,null],[11,"mul_assign","","",16,null],[11,"mul","","",16,null],[11,"mul","","",16,null],[11,"div_assign","","",16,null],[11,"div","","",16,null],[11,"div","","",16,null],[11,"new","","Creation from component values.",16,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vector6"}}],[11,"inf","","",16,null],[11,"sup","","",16,null],[11,"partial_cmp","","",16,null],[11,"partial_lt","","",16,null],[11,"partial_le","","",16,null],[11,"partial_gt","","",16,null],[11,"partial_ge","","",16,null],[11,"from","","",16,{"inputs":[{"name":"vector6"}],"output":{"name":"vector6"}}],[11,"approx_epsilon","","",16,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",16,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",16,null],[11,"approx_eq_eps","","",16,null],[11,"approx_eq_ulps","","",16,null],[11,"at_fast","","Unsafe read access to a vector element by index.",16,null],[11,"set_fast","","Unsafe write access to a vector element by index.",16,null],[11,"axpy","","",16,null],[11,"max_value","","",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"min_value","","",16,{"inputs":[],"output":{"name":"vector6"}}],[11,"len","","The dimension of this entity.",16,null],[11,"as_ref","","",16,null],[11,"as_mut","","",16,null],[11,"from","","",16,null],[11,"dimension","","",16,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",16,null],[11,"swap","","",16,null],[11,"unsafe_at","","",16,null],[11,"unsafe_set","","",16,null],[11,"index","","",16,null],[11,"index_mut","","",16,null],[11,"iter","","",16,null],[11,"iter_mut","","",16,null],[11,"from_iter","","",16,{"inputs":[{"name":"i"}],"output":{"name":"vector6"}}],[11,"canonical_basis","","",16,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",16,{"inputs":[{"name":"vector6"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",16,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",17,null],[11,"hash","","",17,null],[11,"clone","","",17,null],[11,"decode","","",17,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"origin","","",17,{"inputs":[],"output":{"name":"point1"}}],[11,"is_origin","","",17,null],[11,"sub","","",17,null],[11,"add","","",17,null],[11,"add_assign","","",17,null],[11,"sub","","",17,null],[11,"sub_assign","","",17,null],[11,"to_vector","","Converts this point to its associated vector.",17,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",17,null],[11,"to_vector","","",17,null],[11,"as_vector","","",17,null],[11,"set_coords","","",17,null],[11,"fmt","","",17,null],[11,"to_homogeneous","","",17,null],[11,"from","","",17,{"inputs":[{"name":"point2"}],"output":{"name":"point1"}}],[11,"neg","","",17,null],[11,"repeat","","",17,{"inputs":[{"name":"n"}],"output":{"name":"point1"}}],[11,"rand","","",17,{"inputs":[{"name":"r"}],"output":{"name":"point1"}}],[11,"add_assign","","",17,null],[11,"add","","",17,null],[11,"add","","",17,null],[11,"sub_assign","","",17,null],[11,"sub","","",17,null],[11,"sub","","",17,null],[11,"mul_assign","","",17,null],[11,"mul","","",17,null],[11,"mul","","",17,null],[11,"div_assign","","",17,null],[11,"div","","",17,null],[11,"div","","",17,null],[11,"new","","Creation from component values.",17,{"inputs":[{"name":"n"}],"output":{"name":"point1"}}],[11,"inf","","",17,null],[11,"sup","","",17,null],[11,"partial_cmp","","",17,null],[11,"partial_lt","","",17,null],[11,"partial_le","","",17,null],[11,"partial_gt","","",17,null],[11,"partial_ge","","",17,null],[11,"from","","",17,{"inputs":[{"name":"point1"}],"output":{"name":"point1"}}],[11,"approx_epsilon","","",17,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",17,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",17,null],[11,"approx_eq_eps","","",17,null],[11,"approx_eq_ulps","","",17,null],[11,"at_fast","","Unsafe read access to a vector element by index.",17,null],[11,"set_fast","","Unsafe write access to a vector element by index.",17,null],[11,"axpy","","",17,null],[11,"max_value","","",17,{"inputs":[],"output":{"name":"point1"}}],[11,"min_value","","",17,{"inputs":[],"output":{"name":"point1"}}],[11,"len","","The dimension of this entity.",17,null],[11,"as_ref","","",17,null],[11,"as_mut","","",17,null],[11,"from","","",17,null],[11,"dimension","","",17,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",17,null],[11,"swap","","",17,null],[11,"unsafe_at","","",17,null],[11,"unsafe_set","","",17,null],[11,"index","","",17,null],[11,"index_mut","","",17,null],[11,"iter","","",17,null],[11,"iter_mut","","",17,null],[11,"from_iter","","",17,{"inputs":[{"name":"i"}],"output":{"name":"point1"}}],[11,"fmt","","",18,null],[11,"hash","","",18,null],[11,"clone","","",18,null],[11,"decode","","",18,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"origin","","",18,{"inputs":[],"output":{"name":"point2"}}],[11,"is_origin","","",18,null],[11,"sub","","",18,null],[11,"add","","",18,null],[11,"add_assign","","",18,null],[11,"sub","","",18,null],[11,"sub_assign","","",18,null],[11,"to_vector","","Converts this point to its associated vector.",18,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",18,null],[11,"to_vector","","",18,null],[11,"as_vector","","",18,null],[11,"set_coords","","",18,null],[11,"fmt","","",18,null],[11,"to_homogeneous","","",18,null],[11,"from","","",18,{"inputs":[{"name":"point3"}],"output":{"name":"point2"}}],[11,"neg","","",18,null],[11,"repeat","","",18,{"inputs":[{"name":"n"}],"output":{"name":"point2"}}],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"point2"}}],[11,"add_assign","","",18,null],[11,"add","","",18,null],[11,"add","","",18,null],[11,"sub_assign","","",18,null],[11,"sub","","",18,null],[11,"sub","","",18,null],[11,"mul_assign","","",18,null],[11,"mul","","",18,null],[11,"mul","","",18,null],[11,"div_assign","","",18,null],[11,"div","","",18,null],[11,"div","","",18,null],[11,"new","","Creation from component values.",18,{"inputs":[{"name":"n"},{"name":"n"}],"output":{"name":"point2"}}],[11,"inf","","",18,null],[11,"sup","","",18,null],[11,"partial_cmp","","",18,null],[11,"partial_lt","","",18,null],[11,"partial_le","","",18,null],[11,"partial_gt","","",18,null],[11,"partial_ge","","",18,null],[11,"from","","",18,{"inputs":[{"name":"point2"}],"output":{"name":"point2"}}],[11,"approx_epsilon","","",18,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",18,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",18,null],[11,"approx_eq_eps","","",18,null],[11,"approx_eq_ulps","","",18,null],[11,"at_fast","","Unsafe read access to a vector element by index.",18,null],[11,"set_fast","","Unsafe write access to a vector element by index.",18,null],[11,"axpy","","",18,null],[11,"max_value","","",18,{"inputs":[],"output":{"name":"point2"}}],[11,"min_value","","",18,{"inputs":[],"output":{"name":"point2"}}],[11,"len","","The dimension of this entity.",18,null],[11,"as_ref","","",18,null],[11,"as_mut","","",18,null],[11,"from","","",18,null],[11,"dimension","","",18,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",18,null],[11,"swap","","",18,null],[11,"unsafe_at","","",18,null],[11,"unsafe_set","","",18,null],[11,"index","","",18,null],[11,"index_mut","","",18,null],[11,"iter","","",18,null],[11,"iter_mut","","",18,null],[11,"from_iter","","",18,{"inputs":[{"name":"i"}],"output":{"name":"point2"}}],[11,"fmt","","",19,null],[11,"hash","","",19,null],[11,"clone","","",19,null],[11,"decode","","",19,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"origin","","",19,{"inputs":[],"output":{"name":"point3"}}],[11,"is_origin","","",19,null],[11,"sub","","",19,null],[11,"add","","",19,null],[11,"add_assign","","",19,null],[11,"sub","","",19,null],[11,"sub_assign","","",19,null],[11,"to_vector","","Converts this point to its associated vector.",19,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",19,null],[11,"to_vector","","",19,null],[11,"as_vector","","",19,null],[11,"set_coords","","",19,null],[11,"fmt","","",19,null],[11,"to_homogeneous","","",19,null],[11,"from","","",19,{"inputs":[{"name":"point4"}],"output":{"name":"point3"}}],[11,"neg","","",19,null],[11,"repeat","","",19,{"inputs":[{"name":"n"}],"output":{"name":"point3"}}],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"point3"}}],[11,"add_assign","","",19,null],[11,"add","","",19,null],[11,"add","","",19,null],[11,"sub_assign","","",19,null],[11,"sub","","",19,null],[11,"sub","","",19,null],[11,"mul_assign","","",19,null],[11,"mul","","",19,null],[11,"mul","","",19,null],[11,"div_assign","","",19,null],[11,"div","","",19,null],[11,"div","","",19,null],[11,"new","","Creation from component values.",19,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"point3"}}],[11,"inf","","",19,null],[11,"sup","","",19,null],[11,"partial_cmp","","",19,null],[11,"partial_lt","","",19,null],[11,"partial_le","","",19,null],[11,"partial_gt","","",19,null],[11,"partial_ge","","",19,null],[11,"from","","",19,{"inputs":[{"name":"point3"}],"output":{"name":"point3"}}],[11,"approx_epsilon","","",19,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",19,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",19,null],[11,"approx_eq_eps","","",19,null],[11,"approx_eq_ulps","","",19,null],[11,"at_fast","","Unsafe read access to a vector element by index.",19,null],[11,"set_fast","","Unsafe write access to a vector element by index.",19,null],[11,"axpy","","",19,null],[11,"max_value","","",19,{"inputs":[],"output":{"name":"point3"}}],[11,"min_value","","",19,{"inputs":[],"output":{"name":"point3"}}],[11,"len","","The dimension of this entity.",19,null],[11,"as_ref","","",19,null],[11,"as_mut","","",19,null],[11,"from","","",19,null],[11,"dimension","","",19,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",19,null],[11,"swap","","",19,null],[11,"unsafe_at","","",19,null],[11,"unsafe_set","","",19,null],[11,"index","","",19,null],[11,"index_mut","","",19,null],[11,"iter","","",19,null],[11,"iter_mut","","",19,null],[11,"from_iter","","",19,{"inputs":[{"name":"i"}],"output":{"name":"point3"}}],[11,"fmt","","",20,null],[11,"hash","","",20,null],[11,"clone","","",20,null],[11,"decode","","",20,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"origin","","",20,{"inputs":[],"output":{"name":"point4"}}],[11,"is_origin","","",20,null],[11,"sub","","",20,null],[11,"add","","",20,null],[11,"add_assign","","",20,null],[11,"sub","","",20,null],[11,"sub_assign","","",20,null],[11,"to_vector","","Converts this point to its associated vector.",20,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",20,null],[11,"to_vector","","",20,null],[11,"as_vector","","",20,null],[11,"set_coords","","",20,null],[11,"fmt","","",20,null],[11,"to_homogeneous","","",20,null],[11,"from","","",20,{"inputs":[{"name":"point5"}],"output":{"name":"point4"}}],[11,"neg","","",20,null],[11,"repeat","","",20,{"inputs":[{"name":"n"}],"output":{"name":"point4"}}],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"point4"}}],[11,"add_assign","","",20,null],[11,"add","","",20,null],[11,"add","","",20,null],[11,"sub_assign","","",20,null],[11,"sub","","",20,null],[11,"sub","","",20,null],[11,"mul_assign","","",20,null],[11,"mul","","",20,null],[11,"mul","","",20,null],[11,"div_assign","","",20,null],[11,"div","","",20,null],[11,"div","","",20,null],[11,"new","","Creation from component values.",20,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"point4"}}],[11,"inf","","",20,null],[11,"sup","","",20,null],[11,"partial_cmp","","",20,null],[11,"partial_lt","","",20,null],[11,"partial_le","","",20,null],[11,"partial_gt","","",20,null],[11,"partial_ge","","",20,null],[11,"from","","",20,{"inputs":[{"name":"point4"}],"output":{"name":"point4"}}],[11,"approx_epsilon","","",20,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",20,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",20,null],[11,"approx_eq_eps","","",20,null],[11,"approx_eq_ulps","","",20,null],[11,"at_fast","","Unsafe read access to a vector element by index.",20,null],[11,"set_fast","","Unsafe write access to a vector element by index.",20,null],[11,"axpy","","",20,null],[11,"max_value","","",20,{"inputs":[],"output":{"name":"point4"}}],[11,"min_value","","",20,{"inputs":[],"output":{"name":"point4"}}],[11,"len","","The dimension of this entity.",20,null],[11,"as_ref","","",20,null],[11,"as_mut","","",20,null],[11,"from","","",20,null],[11,"dimension","","",20,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",20,null],[11,"swap","","",20,null],[11,"unsafe_at","","",20,null],[11,"unsafe_set","","",20,null],[11,"index","","",20,null],[11,"index_mut","","",20,null],[11,"iter","","",20,null],[11,"iter_mut","","",20,null],[11,"from_iter","","",20,{"inputs":[{"name":"i"}],"output":{"name":"point4"}}],[11,"fmt","","",21,null],[11,"hash","","",21,null],[11,"clone","","",21,null],[11,"decode","","",21,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"origin","","",21,{"inputs":[],"output":{"name":"point5"}}],[11,"is_origin","","",21,null],[11,"sub","","",21,null],[11,"add","","",21,null],[11,"add_assign","","",21,null],[11,"sub","","",21,null],[11,"sub_assign","","",21,null],[11,"to_vector","","Converts this point to its associated vector.",21,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",21,null],[11,"to_vector","","",21,null],[11,"as_vector","","",21,null],[11,"set_coords","","",21,null],[11,"fmt","","",21,null],[11,"to_homogeneous","","",21,null],[11,"from","","",21,{"inputs":[{"name":"point6"}],"output":{"name":"point5"}}],[11,"neg","","",21,null],[11,"repeat","","",21,{"inputs":[{"name":"n"}],"output":{"name":"point5"}}],[11,"rand","","",21,{"inputs":[{"name":"r"}],"output":{"name":"point5"}}],[11,"add_assign","","",21,null],[11,"add","","",21,null],[11,"add","","",21,null],[11,"sub_assign","","",21,null],[11,"sub","","",21,null],[11,"sub","","",21,null],[11,"mul_assign","","",21,null],[11,"mul","","",21,null],[11,"mul","","",21,null],[11,"div_assign","","",21,null],[11,"div","","",21,null],[11,"div","","",21,null],[11,"new","","Creation from component values.",21,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"point5"}}],[11,"inf","","",21,null],[11,"sup","","",21,null],[11,"partial_cmp","","",21,null],[11,"partial_lt","","",21,null],[11,"partial_le","","",21,null],[11,"partial_gt","","",21,null],[11,"partial_ge","","",21,null],[11,"from","","",21,{"inputs":[{"name":"point5"}],"output":{"name":"point5"}}],[11,"approx_epsilon","","",21,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",21,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",21,null],[11,"approx_eq_eps","","",21,null],[11,"approx_eq_ulps","","",21,null],[11,"at_fast","","Unsafe read access to a vector element by index.",21,null],[11,"set_fast","","Unsafe write access to a vector element by index.",21,null],[11,"axpy","","",21,null],[11,"max_value","","",21,{"inputs":[],"output":{"name":"point5"}}],[11,"min_value","","",21,{"inputs":[],"output":{"name":"point5"}}],[11,"len","","The dimension of this entity.",21,null],[11,"as_ref","","",21,null],[11,"as_mut","","",21,null],[11,"from","","",21,null],[11,"dimension","","",21,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",21,null],[11,"swap","","",21,null],[11,"unsafe_at","","",21,null],[11,"unsafe_set","","",21,null],[11,"index","","",21,null],[11,"index_mut","","",21,null],[11,"iter","","",21,null],[11,"iter_mut","","",21,null],[11,"from_iter","","",21,{"inputs":[{"name":"i"}],"output":{"name":"point5"}}],[11,"fmt","","",22,null],[11,"hash","","",22,null],[11,"clone","","",22,null],[11,"decode","","",22,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"origin","","",22,{"inputs":[],"output":{"name":"point6"}}],[11,"is_origin","","",22,null],[11,"sub","","",22,null],[11,"add","","",22,null],[11,"add_assign","","",22,null],[11,"sub","","",22,null],[11,"sub_assign","","",22,null],[11,"to_vector","","Converts this point to its associated vector.",22,null],[11,"as_vector","","Converts a reference to this point to a reference to its associated vector.",22,null],[11,"to_vector","","",22,null],[11,"as_vector","","",22,null],[11,"set_coords","","",22,null],[11,"fmt","","",22,null],[11,"neg","","",22,null],[11,"repeat","","",22,{"inputs":[{"name":"n"}],"output":{"name":"point6"}}],[11,"rand","","",22,{"inputs":[{"name":"r"}],"output":{"name":"point6"}}],[11,"add_assign","","",22,null],[11,"add","","",22,null],[11,"add","","",22,null],[11,"sub_assign","","",22,null],[11,"sub","","",22,null],[11,"sub","","",22,null],[11,"mul_assign","","",22,null],[11,"mul","","",22,null],[11,"mul","","",22,null],[11,"div_assign","","",22,null],[11,"div","","",22,null],[11,"div","","",22,null],[11,"new","","Creation from component values.",22,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"point6"}}],[11,"inf","","",22,null],[11,"sup","","",22,null],[11,"partial_cmp","","",22,null],[11,"partial_lt","","",22,null],[11,"partial_le","","",22,null],[11,"partial_gt","","",22,null],[11,"partial_ge","","",22,null],[11,"from","","",22,{"inputs":[{"name":"point6"}],"output":{"name":"point6"}}],[11,"approx_epsilon","","",22,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",22,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",22,null],[11,"approx_eq_eps","","",22,null],[11,"approx_eq_ulps","","",22,null],[11,"at_fast","","Unsafe read access to a vector element by index.",22,null],[11,"set_fast","","Unsafe write access to a vector element by index.",22,null],[11,"axpy","","",22,null],[11,"max_value","","",22,{"inputs":[],"output":{"name":"point6"}}],[11,"min_value","","",22,{"inputs":[],"output":{"name":"point6"}}],[11,"len","","The dimension of this entity.",22,null],[11,"as_ref","","",22,null],[11,"as_mut","","",22,null],[11,"from","","",22,null],[11,"dimension","","",22,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",22,null],[11,"swap","","",22,null],[11,"unsafe_at","","",22,null],[11,"unsafe_set","","",22,null],[11,"index","","",22,null],[11,"index_mut","","",22,null],[11,"iter","","",22,null],[11,"iter_mut","","",22,null],[11,"from_iter","","",22,{"inputs":[{"name":"i"}],"output":{"name":"point6"}}],[11,"fmt","","",23,null],[11,"hash","","",23,null],[11,"clone","","",23,null],[11,"decode","","",23,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"vector","","The vector part `(i, j, k)` of this quaternion.",23,null],[11,"scalar","","The scalar part `w` of this quaternion.",23,null],[11,"conjugate","","Compute the conjugate of this quaternion.",23,null],[11,"conjugate_mut","","Replaces this quaternion by its conjugate.",23,null],[11,"from_parts","","Creates a new quaternion from its scalar and vector parts.",23,{"inputs":[{"name":"n"},{"name":"vector3"}],"output":{"name":"quaternion"}}],[11,"from_polar_decomposition","","Creates a new quaternion from its polar decomposition.",23,{"inputs":[{"name":"n"},{"name":"n"},{"name":"unit"}],"output":{"name":"quaternion"}}],[11,"polar_decomposition","","The polar decomposition of this quaternion.",23,null],[11,"inverse","","",23,null],[11,"inverse_mut","","",23,null],[11,"norm_squared","","",23,null],[11,"normalize","","",23,null],[11,"normalize_mut","","",23,null],[11,"try_normalize","","",23,null],[11,"try_normalize_mut","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"exp","","Compute the exponential of a quaternion.",23,null],[11,"ln","","Compute the natural logarithm of a quaternion.",23,null],[11,"powf","","Raise the quaternion to a given floating power.",23,null],[11,"one","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",23,null],[11,"mul","","",13,null],[11,"mul","","",19,null],[11,"mul_assign","","",13,null],[11,"mul_assign","","",19,null],[11,"zero","","",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"is_zero","","",23,null],[11,"w","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"i","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"j","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"k","","Create the element of the canonical basis having this component set to one and\nall the others set to zero.",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"add","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"sub","","",23,null],[11,"from_iter","","",23,{"inputs":[{"name":"i"}],"output":{"name":"quaternion"}}],[11,"neg","","",23,null],[11,"repeat","","",23,{"inputs":[{"name":"n"}],"output":{"name":"quaternion"}}],[11,"rand","","",23,{"inputs":[{"name":"r"}],"output":{"name":"quaternion"}}],[11,"add_assign","","",23,null],[11,"add","","",23,null],[11,"add","","",23,null],[11,"sub_assign","","",23,null],[11,"sub","","",23,null],[11,"sub","","",23,null],[11,"mul_assign","","",23,null],[11,"mul","","",23,null],[11,"mul","","",23,null],[11,"div_assign","","",23,null],[11,"div","","",23,null],[11,"div","","",23,null],[11,"new","","Creation from component values.",23,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"quaternion"}}],[11,"inf","","",23,null],[11,"sup","","",23,null],[11,"partial_cmp","","",23,null],[11,"partial_lt","","",23,null],[11,"partial_le","","",23,null],[11,"partial_gt","","",23,null],[11,"partial_ge","","",23,null],[11,"from","","",23,{"inputs":[{"name":"quaternion"}],"output":{"name":"quaternion"}}],[11,"approx_epsilon","","",23,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",23,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",23,null],[11,"approx_eq_eps","","",23,null],[11,"approx_eq_ulps","","",23,null],[11,"at_fast","","Unsafe read access to a vector element by index.",23,null],[11,"set_fast","","Unsafe write access to a vector element by index.",23,null],[11,"axpy","","",23,null],[11,"max_value","","",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"min_value","","",23,{"inputs":[],"output":{"name":"quaternion"}}],[11,"len","","The dimension of this entity.",23,null],[11,"as_ref","","",23,null],[11,"as_mut","","",23,null],[11,"from","","",23,null],[11,"dimension","","",23,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",23,null],[11,"swap","","",23,null],[11,"unsafe_at","","",23,null],[11,"unsafe_set","","",23,null],[11,"index","","",23,null],[11,"index_mut","","",23,null],[11,"iter","","",23,null],[11,"iter_mut","","",23,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"decode","","",38,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",38,null],[11,"eq","","",38,null],[11,"new","","Creates a new identity matrix.",38,{"inputs":[],"output":{"name":"identity"}}],[11,"fmt","","",38,null],[11,"fmt","","",5,null],[11,"hash","","",5,null],[11,"clone","","",5,null],[11,"decode","","",5,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"new_identity","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"matrix1"}}],[11,"new","","",5,{"inputs":[{"name":"n"}],"output":{"name":"matrix1"}}],[11,"as_ref","","",5,null],[11,"as_mut","","",5,null],[11,"from","","",5,null],[11,"at_fast","","",5,null],[11,"set_fast","","",5,null],[11,"from","","",5,{"inputs":[{"name":"matrix1"}],"output":{"name":"matrix1"}}],[11,"iter","","",5,null],[11,"iter_mut","","",5,null],[11,"shape","","",5,null],[11,"swap","","",5,null],[11,"unsafe_at","","",5,null],[11,"unsafe_set","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"ncols","","",5,null],[11,"set_column","","",5,null],[11,"column","","",5,null],[11,"column_slice","","",5,null],[11,"nrows","","",5,null],[11,"set_row","","",5,null],[11,"row","","",5,null],[11,"row_slice","","",5,null],[11,"transpose","","",5,null],[11,"transpose_mut","","",5,null],[11,"approx_epsilon","","",5,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",5,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",5,null],[11,"approx_eq_ulps","","",5,null],[11,"mean","","",5,null],[11,"from_diagonal","","",5,{"inputs":[{"name":"vector1"}],"output":{"name":"matrix1"}}],[11,"diagonal","","",5,null],[11,"outer","","",11,null],[11,"repeat","","",5,{"inputs":[{"name":"n"}],"output":{"name":"matrix1"}}],[11,"abs","","",5,{"inputs":[{"name":"matrix1"}],"output":{"name":"matrix1"}}],[11,"zero","","",5,{"inputs":[],"output":{"name":"matrix1"}}],[11,"is_zero","","",5,null],[11,"add","","",5,null],[11,"add_assign","","",5,null],[11,"add","","",5,null],[11,"sub","","",5,null],[11,"sub_assign","","",5,null],[11,"sub","","",5,null],[11,"add_assign","","",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"sub_assign","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"div_assign","","",5,null],[11,"div","","",5,null],[11,"div","","",5,null],[11,"mul_assign","","",5,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"one","","",5,{"inputs":[],"output":{"name":"matrix1"}}],[11,"dimension","","",5,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",5,null],[11,"mul_assign","","",5,null],[11,"mul","","",5,null],[11,"mul","","",11,null],[11,"mul_assign","","",11,null],[11,"mul","","",5,null],[11,"mul","","",17,null],[11,"mul_assign","","",17,null],[11,"to_homogeneous","","",5,null],[11,"from","","",5,{"inputs":[{"name":"matrix2"}],"output":{"name":"matrix1"}}],[11,"eigen_qr","","",5,null],[11,"rand","","",5,{"inputs":[{"name":"r"}],"output":{"name":"matrix1"}}],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"hash","","",6,null],[11,"clone","","",6,null],[11,"decode","","",6,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"new_identity","","",6,{"inputs":[{"name":"usize"}],"output":{"name":"matrix2"}}],[11,"new","","",6,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix2"}}],[11,"as_ref","","",6,null],[11,"as_mut","","",6,null],[11,"from","","",6,null],[11,"at_fast","","",6,null],[11,"set_fast","","",6,null],[11,"from","","",6,{"inputs":[{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"iter","","",6,null],[11,"iter_mut","","",6,null],[11,"shape","","",6,null],[11,"swap","","",6,null],[11,"unsafe_at","","",6,null],[11,"unsafe_set","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"ncols","","",6,null],[11,"set_column","","",6,null],[11,"column","","",6,null],[11,"column_slice","","",6,null],[11,"nrows","","",6,null],[11,"set_row","","",6,null],[11,"row","","",6,null],[11,"row_slice","","",6,null],[11,"transpose","","",6,null],[11,"transpose_mut","","",6,null],[11,"approx_epsilon","","",6,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",6,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",6,null],[11,"approx_eq_ulps","","",6,null],[11,"mean","","",6,null],[11,"from_diagonal","","",6,{"inputs":[{"name":"vector2"}],"output":{"name":"matrix2"}}],[11,"diagonal","","",6,null],[11,"outer","","",12,null],[11,"repeat","","",6,{"inputs":[{"name":"n"}],"output":{"name":"matrix2"}}],[11,"abs","","",6,{"inputs":[{"name":"matrix2"}],"output":{"name":"matrix2"}}],[11,"zero","","",6,{"inputs":[],"output":{"name":"matrix2"}}],[11,"is_zero","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"add","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"sub","","",6,null],[11,"add_assign","","",6,null],[11,"add","","",6,null],[11,"add","","",6,null],[11,"sub_assign","","",6,null],[11,"sub","","",6,null],[11,"sub","","",6,null],[11,"div_assign","","",6,null],[11,"div","","",6,null],[11,"div","","",6,null],[11,"mul_assign","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"one","","",6,{"inputs":[],"output":{"name":"matrix2"}}],[11,"dimension","","",6,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"to_homogeneous","","",6,null],[11,"from","","",6,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix2"}}],[11,"eigen_qr","","",6,null],[11,"rand","","",6,{"inputs":[{"name":"r"}],"output":{"name":"matrix2"}}],[11,"fmt","","",6,null],[11,"fmt","","",7,null],[11,"hash","","",7,null],[11,"clone","","",7,null],[11,"decode","","",7,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"new_identity","","",7,{"inputs":[{"name":"usize"}],"output":{"name":"matrix3"}}],[11,"new","","",7,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix3"}}],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"from","","",7,null],[11,"at_fast","","",7,null],[11,"set_fast","","",7,null],[11,"from","","",7,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"iter","","",7,null],[11,"iter_mut","","",7,null],[11,"shape","","",7,null],[11,"swap","","",7,null],[11,"unsafe_at","","",7,null],[11,"unsafe_set","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"ncols","","",7,null],[11,"set_column","","",7,null],[11,"column","","",7,null],[11,"column_slice","","",7,null],[11,"nrows","","",7,null],[11,"set_row","","",7,null],[11,"row","","",7,null],[11,"row_slice","","",7,null],[11,"transpose","","",7,null],[11,"transpose_mut","","",7,null],[11,"approx_epsilon","","",7,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",7,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",7,null],[11,"approx_eq_ulps","","",7,null],[11,"mean","","",7,null],[11,"from_diagonal","","",7,{"inputs":[{"name":"vector3"}],"output":{"name":"matrix3"}}],[11,"diagonal","","",7,null],[11,"outer","","",13,null],[11,"repeat","","",7,{"inputs":[{"name":"n"}],"output":{"name":"matrix3"}}],[11,"abs","","",7,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[11,"zero","","",7,{"inputs":[],"output":{"name":"matrix3"}}],[11,"is_zero","","",7,null],[11,"add","","",7,null],[11,"add_assign","","",7,null],[11,"add","","",7,null],[11,"sub","","",7,null],[11,"sub_assign","","",7,null],[11,"sub","","",7,null],[11,"add_assign","","",7,null],[11,"add","","",7,null],[11,"add","","",7,null],[11,"sub_assign","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"div_assign","","",7,null],[11,"div","","",7,null],[11,"div","","",7,null],[11,"mul_assign","","",7,null],[11,"mul","","",7,null],[11,"mul","","",7,null],[11,"one","","",7,{"inputs":[],"output":{"name":"matrix3"}}],[11,"dimension","","",7,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"to_homogeneous","","",7,null],[11,"from","","",7,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix3"}}],[11,"eigen_qr","","",7,null],[11,"rand","","",7,{"inputs":[{"name":"r"}],"output":{"name":"matrix3"}}],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"hash","","",8,null],[11,"clone","","",8,null],[11,"decode","","",8,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"new_identity","","",8,{"inputs":[{"name":"usize"}],"output":{"name":"matrix4"}}],[11,"new","","",8,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix4"}}],[11,"as_ref","","",8,null],[11,"as_mut","","",8,null],[11,"from","","",8,null],[11,"at_fast","","",8,null],[11,"set_fast","","",8,null],[11,"from","","",8,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"iter","","",8,null],[11,"iter_mut","","",8,null],[11,"shape","","",8,null],[11,"swap","","",8,null],[11,"unsafe_at","","",8,null],[11,"unsafe_set","","",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"ncols","","",8,null],[11,"set_column","","",8,null],[11,"column","","",8,null],[11,"column_slice","","",8,null],[11,"nrows","","",8,null],[11,"set_row","","",8,null],[11,"row","","",8,null],[11,"row_slice","","",8,null],[11,"transpose","","",8,null],[11,"transpose_mut","","",8,null],[11,"approx_epsilon","","",8,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",8,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",8,null],[11,"approx_eq_ulps","","",8,null],[11,"mean","","",8,null],[11,"from_diagonal","","",8,{"inputs":[{"name":"vector4"}],"output":{"name":"matrix4"}}],[11,"diagonal","","",8,null],[11,"outer","","",14,null],[11,"repeat","","",8,{"inputs":[{"name":"n"}],"output":{"name":"matrix4"}}],[11,"abs","","",8,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[11,"zero","","",8,{"inputs":[],"output":{"name":"matrix4"}}],[11,"is_zero","","",8,null],[11,"add","","",8,null],[11,"add_assign","","",8,null],[11,"add","","",8,null],[11,"sub","","",8,null],[11,"sub_assign","","",8,null],[11,"sub","","",8,null],[11,"add_assign","","",8,null],[11,"add","","",8,null],[11,"add","","",8,null],[11,"sub_assign","","",8,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"div_assign","","",8,null],[11,"div","","",8,null],[11,"div","","",8,null],[11,"mul_assign","","",8,null],[11,"mul","","",8,null],[11,"mul","","",8,null],[11,"one","","",8,{"inputs":[],"output":{"name":"matrix4"}}],[11,"dimension","","",8,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",8,null],[11,"mul_assign","","",8,null],[11,"mul","","",8,null],[11,"mul","","",14,null],[11,"mul_assign","","",14,null],[11,"mul","","",8,null],[11,"mul","","",20,null],[11,"mul_assign","","",20,null],[11,"inverse","","",8,null],[11,"inverse_mut","","",8,null],[11,"to_homogeneous","","",8,null],[11,"from","","",8,{"inputs":[{"name":"matrix5"}],"output":{"name":"matrix4"}}],[11,"eigen_qr","","",8,null],[11,"rand","","",8,{"inputs":[{"name":"r"}],"output":{"name":"matrix4"}}],[11,"fmt","","",8,null],[11,"fmt","","",9,null],[11,"hash","","",9,null],[11,"clone","","",9,null],[11,"decode","","",9,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"new_identity","","",9,{"inputs":[{"name":"usize"}],"output":{"name":"matrix5"}}],[11,"new","","",9,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix5"}}],[11,"as_ref","","",9,null],[11,"as_mut","","",9,null],[11,"from","","",9,null],[11,"at_fast","","",9,null],[11,"set_fast","","",9,null],[11,"from","","",9,{"inputs":[{"name":"matrix5"}],"output":{"name":"matrix5"}}],[11,"iter","","",9,null],[11,"iter_mut","","",9,null],[11,"shape","","",9,null],[11,"swap","","",9,null],[11,"unsafe_at","","",9,null],[11,"unsafe_set","","",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"ncols","","",9,null],[11,"set_column","","",9,null],[11,"column","","",9,null],[11,"column_slice","","",9,null],[11,"nrows","","",9,null],[11,"set_row","","",9,null],[11,"row","","",9,null],[11,"row_slice","","",9,null],[11,"transpose","","",9,null],[11,"transpose_mut","","",9,null],[11,"approx_epsilon","","",9,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",9,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",9,null],[11,"approx_eq_ulps","","",9,null],[11,"mean","","",9,null],[11,"from_diagonal","","",9,{"inputs":[{"name":"vector5"}],"output":{"name":"matrix5"}}],[11,"diagonal","","",9,null],[11,"outer","","",15,null],[11,"repeat","","",9,{"inputs":[{"name":"n"}],"output":{"name":"matrix5"}}],[11,"abs","","",9,{"inputs":[{"name":"matrix5"}],"output":{"name":"matrix5"}}],[11,"zero","","",9,{"inputs":[],"output":{"name":"matrix5"}}],[11,"is_zero","","",9,null],[11,"add","","",9,null],[11,"add_assign","","",9,null],[11,"add","","",9,null],[11,"sub","","",9,null],[11,"sub_assign","","",9,null],[11,"sub","","",9,null],[11,"add_assign","","",9,null],[11,"add","","",9,null],[11,"add","","",9,null],[11,"sub_assign","","",9,null],[11,"sub","","",9,null],[11,"sub","","",9,null],[11,"div_assign","","",9,null],[11,"div","","",9,null],[11,"div","","",9,null],[11,"mul_assign","","",9,null],[11,"mul","","",9,null],[11,"mul","","",9,null],[11,"one","","",9,{"inputs":[],"output":{"name":"matrix5"}}],[11,"dimension","","",9,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",9,null],[11,"mul_assign","","",9,null],[11,"mul","","",9,null],[11,"mul","","",15,null],[11,"mul_assign","","",15,null],[11,"mul","","",9,null],[11,"mul","","",21,null],[11,"mul_assign","","",21,null],[11,"inverse","","",9,null],[11,"inverse_mut","","",9,null],[11,"to_homogeneous","","",9,null],[11,"from","","",9,{"inputs":[{"name":"matrix6"}],"output":{"name":"matrix5"}}],[11,"eigen_qr","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"matrix5"}}],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"hash","","",10,null],[11,"clone","","",10,null],[11,"decode","","",10,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"new_identity","","",10,{"inputs":[{"name":"usize"}],"output":{"name":"matrix6"}}],[11,"new","","",10,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"matrix6"}}],[11,"as_ref","","",10,null],[11,"as_mut","","",10,null],[11,"from","","",10,null],[11,"at_fast","","",10,null],[11,"set_fast","","",10,null],[11,"from","","",10,{"inputs":[{"name":"matrix6"}],"output":{"name":"matrix6"}}],[11,"iter","","",10,null],[11,"iter_mut","","",10,null],[11,"shape","","",10,null],[11,"swap","","",10,null],[11,"unsafe_at","","",10,null],[11,"unsafe_set","","",10,null],[11,"index","","",10,null],[11,"index_mut","","",10,null],[11,"ncols","","",10,null],[11,"set_column","","",10,null],[11,"column","","",10,null],[11,"column_slice","","",10,null],[11,"nrows","","",10,null],[11,"set_row","","",10,null],[11,"row","","",10,null],[11,"row_slice","","",10,null],[11,"transpose","","",10,null],[11,"transpose_mut","","",10,null],[11,"approx_epsilon","","",10,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",10,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",10,null],[11,"approx_eq_ulps","","",10,null],[11,"mean","","",10,null],[11,"from_diagonal","","",10,{"inputs":[{"name":"vector6"}],"output":{"name":"matrix6"}}],[11,"diagonal","","",10,null],[11,"outer","","",16,null],[11,"repeat","","",10,{"inputs":[{"name":"n"}],"output":{"name":"matrix6"}}],[11,"abs","","",10,{"inputs":[{"name":"matrix6"}],"output":{"name":"matrix6"}}],[11,"zero","","",10,{"inputs":[],"output":{"name":"matrix6"}}],[11,"is_zero","","",10,null],[11,"add","","",10,null],[11,"add_assign","","",10,null],[11,"add","","",10,null],[11,"sub","","",10,null],[11,"sub_assign","","",10,null],[11,"sub","","",10,null],[11,"add_assign","","",10,null],[11,"add","","",10,null],[11,"add","","",10,null],[11,"sub_assign","","",10,null],[11,"sub","","",10,null],[11,"sub","","",10,null],[11,"div_assign","","",10,null],[11,"div","","",10,null],[11,"div","","",10,null],[11,"mul_assign","","",10,null],[11,"mul","","",10,null],[11,"mul","","",10,null],[11,"one","","",10,{"inputs":[],"output":{"name":"matrix6"}}],[11,"dimension","","",10,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",10,null],[11,"mul_assign","","",10,null],[11,"mul","","",10,null],[11,"mul","","",16,null],[11,"mul_assign","","",16,null],[11,"mul","","",10,null],[11,"mul","","",22,null],[11,"mul_assign","","",22,null],[11,"inverse","","",10,null],[11,"inverse_mut","","",10,null],[11,"eigen_qr","","",10,null],[11,"rand","","",10,{"inputs":[{"name":"r"}],"output":{"name":"matrix6"}}],[11,"fmt","","",10,null],[11,"hash","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"decode","","",39,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"new","","Builds a 2 dimensional rotation matrix from an angle in radian.",39,{"inputs":[{"name":"vector1"}],"output":{"name":"rotation2"}}],[11,"rotation","","",39,null],[11,"inverse_rotation","","",39,null],[11,"append_rotation_mut","","",39,null],[11,"append_rotation","","",39,null],[11,"prepend_rotation_mut","","",39,null],[11,"prepend_rotation","","",39,null],[11,"set_rotation","","",39,null],[11,"angle_to","","",39,null],[11,"rotation_to","","",39,null],[11,"rand","","",39,{"inputs":[{"name":"r"}],"output":{"name":"rotation2"}}],[11,"absolute_rotate","","",39,null],[11,"hash","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",40,null],[11,"decode","","",40,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"new","","Builds a 3 dimensional rotation matrix from an axis and an angle.",40,{"inputs":[{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"from_matrix_unchecked","","Builds a rotation matrix from an orthogonal matrix.",40,{"inputs":[{"name":"matrix3"}],"output":{"name":"rotation3"}}],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",40,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"rotation3"}}],[11,"new_observer_frame","","Creates a rotation that corresponds to the local frame of an observer standing at the\norigin and looking toward `dir`.",40,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix without translation.",40,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix without translation.",40,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"rotation","","",40,null],[11,"inverse_rotation","","",40,null],[11,"append_rotation_mut","","",40,null],[11,"append_rotation","","",40,null],[11,"prepend_rotation_mut","","",40,null],[11,"prepend_rotation","","",40,null],[11,"set_rotation","","",40,null],[11,"angle_to","","",40,null],[11,"rotation_to","","",40,null],[11,"rand","","",40,{"inputs":[{"name":"r"}],"output":{"name":"rotation3"}}],[11,"absolute_rotate","","",40,null],[11,"submatrix","","This rotation&#39;s underlying matrix.",39,null],[11,"rotate","","",39,null],[11,"inverse_rotate","","",39,null],[11,"rotate","","",39,null],[11,"inverse_rotate","","",39,null],[11,"transform","","",39,null],[11,"inverse_transform","","",39,null],[11,"transform","","",39,null],[11,"inverse_transform","","",39,null],[11,"to_rotation_matrix","","",39,null],[11,"one","","",39,{"inputs":[],"output":{"name":"rotation2"}}],[11,"new_identity","","",39,{"inputs":[{"name":"usize"}],"output":{"name":"rotation2"}}],[11,"from_diagonal","","",39,{"inputs":[{"name":"vector2"}],"output":{"name":"rotation2"}}],[11,"diagonal","","",39,null],[11,"mul","","",39,null],[11,"mul_assign","","",39,null],[11,"mul","","",39,null],[11,"mul","","",12,null],[11,"mul_assign","","",12,null],[11,"mul","","",39,null],[11,"mul","","",18,null],[11,"mul_assign","","",18,null],[11,"inverse_mut","","",39,null],[11,"inverse","","",39,null],[11,"transpose","","",39,null],[11,"transpose_mut","","",39,null],[11,"nrows","","",39,null],[11,"row","","",39,null],[11,"set_row","","",39,null],[11,"ncols","","",39,null],[11,"column","","",39,null],[11,"set_column","","",39,null],[11,"index","","",39,null],[11,"to_homogeneous","","",39,null],[11,"approx_epsilon","","",39,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",39,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",39,null],[11,"approx_eq_eps","","",39,null],[11,"approx_eq_ulps","","",39,null],[11,"abs","","",39,{"inputs":[{"name":"rotation2"}],"output":{"name":"matrix2"}}],[11,"fmt","","",39,null],[11,"dimension","","",39,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"submatrix","","This rotation&#39;s underlying matrix.",40,null],[11,"rotate","","",40,null],[11,"inverse_rotate","","",40,null],[11,"rotate","","",40,null],[11,"inverse_rotate","","",40,null],[11,"transform","","",40,null],[11,"inverse_transform","","",40,null],[11,"transform","","",40,null],[11,"inverse_transform","","",40,null],[11,"to_rotation_matrix","","",40,null],[11,"one","","",40,{"inputs":[],"output":{"name":"rotation3"}}],[11,"new_identity","","",40,{"inputs":[{"name":"usize"}],"output":{"name":"rotation3"}}],[11,"from_diagonal","","",40,{"inputs":[{"name":"vector3"}],"output":{"name":"rotation3"}}],[11,"diagonal","","",40,null],[11,"mul","","",40,null],[11,"mul_assign","","",40,null],[11,"mul","","",40,null],[11,"mul","","",13,null],[11,"mul_assign","","",13,null],[11,"mul","","",40,null],[11,"mul","","",19,null],[11,"mul_assign","","",19,null],[11,"inverse_mut","","",40,null],[11,"inverse","","",40,null],[11,"transpose","","",40,null],[11,"transpose_mut","","",40,null],[11,"nrows","","",40,null],[11,"row","","",40,null],[11,"set_row","","",40,null],[11,"ncols","","",40,null],[11,"column","","",40,null],[11,"set_column","","",40,null],[11,"index","","",40,null],[11,"to_homogeneous","","",40,null],[11,"approx_epsilon","","",40,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",40,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq","","",40,null],[11,"approx_eq_eps","","",40,null],[11,"approx_eq_ulps","","",40,null],[11,"abs","","",40,{"inputs":[{"name":"rotation3"}],"output":{"name":"matrix3"}}],[11,"fmt","","",40,null],[11,"dimension","","",40,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"decode","","",1,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"decode","","",2,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"new_observer_frame","","Creates an isometry that corresponds to the local frame of an observer standing at the\npoint `eye` and looking toward `target`.",2,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",2,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",2,{"inputs":[{"name":"point3"},{"name":"point3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"new","","Creates a new isometry from an axis-angle rotation, and a vector.",1,{"inputs":[{"name":"vector2"},{"name":"vector1"}],"output":{"name":"isometry2"}}],[11,"from_rotation_matrix","","Creates a new isometry from a rotation matrix and a vector.",1,{"inputs":[{"name":"vector2"},{"name":"rotation2"}],"output":{"name":"isometry2"}}],[11,"to_rotation_matrix","","",1,null],[11,"one","","",1,{"inputs":[],"output":{"name":"isometry2"}}],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"mul","","",1,null],[11,"mul","","",39,null],[11,"mul_assign","","",1,null],[11,"mul","","",1,null],[11,"mul","","",1,null],[11,"translation","","",1,null],[11,"inverse_translation","","",1,null],[11,"append_translation_mut","","",1,null],[11,"append_translation","","",1,null],[11,"prepend_translation_mut","","",1,null],[11,"prepend_translation","","",1,null],[11,"set_translation","","",1,null],[11,"translate","","",1,null],[11,"inverse_translate","","",1,null],[11,"rotation","","",1,null],[11,"inverse_rotation","","",1,null],[11,"append_rotation_mut","","",1,null],[11,"append_rotation","","",1,null],[11,"prepend_rotation_mut","","",1,null],[11,"prepend_rotation","","",1,null],[11,"set_rotation","","",1,null],[11,"rotate","","",1,null],[11,"inverse_rotate","","",1,null],[11,"transformation","","",1,null],[11,"inverse_transformation","","",1,null],[11,"append_transformation_mut","","",1,null],[11,"append_transformation","","",1,null],[11,"prepend_transformation_mut","","",1,null],[11,"prepend_transformation","","",1,null],[11,"set_transformation","","",1,null],[11,"transform","","",1,null],[11,"inverse_transform","","",1,null],[11,"inverse_mut","","",1,null],[11,"inverse","","",1,null],[11,"to_homogeneous","","",1,null],[11,"approx_epsilon","","",1,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",1,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",1,null],[11,"approx_eq_ulps","","",1,null],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"isometry2"}}],[11,"absolute_rotate","","",1,null],[11,"fmt","","",1,null],[11,"dimension","","",1,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"new","","Creates a new isometry from an axis-angle rotation, and a vector.",2,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"isometry3"}}],[11,"from_rotation_matrix","","Creates a new isometry from a rotation matrix and a vector.",2,{"inputs":[{"name":"vector3"},{"name":"rotation3"}],"output":{"name":"isometry3"}}],[11,"to_rotation_matrix","","",2,null],[11,"one","","",2,{"inputs":[],"output":{"name":"isometry3"}}],[11,"mul","","",2,null],[11,"mul_assign","","",2,null],[11,"mul","","",2,null],[11,"mul","","",40,null],[11,"mul_assign","","",2,null],[11,"mul","","",2,null],[11,"mul","","",2,null],[11,"translation","","",2,null],[11,"inverse_translation","","",2,null],[11,"append_translation_mut","","",2,null],[11,"append_translation","","",2,null],[11,"prepend_translation_mut","","",2,null],[11,"prepend_translation","","",2,null],[11,"set_translation","","",2,null],[11,"translate","","",2,null],[11,"inverse_translate","","",2,null],[11,"rotation","","",2,null],[11,"inverse_rotation","","",2,null],[11,"append_rotation_mut","","",2,null],[11,"append_rotation","","",2,null],[11,"prepend_rotation_mut","","",2,null],[11,"prepend_rotation","","",2,null],[11,"set_rotation","","",2,null],[11,"rotate","","",2,null],[11,"inverse_rotate","","",2,null],[11,"transformation","","",2,null],[11,"inverse_transformation","","",2,null],[11,"append_transformation_mut","","",2,null],[11,"append_transformation","","",2,null],[11,"prepend_transformation_mut","","",2,null],[11,"prepend_transformation","","",2,null],[11,"set_transformation","","",2,null],[11,"transform","","",2,null],[11,"inverse_transform","","",2,null],[11,"inverse_mut","","",2,null],[11,"inverse","","",2,null],[11,"to_homogeneous","","",2,null],[11,"approx_epsilon","","",2,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",2,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",2,null],[11,"approx_eq_ulps","","",2,null],[11,"rand","","",2,{"inputs":[{"name":"r"}],"output":{"name":"isometry3"}}],[11,"absolute_rotate","","",2,null],[11,"fmt","","",2,null],[11,"dimension","","",2,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"decode","","",3,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"decode","","",4,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"new","","Creates a new similarity transformation from a vector, an axis-angle rotation, and a scale factor.",3,{"inputs":[{"name":"vector2"},{"name":"vector1"},{"name":"n"}],"output":{"name":"similarity2"}}],[11,"from_rotation_matrix","","Creates a new similarity transformation from a rotation matrix, a vector, and a scale factor.",3,{"inputs":[{"name":"vector2"},{"name":"rotation2"},{"name":"n"}],"output":{"name":"similarity2"}}],[11,"from_isometry","","Creates a new similarity transformation from an isometry and a scale factor.",3,{"inputs":[{"name":"isometry2"},{"name":"n"}],"output":{"name":"similarity2"}}],[11,"scale","","The scale factor of this similarity transformation.",3,null],[11,"inverse_scale","","The inverse scale factor of this similarity transformation.",3,null],[11,"append_scale_mut","","Appends in-place a scale to this similarity transformation.",3,null],[11,"append_scale","","Appends a scale to this similarity transformation.",3,null],[11,"prepend_scale_mut","","Prepends in-place a scale to this similarity transformation.",3,null],[11,"prepend_scale","","Prepends a scale to this similarity transformation.",3,null],[11,"set_scale","","Sets the scale of this similarity transformation.",3,null],[11,"one","","",3,{"inputs":[],"output":{"name":"similarity2"}}],[11,"transformation","","",3,null],[11,"inverse_transformation","","",3,null],[11,"append_transformation_mut","","",3,null],[11,"append_transformation","","",3,null],[11,"prepend_transformation_mut","","",3,null],[11,"prepend_transformation","","",3,null],[11,"set_transformation","","",3,null],[11,"mul","","",3,null],[11,"mul_assign","","",3,null],[11,"mul","","",3,null],[11,"mul_assign","","",3,null],[11,"mul","","",1,null],[11,"mul","","",3,null],[11,"mul_assign","","",3,null],[11,"mul","","",39,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"transform","","",3,null],[11,"inverse_transform","","",3,null],[11,"inverse_mut","","",3,null],[11,"inverse","","",3,null],[11,"to_homogeneous","","",3,null],[11,"approx_epsilon","","",3,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",3,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",3,null],[11,"approx_eq_ulps","","",3,null],[11,"rand","","",3,{"inputs":[{"name":"r"}],"output":{"name":"similarity2"}}],[11,"fmt","","",3,null],[11,"dimension","","",3,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"new","","Creates a new similarity transformation from a vector, an axis-angle rotation, and a scale factor.",4,{"inputs":[{"name":"vector3"},{"name":"vector3"},{"name":"n"}],"output":{"name":"similarity3"}}],[11,"from_rotation_matrix","","Creates a new similarity transformation from a rotation matrix, a vector, and a scale factor.",4,{"inputs":[{"name":"vector3"},{"name":"rotation3"},{"name":"n"}],"output":{"name":"similarity3"}}],[11,"from_isometry","","Creates a new similarity transformation from an isometry and a scale factor.",4,{"inputs":[{"name":"isometry3"},{"name":"n"}],"output":{"name":"similarity3"}}],[11,"scale","","The scale factor of this similarity transformation.",4,null],[11,"inverse_scale","","The inverse scale factor of this similarity transformation.",4,null],[11,"append_scale_mut","","Appends in-place a scale to this similarity transformation.",4,null],[11,"append_scale","","Appends a scale to this similarity transformation.",4,null],[11,"prepend_scale_mut","","Prepends in-place a scale to this similarity transformation.",4,null],[11,"prepend_scale","","Prepends a scale to this similarity transformation.",4,null],[11,"set_scale","","Sets the scale of this similarity transformation.",4,null],[11,"one","","",4,{"inputs":[],"output":{"name":"similarity3"}}],[11,"transformation","","",4,null],[11,"inverse_transformation","","",4,null],[11,"append_transformation_mut","","",4,null],[11,"append_transformation","","",4,null],[11,"prepend_transformation_mut","","",4,null],[11,"prepend_transformation","","",4,null],[11,"set_transformation","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"mul","","",2,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"mul","","",40,null],[11,"mul","","",4,null],[11,"mul","","",4,null],[11,"transform","","",4,null],[11,"inverse_transform","","",4,null],[11,"inverse_mut","","",4,null],[11,"inverse","","",4,null],[11,"to_homogeneous","","",4,null],[11,"approx_epsilon","","",4,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",4,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",4,null],[11,"approx_eq_ulps","","",4,null],[11,"rand","","",4,{"inputs":[{"name":"r"}],"output":{"name":"similarity3"}}],[11,"fmt","","",4,null],[11,"dimension","","",4,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"fmt","","",41,null],[11,"clone","","",41,null],[11,"decode","","",41,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"decode","","",42,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"new","","Creates a new 3D perspective projection.",41,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"perspective3"}}],[11,"to_matrix","","Builds a 4D projection matrix (using homogeneous coordinates) for this projection.",41,null],[11,"to_perspective_matrix","","Build a `PerspectiveMatrix3` representing this projection.",41,null],[11,"aspect","","Gets the `width / height` aspect ratio.",41,null],[11,"fovy","","Gets the y field of view of the view frustrum.",41,null],[11,"znear","","Gets the near plane offset of the view frustrum.",41,null],[11,"zfar","","Gets the far plane offset of the view frustrum.",41,null],[11,"set_aspect","","Sets the `width / height` aspect ratio of the view frustrum.",41,null],[11,"set_fovy","","Sets the y field of view of the view frustrum.",41,null],[11,"set_znear","","Sets the near plane offset of the view frustrum.",41,null],[11,"set_zfar","","Sets the far plane offset of the view frustrum.",41,null],[11,"project_point","","Projects a point.",41,null],[11,"project_vector","","Projects a vector.",41,null],[11,"new","","Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.",42,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"perspectivematrix3"}}],[11,"from_matrix_unchecked","","Creates a new perspective projection matrix from a 4D matrix.",42,{"inputs":[{"name":"matrix4"}],"output":{"name":"perspectivematrix3"}}],[11,"as_matrix","","Returns a reference to the 4D matrix (using homogeneous coordinates) of this projection.",42,null],[11,"aspect","","Gets the `width / height` aspect ratio of the view frustrum.",42,null],[11,"fovy","","Gets the y field of view of the view frustrum.",42,null],[11,"znear","","Gets the near plane offset of the view frustrum.",42,null],[11,"zfar","","Gets the far plane offset of the view frustrum.",42,null],[11,"set_aspect","","Updates this projection matrix with a new `width / height` aspect ratio of the view\nfrustrum.",42,null],[11,"set_fovy","","Updates this projection with a new y field of view of the view frustrum.",42,null],[11,"set_znear","","Updates this projection matrix with a new near plane offset of the view frustrum.",42,null],[11,"set_zfar","","Updates this projection matrix with a new far plane offset of the view frustrum.",42,null],[11,"set_znear_and_zfar","","Updates this projection matrix with new near and far plane offsets of the view frustrum.",42,null],[11,"project_point","","Projects a point.",42,null],[11,"project_vector","","Projects a vector.",42,null],[11,"to_matrix","","Returns the 4D matrix (using homogeneous coordinates) of this projection.",42,null],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"decode","","",43,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"decode","","",44,{"inputs":[{"name":"__dn"}],"output":{"name":"result"}}],[11,"encode","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"new","","Creates a new 3D orthographic projection.",43,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"orthographic3"}}],[11,"to_matrix","","Builds a 4D projection matrix (using homogeneous coordinates) for this projection.",43,null],[11,"to_orthographic_matrix","","Build a `OrthographicMatrix3` representing this projection.",43,null],[11,"left","","The smallest x-coordinate of the view cuboid.",43,null],[11,"right","","The largest x-coordinate of the view cuboid.",43,null],[11,"bottom","","The smallest y-coordinate of the view cuboid.",43,null],[11,"top","","The largest y-coordinate of the view cuboid.",43,null],[11,"znear","","The near plane offset of the view cuboid.",43,null],[11,"zfar","","The far plane offset of the view cuboid.",43,null],[11,"set_left","","Sets the smallest x-coordinate of the view cuboid.",43,null],[11,"set_right","","Sets the largest x-coordinate of the view cuboid.",43,null],[11,"set_bottom","","Sets the smallest y-coordinate of the view cuboid.",43,null],[11,"set_top","","Sets the largest y-coordinate of the view cuboid.",43,null],[11,"set_znear","","Sets the near plane offset of the view cuboid.",43,null],[11,"set_zfar","","Sets the far plane offset of the view cuboid.",43,null],[11,"project_point","","Projects a point.",43,null],[11,"project_vector","","Projects a vector.",43,null],[11,"new","","Creates a new orthographic projection matrix.",44,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"orthographicmatrix3"}}],[11,"from_fov","","Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.",44,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"orthographicmatrix3"}}],[11,"from_matrix_unchecked","","Creates a new orthographic matrix from a 4D matrix.",44,{"inputs":[{"name":"matrix4"}],"output":{"name":"orthographicmatrix3"}}],[11,"as_matrix","","Returns a reference to the 4D matrix (using homogeneous coordinates) of this projection.",44,null],[11,"left","","The smallest x-coordinate of the view cuboid.",44,null],[11,"right","","The largest x-coordinate of the view cuboid.",44,null],[11,"bottom","","The smallest y-coordinate of the view cuboid.",44,null],[11,"top","","The largest y-coordinate of the view cuboid.",44,null],[11,"znear","","The near plane offset of the view cuboid.",44,null],[11,"zfar","","The far plane offset of the view cuboid.",44,null],[11,"set_left","","Sets the smallest x-coordinate of the view cuboid.",44,null],[11,"set_right","","Sets the largest x-coordinate of the view cuboid.",44,null],[11,"set_bottom","","Sets the smallest y-coordinate of the view cuboid.",44,null],[11,"set_top","","Sets the largest y-coordinate of the view cuboid.",44,null],[11,"set_znear","","Sets the near plane offset of the view cuboid.",44,null],[11,"set_zfar","","Sets the far plane offset of the view cuboid.",44,null],[11,"set_left_and_right","","Sets the view cuboid coordinates along the `x` axis.",44,null],[11,"set_bottom_and_top","","Sets the view cuboid coordinates along the `y` axis.",44,null],[11,"set_znear_and_zfar","","Sets the near and far plane offsets of the view cuboid.",44,null],[11,"project_point","","Projects a point.",44,null],[11,"project_vector","","Projects a vector.",44,null],[11,"to_matrix","","Returns the 4D matrix (using homogeneous coordinates) of this projection.",44,null],[11,"fmt","","",45,null],[11,"hash","","",45,null],[11,"clone","","",45,null],[11,"decode","","",45,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"new","","Normalize the given value and return it wrapped on a `Unit` structure.",45,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"try_new","","Attempts to normalize the given value and return it wrapped on a `Unit` structure.",45,{"inputs":[{"name":"t"},{"name":"normtype"}],"output":{"name":"option"}}],[11,"new_and_get","","Normalize the given value and return it wrapped on a `Unit` structure and its norm.",45,null],[11,"try_new_and_get","","Normalize the given value and return it wrapped on a `Unit` structure and its norm.",45,{"inputs":[{"name":"t"},{"name":"normtype"}],"output":{"name":"option"}}],[11,"renormalize","","Normalizes this value again. This is useful when repeated computations\nmight cause a drift in the norm because of float inaccuracies.",45,null],[11,"from_unit_value_unchecked","","Wraps the given value, assuming it is already normalized.",45,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"unwrap","","Retrieves the underlying value.",45,null],[11,"as_ref","","",45,null],[11,"one","","",38,{"inputs":[],"output":{"name":"identity"}}],[11,"inverse","","",38,null],[11,"inverse_mut","","",38,null],[11,"mul","","",38,null],[11,"transpose","","",38,null],[11,"transpose_mut","","",38,null],[11,"translate","","",38,null],[11,"inverse_translate","","",38,null],[11,"rotate","","",38,null],[11,"inverse_rotate","","",38,null],[11,"absolute_rotate","","",38,null],[11,"transform","","",38,null],[11,"inverse_transform","","",38,null],[11,"inverse","","",5,null],[11,"inverse_mut","","",5,null],[11,"inverse","","",6,null],[11,"inverse_mut","","",6,null],[11,"inverse","","",7,null],[11,"inverse_mut","","",7,null],[11,"determinant","","",5,null],[11,"determinant","","",6,null],[11,"determinant","","",7,null],[11,"mul","","",7,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",13,null],[11,"mul","","",12,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",19,null],[11,"mul","","",18,null],[11,"mul","","",6,null],[11,"mul_assign","","",7,null],[11,"mul_assign","","",6,null],[11,"mul_assign","","",13,null],[11,"mul_assign","","",12,null],[11,"mul_assign","","",19,null],[11,"mul_assign","","",18,null],[11,"angle_to","","",12,null],[11,"rotation_to","","",12,null],[11,"angle_to","","",13,null],[11,"rotation_to","","",13,null],[11,"cross","","",12,null],[11,"cross_matrix","","",12,null],[11,"cross","","",13,null],[11,"cross_matrix","","",13,null],[11,"nrows","","",12,null],[11,"row","","",12,null],[11,"set_row","","",12,null],[11,"canonical_basis","","",11,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",11,{"inputs":[{"name":"vector1"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",11,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"canonical_basis","","",12,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",12,{"inputs":[{"name":"vector2"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",12,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"canonical_basis","","",13,{"inputs":[{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",13,{"inputs":[{"name":"vector3"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",13,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"sample","","",11,{"inputs":[{"name":"f"}],"output":null}],[11,"sample","","",12,{"inputs":[{"name":"f"}],"output":null}],[11,"sample","","",13,{"inputs":[{"name":"f"}],"output":null}],[11,"sample","","",14,{"inputs":[{"name":"f"}],"output":null}],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"decode","","",24,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",24,null],[11,"eq","","",24,null],[11,"is_eq","","Returns `true` if `self` is equal to `Equal`.",24,null],[11,"is_lt","","Returns `true` if `self` is equal to `Less`.",24,null],[11,"is_le","","Returns `true` if `self` is equal to `Less` or `Equal`.",24,null],[11,"is_gt","","Returns `true` if `self` is equal to `Greater`.",24,null],[11,"is_ge","","Returns `true` if `self` is equal to `Greater` or `Equal`.",24,null],[11,"is_not_comparable","","Returns `true` if `self` is equal to `NotComparable`.",24,null],[11,"from_ordering","","Creates a `PartialOrdering` from an `Ordering`.",24,{"inputs":[{"name":"ordering"}],"output":{"name":"partialordering"}}],[11,"to_ordering","","Converts this `PartialOrdering` to an `Ordering`.",24,null],[6,"UnitQuaternion","","A unit quaternions. May be used to represent a rotation.",null,null],[8,"Absolute","","Trait of objects having an absolute value.\nThis is useful if the object does not have the same type as its absolute value.",null,null],[10,"abs","","Computes some absolute value of this object.\nTypically, this will make all component of a matrix or vector positive.",46,{"inputs":[{"name":"self"}],"output":{"name":"a"}}],[8,"AbsoluteRotate","","Composition of a rotation and an absolute value.",null,null],[10,"absolute_rotate","","This is the same as:",47,null],[8,"ApproxEq","","Trait for testing approximate equality",null,null],[10,"approx_epsilon","","Default epsilon for approximation.",48,{"inputs":[],"output":{"name":"eps"}}],[10,"approx_eq_eps","","Tests approximate equality using a custom epsilon.",48,null],[10,"approx_ulps","","Default ULPs for approximation.",48,{"inputs":[],"output":{"name":"u32"}}],[10,"approx_eq_ulps","","Tests approximate equality using units in the last place (ULPs)",48,null],[11,"approx_eq","","Tests approximate equality.",48,null],[8,"Axpy","","Trait of objects implementing the `y = ax + y` operation.",null,null],[10,"axpy","","Adds $$a * x$$ to `self`.",49,null],[8,"Basis","","Traits of objects which can form a basis (typically vectors).",null,null],[10,"canonical_basis","","Iterates through the canonical basis of the space in which this object lives.",50,{"inputs":[{"name":"f"}],"output":null}],[10,"orthonormal_subspace_basis","","Iterates through a basis of the subspace orthogonal to `self`.",50,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[10,"canonical_basis_element","","Gets the ith element of the canonical basis.",50,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[8,"BaseFloat","","Basic floating-point number numeric trait.",null,null],[10,"pi","","Archimedes&#39; constant.",51,{"inputs":[],"output":{"name":"self"}}],[10,"two_pi","","2.0 * pi.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_2","","pi / 2.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_3","","pi / 3.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_4","","pi / 4.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_6","","pi / 6.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_pi_8","","pi / 8.0.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_1_pi","","1.0 / pi.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_2_pi","","2.0 / pi.",51,{"inputs":[],"output":{"name":"self"}}],[10,"frac_2_sqrt_pi","","2.0 / sqrt(pi).",51,{"inputs":[],"output":{"name":"self"}}],[10,"e","","Euler&#39;s number.",51,{"inputs":[],"output":{"name":"self"}}],[10,"log2_e","","log2(e).",51,{"inputs":[],"output":{"name":"self"}}],[10,"log10_e","","log10(e).",51,{"inputs":[],"output":{"name":"self"}}],[10,"ln_2","","ln(2.0).",51,{"inputs":[],"output":{"name":"self"}}],[10,"ln_10","","ln(10.0).",51,{"inputs":[],"output":{"name":"self"}}],[8,"BaseNum","","Basic integral numeric trait.",null,null],[8,"Bounded","","Types that have maximum and minimum value.",null,null],[10,"min_value","","The minimum value.",52,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","The maximum value.",52,{"inputs":[],"output":{"name":"self"}}],[8,"Cast","","Traits of objects which can be created from an object of type `T`.",null,null],[10,"from","","Converts an element of type `T` to an element of type `Self`.",53,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Column","","Trait to access columns of a matrix or vector.",null,null],[10,"ncols","","The number of column of this matrix or vector.",54,null],[10,"column","","Reads the `i`-th column of `self`.",54,null],[10,"set_column","","Writes the `i`-th column of `self`.",54,null],[8,"ColumnSlice","","Trait to access part of a column of a matrix",null,null],[10,"column_slice","","Returns a view to a slice of a column of a matrix.",55,null],[8,"RowSlice","","Trait to access part of a row of a matrix",null,null],[10,"row_slice","","Returns a view to a slice of a row of a matrix.",56,null],[8,"Covariance","","Trait for computing the covariance of a set of data.",null,null],[10,"covariance","","Computes the covariance of the obsevations stored by `m`:",57,null],[11,"covariance_to","","Computes the covariance of the obsevations stored by `m`:",57,null],[8,"Cross","","Trait of elements having a cross product.",null,null],[16,"CrossProductType","","The cross product output.",58,null],[10,"cross","","Computes the cross product between two elements (usually vectors).",58,null],[8,"CrossMatrix","","Trait of elements having a cross product operation which can be expressed as a matrix.",null,null],[10,"cross_matrix","","The matrix associated to any cross product with this vector. I.e. `v.cross(anything)` =\n`v.cross_matrix().rmul(anything)`.",59,null],[8,"Determinant","","Trait of objects having a determinant. Typically used by square matrices.",null,null],[10,"determinant","","Returns the determinant of `m`.",60,null],[8,"Diagonal","","Trait to get the diagonal of square matrices.",null,null],[10,"from_diagonal","","Creates a new matrix with the given diagonal.",61,{"inputs":[{"name":"v"}],"output":{"name":"self"}}],[10,"diagonal","","The diagonal of this matrix.",61,null],[8,"Dimension","","Trait of objects having a spacial dimension known at compile time.",null,null],[10,"dimension","","The dimension of the object.",62,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[8,"Dot","","Traits of objects having a dot product.",null,null],[10,"dot","","Computes the dot (inner) product of two vectors.",63,null],[8,"EigenQR","","Trait for computing the eigenvector and eigenvalues of a square matrix usin the QR algorithm.",null,null],[10,"eigen_qr","","Computes the eigenvectors and eigenvalues of this matrix.",64,null],[8,"Eye","","Trait for constructing the identity matrix",null,null],[10,"new_identity","","Return the identity matrix of specified dimension",65,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[8,"FloatPoint","","Trait of points with components implementing the `BaseFloat` trait.",null,null],[11,"distance_squared","","Computes the square distance between two points.",66,null],[11,"distance","","Computes the distance between two points.",66,null],[8,"FloatVector","","Trait of vector with components implementing the `BaseFloat` trait.",null,null],[8,"FromHomogeneous","","Traits of objects which can be build from an homogeneous coordinate form.",null,null],[10,"from","","Builds an object from its homogeneous coordinate form.",67,{"inputs":[{"name":"u"}],"output":{"name":"self"}}],[8,"Indexable","","This is a workaround of current Rust limitations.",null,null],[10,"swap","","Swaps the `i`-th element of `self` with its `j`-th element.",68,null],[10,"unsafe_at","","Reads the `i`-th element of `self`.",68,null],[10,"unsafe_set","","Writes to the `i`-th element of `self`.",68,null],[8,"Inverse","","Trait of objects having an inverse. Typically used to implement matrix inverse.",null,null],[10,"inverse","","Returns the inverse of `m`.",69,null],[10,"inverse_mut","","In-place version of `inverse`.",69,null],[8,"Iterable","","This is a workaround of current Rust limitations.",null,null],[10,"iter","","Gets a vector-like read-only iterator.",70,null],[8,"IterableMut","","This is a workaround of current Rust limitations.",null,null],[10,"iter_mut","","Gets a vector-like read-write iterator.",71,null],[8,"Matrix","","Trait of matrices.",null,null],[8,"Mean","","Trait for computing the mean of a set of data.",null,null],[10,"mean","","Computes the mean of the observations stored by `v`.",72,null],[8,"Norm","","Traits of objects having an euclidian norm.",null,null],[16,"NormType","","The scalar type for the norm (i.e. the undelying field).",73,null],[11,"norm","","Computes the norm of `self`.",73,null],[10,"norm_squared","","Computes the squared norm of `self`.",73,null],[10,"normalize","","Gets the normalized version of a copy of `v`.",73,null],[10,"normalize_mut","","Normalizes `self`.",73,null],[10,"try_normalize","","Gets the normalized version of a copy of `v` or `None` if the vector has a norm smaller\nor equal to `min_norm`. In particular, `.try_normalize(0.0)` returns `None` if the norm is\nexactly zero.",73,null],[10,"try_normalize_mut","","Normalized `v` or does nothing if the vector has a norm smaller\nor equal to `min_norm`.",73,null],[8,"NumPoint","","Trait grouping most common operations on points.",null,null],[8,"NumVector","","Trait grouping most common operations on vectors.",null,null],[8,"Origin","","The zero element of a vector space, seen as an element of its embeding affine space.",null,null],[10,"origin","","The trivial origin.",74,{"inputs":[],"output":{"name":"self"}}],[10,"is_origin","","Returns true if this points is exactly the trivial origin.",74,null],[8,"Outer","","Traits of objects having an outer product.",null,null],[16,"OuterProductType","","Result type of the outer product.",75,null],[10,"outer","","Computes the outer product: `a * b`",75,null],[8,"PartialOrder","","Pointwise ordering operations.",null,null],[10,"inf","","Returns the infimum of this value and another",76,null],[10,"sup","","Returns the supremum of this value and another",76,null],[10,"partial_cmp","","Compare `self` and `other` using a partial ordering relation.",76,null],[11,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self &lt;= other`.",76,null],[11,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self &lt; other`.",76,null],[11,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self &gt;= other`.",76,null],[11,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self &gt; other`.",76,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",76,null],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",76,null],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",76,null],[8,"PointAsVector","","Trait that relates a point of an affine space to a vector of the associated vector space.",null,null],[16,"Vector","","The vector type of the vector space associated to this point&#39;s affine space.",77,null],[10,"to_vector","","Converts this point to its associated vector.",77,null],[10,"as_vector","","Converts a reference to this point to a reference to its associated vector.",77,null],[10,"set_coords","","Sets the coordinates of this point to match those of a given vector.",77,null],[8,"Repeat","","Trait for constructiong an object repeating a value.",null,null],[10,"repeat","","Returns a value with filled by `val`.",78,{"inputs":[{"name":"n"}],"output":{"name":"self"}}],[8,"Rotate","","Trait of objects able to rotate other objects.",null,null],[10,"rotate","","Applies a rotation to `v`.",79,null],[10,"inverse_rotate","","Applies an inverse rotation to `v`.",79,null],[8,"Rotation","","Trait of object which can represent a rotation, and to which new rotations can be appended. A\nrotation is assumed to be an isometry without translation and without reflexion.",null,null],[10,"rotation","","Gets the rotation associated with `self`.",80,null],[10,"inverse_rotation","","Gets the inverse rotation associated with `self`.",80,null],[10,"append_rotation_mut","","Appends a rotation to this object.",80,null],[10,"append_rotation","","Appends the rotation `amount` to a copy of `t`.",80,null],[10,"prepend_rotation_mut","","Prepends a rotation to this object.",80,null],[10,"prepend_rotation","","Prepends the rotation `amount` to a copy of `t`.",80,null],[10,"set_rotation","","Sets the rotation of `self`.",80,null],[8,"RotationMatrix","","Trait of transformation having a rotation extractable as a rotation matrix. This can typically\nbe implemented by quaternions to convert them to a rotation matrix.",null,null],[16,"Output","","The output rotation matrix type.",81,null],[10,"to_rotation_matrix","","Gets the rotation matrix represented by `self`.",81,null],[8,"RotationWithTranslation","","Various composition of rotation and translation.",null,null],[11,"append_rotation_wrt_point","","Applies a rotation centered on a specific point.",82,null],[11,"append_rotation_wrt_point_mut","","Rotates `self` using a specific center of rotation.",82,null],[11,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",82,null],[11,"append_rotation_wrt_center_mut","","Applies a rotation centered on the translation of `m`.",82,null],[8,"RotationTo","","Trait of object that can be rotated to be superimposed with another one of the same nature.",null,null],[16,"AngleType","","Type of the angle between two elements.",83,null],[16,"DeltaRotationType","","Type of the rotation between two elements.",83,null],[10,"angle_to","","Computes an angle nedded to transform the first element to the second one using a\nrotation.",83,null],[10,"rotation_to","","Computes the smallest rotation needed to transform the first element to the second one.",83,null],[8,"Row","","Trait to access rows of a matrix or a vector.",null,null],[10,"nrows","","The number of column of `self`.",84,null],[10,"row","","Reads the `i`-th row of `self`.",84,null],[10,"set_row","","Writes the `i`-th row of `self`.",84,null],[8,"Shape","","The shape of an indexable object.",null,null],[10,"shape","","Returns the shape of an indexable object.",85,null],[8,"SquareMatrix","","Trait implemented by square matrices.",null,null],[8,"ToHomogeneous","","Traits of objects which can be put in homogeneous coordinates form.",null,null],[10,"to_homogeneous","","Gets the homogeneous coordinates form of this object.",86,null],[8,"Transform","","Trait of objects able to transform other objects.",null,null],[10,"transform","","Applies a transformation to `v`.",87,null],[10,"inverse_transform","","Applies an inverse transformation to `v`.",87,null],[8,"Transformation","","Trait of object which represent a transformation, and to which new transformations can\nbe appended.",null,null],[10,"transformation","","Gets the transformation of `self`.",88,null],[10,"inverse_transformation","","Gets the inverse transformation of `self`.",88,null],[10,"append_transformation_mut","","Appends a transformation to this object.",88,null],[10,"append_transformation","","Appends the transformation `amount` to a copy of `t`.",88,null],[10,"prepend_transformation_mut","","Prepends a transformation to this object.",88,null],[10,"prepend_transformation","","Prepends the transformation `amount` to a copy of `t`.",88,null],[10,"set_transformation","","Sets the transformation of `self`.",88,null],[8,"Translate","","Trait of objects able to translate other objects. This is typically\nimplemented by vectors to translate points.",null,null],[10,"translate","","Apply a translation to an object.",89,null],[10,"inverse_translate","","Apply an inverse translation to an object.",89,null],[8,"Translation","","Trait of object which represent a translation, and to wich new translation\ncan be appended.",null,null],[10,"translation","","Gets the translation associated with this object.",90,null],[10,"inverse_translation","","Gets the inverse translation associated with this object.",90,null],[10,"append_translation_mut","","Appends a translation to this object.",90,null],[10,"append_translation","","Appends the translation `amount` to a copy of `t`.",90,null],[10,"prepend_translation_mut","","Prepends a translation to this object.",90,null],[10,"prepend_translation","","Prepends the translation `amount` to a copy of `t`.",90,null],[10,"set_translation","","Sets the translation.",90,null],[8,"Transpose","","Trait of objects which can be transposed.",null,null],[10,"transpose","","Computes the transpose of a matrix.",91,null],[10,"transpose_mut","","In-place version of `transposed`.",91,null],[8,"UniformSphereSample","","Trait of vectors able to sample a unit sphere.",null,null],[10,"sample","","Iterate through the samples.",92,{"inputs":[{"name":"f"}],"output":null}],[14,"assert_approx_eq_eps!","","Asserts approximate equality within a given tolerance of two values with the\n`ApproxEq` trait.",null,null],[14,"assert_approx_eq_ulps!","","Asserts approximate equality within a given tolerance of two values with the\n`ApproxEq` trait, with tolerance specified in ULPs.",null,null],[11,"quaternion","","The underlying quaternion.",93,null],[11,"from_axisangle","","Creates a new quaternion from a unit vector (the rotation axis) and an angle\n(the rotation angle).",93,{"inputs":[{"name":"unit"},{"name":"n"}],"output":{"name":"unitquaternion"}}],[11,"from_scaled_axis","","Same as `::from_axisangle` with the axis multiplied with the angle.",93,{"inputs":[{"name":"vector3"}],"output":{"name":"unitquaternion"}}],[11,"from_quaternion","","Creates a new unit quaternion from a quaternion.",93,{"inputs":[{"name":"quaternion"}],"output":{"name":"unitquaternion"}}],[11,"from_euler_angles","","Creates a new unit quaternion from Euler angles.",93,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"unitquaternion"}}],[11,"angle","","The rotation angle of this unit quaternion.",93,null],[11,"axis","","The rotation axis of this unit quaternion or `None` if the rotation is zero.",93,null],[11,"to_rotation_matrix","","Builds a rotation matrix from this quaternion.",93,null],[11,"one","","",93,{"inputs":[],"output":{"name":"unitquaternion"}}],[11,"inverse","","",93,null],[11,"inverse_mut","","",93,null],[11,"rand","","",93,{"inputs":[{"name":"r"}],"output":{"name":"unitquaternion"}}],[11,"approx_epsilon","","",93,{"inputs":[],"output":{"name":"n"}}],[11,"approx_ulps","","",93,{"inputs":[],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",93,null],[11,"approx_eq_ulps","","",93,null],[11,"div","","",93,null],[11,"div_assign","","",93,null],[11,"mul","","",93,null],[11,"mul_assign","","",93,null],[11,"mul","","",93,null],[11,"mul","","",93,null],[11,"rotation","","",93,null],[11,"inverse_rotation","","",93,null],[11,"append_rotation_mut","","",93,null],[11,"append_rotation","","",93,null],[11,"prepend_rotation_mut","","",93,null],[11,"prepend_rotation","","",93,null],[11,"set_rotation","","",93,null],[11,"to_rotation_matrix","","",93,null],[11,"rotate","","",93,null],[11,"inverse_rotate","","",93,null],[11,"rotate","","",93,null],[11,"inverse_rotate","","",93,null],[11,"angle_to","","",93,null],[11,"rotation_to","","",93,null],[11,"transform","","",93,null],[11,"inverse_transform","","",93,null],[11,"transform","","",93,null],[11,"inverse_transform","","",93,null],[11,"fmt","","",93,null],[11,"dimension","","",93,{"inputs":[{"name":"option"}],"output":{"name":"usize"}}],[11,"exp","","Compute the exponential of a quaternion.",93,null],[11,"ln","","Compute the natural logarithm of a quaternion.",93,null],[11,"powf","","Raise this unit quaternion to a given floating power.",93,null],[11,"append_rotation_wrt_point","","Applies a rotation centered on a specific point.",82,null],[11,"append_rotation_wrt_point_mut","","Rotates `self` using a specific center of rotation.",82,null],[11,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",82,null],[11,"append_rotation_wrt_center_mut","","Applies a rotation centered on the translation of `m`.",82,null],[11,"norm","","Computes the norm of `self`.",73,null],[11,"distance_squared","","Computes the square distance between two points.",66,null],[11,"distance","","Computes the distance between two points.",66,null],[11,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self &lt;= other`.",76,null],[11,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self &lt; other`.",76,null],[11,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self &gt;= other`.",76,null],[11,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self &gt; other`.",76,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",76,null],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",76,null],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",76,null],[11,"approx_eq","","Tests approximate equality.",48,null],[11,"covariance_to","","Computes the covariance of the obsevations stored by `m`:",57,null],[11,"norm","","Computes the norm of `self`.",73,null],[11,"append_rotation_wrt_point","","Applies a rotation centered on a specific point.",82,null],[11,"append_rotation_wrt_point_mut","","Rotates `self` using a specific center of rotation.",82,null],[11,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",82,null],[11,"append_rotation_wrt_center_mut","","Applies a rotation centered on the translation of `m`.",82,null],[11,"distance_squared","","Computes the square distance between two points.",66,null],[11,"distance","","Computes the distance between two points.",66,null],[11,"approx_eq","","Tests approximate equality.",48,null],[11,"covariance_to","","Computes the covariance of the obsevations stored by `m`:",57,null],[11,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self &lt;= other`.",76,null],[11,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self &lt; other`.",76,null],[11,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self &gt;= other`.",76,null],[11,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self &gt; other`.",76,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",76,null],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",76,null],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",76,null]],"paths":[[3,"DVector"],[3,"Isometry2"],[3,"Isometry3"],[3,"Similarity2"],[3,"Similarity3"],[3,"Matrix1"],[3,"Matrix2"],[3,"Matrix3"],[3,"Matrix4"],[3,"Matrix5"],[3,"Matrix6"],[3,"Vector1"],[3,"Vector2"],[3,"Vector3"],[3,"Vector4"],[3,"Vector5"],[3,"Vector6"],[3,"Point1"],[3,"Point2"],[3,"Point3"],[3,"Point4"],[3,"Point5"],[3,"Point6"],[3,"Quaternion"],[4,"PartialOrdering"],[3,"DMatrix"],[3,"DMatrix1"],[3,"DVector1"],[3,"DMatrix2"],[3,"DVector2"],[3,"DMatrix3"],[3,"DVector3"],[3,"DMatrix4"],[3,"DVector4"],[3,"DMatrix5"],[3,"DVector5"],[3,"DMatrix6"],[3,"DVector6"],[3,"Identity"],[3,"Rotation2"],[3,"Rotation3"],[3,"Perspective3"],[3,"PerspectiveMatrix3"],[3,"Orthographic3"],[3,"OrthographicMatrix3"],[3,"Unit"],[8,"Absolute"],[8,"AbsoluteRotate"],[8,"ApproxEq"],[8,"Axpy"],[8,"Basis"],[8,"BaseFloat"],[8,"Bounded"],[8,"Cast"],[8,"Column"],[8,"ColumnSlice"],[8,"RowSlice"],[8,"Covariance"],[8,"Cross"],[8,"CrossMatrix"],[8,"Determinant"],[8,"Diagonal"],[8,"Dimension"],[8,"Dot"],[8,"EigenQR"],[8,"Eye"],[8,"FloatPoint"],[8,"FromHomogeneous"],[8,"Indexable"],[8,"Inverse"],[8,"Iterable"],[8,"IterableMut"],[8,"Mean"],[8,"Norm"],[8,"Origin"],[8,"Outer"],[8,"PartialOrder"],[8,"PointAsVector"],[8,"Repeat"],[8,"Rotate"],[8,"Rotation"],[8,"RotationMatrix"],[8,"RotationWithTranslation"],[8,"RotationTo"],[8,"Row"],[8,"Shape"],[8,"ToHomogeneous"],[8,"Transform"],[8,"Transformation"],[8,"Translate"],[8,"Translation"],[8,"Transpose"],[8,"UniformSphereSample"],[6,"UnitQuaternion"]]};
searchIndex["chrono"] = {"doc":"# Chrono 0.2.25","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",0,null],[13,"Tue","","Tuesday.",0,null],[13,"Wed","","Wednesday.",0,null],[13,"Thu","","Thursday.",0,null],[13,"Fri","","Friday.",0,null],[13,"Sat","","Saturday.",0,null],[13,"Sun","","Sunday.",0,null],[0,"duration","","ISO 8601 duration.",null,null],[3,"Duration","chrono::duration","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[0,"offset","chrono","The time zone, which calculates offsets from the local time to UTC.",null,null],[4,"LocalResult","chrono::offset","The conversion result from the local time to the timezone-aware datetime types.",null,null],[13,"None","","Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.",1,null],[13,"Single","","Given local time representation has a single unique result.",1,null],[13,"Ambiguous","","Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.",1,null],[0,"utc","","The UTC (Coordinated Universal Time) time zone.",null,null],[3,"UTC","chrono::offset::utc","The UTC time zone. This is the most efficient time zone when you don&#39;t need the local time.\nIt is also used as an offset (which is also a dummy type).",null,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"today","","Returns a `Date` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",2,{"inputs":[{"name":"utc"}],"output":{"name":"utc"}}],[11,"offset_from_local_date","","",2,null],[11,"offset_from_local_datetime","","",2,null],[11,"offset_from_utc_date","","",2,null],[11,"offset_from_utc_datetime","","",2,null],[11,"local_minus_utc","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[0,"fixed","chrono::offset","The time zone which has a fixed offset from UTC.",null,null],[3,"FixedOffset","chrono::offset::fixed","The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.",null,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_offset","","",3,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_local_date","","",3,null],[11,"offset_from_local_datetime","","",3,null],[11,"offset_from_utc_date","","",3,null],[11,"offset_from_utc_datetime","","",3,null],[11,"local_minus_utc","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[0,"local","chrono::offset","The local (system) time zone.",null,null],[3,"Local","chrono::offset::local","The local timescale. This is implemented via the standard `time` crate.",null,null],[11,"clone","","",4,null],[11,"today","","Returns a `Date` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",4,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"local"}}],[11,"offset_from_local_date","","",4,null],[11,"offset_from_local_datetime","","",4,null],[11,"offset_from_utc_date","","",4,null],[11,"offset_from_utc_datetime","","",4,null],[11,"from_local_date","","",4,null],[11,"from_local_datetime","","",4,null],[11,"from_utc_date","","",4,null],[11,"from_utc_datetime","","",4,null],[8,"Offset","chrono::offset","The offset from the local time to UTC.",null,null],[10,"local_minus_utc","","Returns the offset from UTC to the local time stored.",5,null],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.",6,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"yo","","Makes a new `Date` from year, day of year (DOY or &quot;ordinal&quot;) and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or &quot;ordinal&quot;) and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",6,null],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",6,null],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",6,null],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",6,null],[11,"datetime_from_str","","Parses a string with the specified format string and\nreturns a `DateTime` with the current offset.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",6,null],[10,"from_offset","","Reconstructs the time zone from the offset.",6,{"inputs":[{"name":"offset"}],"output":{"name":"self"}}],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if possible.",6,null],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if possible.",6,null],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware `Date` if possible.",6,null],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.",6,null],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot fail.",6,null],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This cannot fail.",6,null],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,null],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"single","","Returns `Some` only when the conversion result is unique, or `None` otherwise.",1,null],[11,"earliest","","Returns `Some` for the earliest possible conversion result, or `None` if none.",1,null],[11,"latest","","Returns `Some` for the latest possible conversion result, or `None` if none.",1,null],[11,"map","","Maps a `LocalResult&lt;T&gt;` into `LocalResult&lt;U&gt;` with given function.",1,null],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"unwrap","","Returns the single unique conversion result, or panics accordingly.",1,null],[0,"naive","chrono","Date and time types which do not concern about the timezones.",null,null],[0,"date","chrono::naive","ISO 8601 calendar date without timezone.",null,null],[3,"NaiveDate","chrono::naive::date","ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date](./index.html#calendar-date)\nfrom Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.",null,null],[17,"MIN","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"clone","","",7,null],[11,"cmp","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"from_ymd","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_yo","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_yo_opt","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_isoywd","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"naivedate"}}],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"option"}}],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"naivedate"}}],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",7,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",7,null],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,null],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,null],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,null],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,null],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,null],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,null],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,null],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,null],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",7,null],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",7,null],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",7,null],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",7,null],[11,"checked_add","","Adds the `days` part of given `Duration` to the current date.",7,null],[11,"checked_sub","","Subtracts the `days` part of given `Duration` from the current date.",7,null],[11,"format_with_items","","Formats the date with the specified formatting items.\nOtherwise it is same to the ordinary `format` method.",7,null],[11,"format","","Formats the date with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",7,null],[11,"year","","Returns the year number in the [calendar date](./index.html#calendar-date).",7,null],[11,"month","","Returns the month number starting from 1.",7,null],[11,"month0","","Returns the month number starting from 0.",7,null],[11,"day","","Returns the day of month starting from 1.",7,null],[11,"day0","","Returns the day of month starting from 0.",7,null],[11,"ordinal","","Returns the day of year starting from 1.",7,null],[11,"ordinal0","","Returns the day of year starting from 0.",7,null],[11,"weekday","","Returns the day of week.",7,null],[11,"isoweekdate","","",7,null],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",7,null],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting from 1) changed.",7,null],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting from 0) changed.",7,null],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting from 1) changed.",7,null],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting from 0) changed.",7,null],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting from 1) changed.",7,null],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting from 0) changed.",7,null],[11,"hash","","",7,null],[11,"add","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"time","chrono::naive","ISO 8601 time without timezone.",null,null],[3,"NaiveTime","chrono::naive::time","ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.",null,null],[11,"clone","","",8,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",8,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"format_with_items","","Formats the time with the specified formatting items.\nOtherwise it is same to the ordinary [`format`](#method.format) method.",8,null],[11,"format","","Formats the time with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",8,null],[11,"hour","","Returns the hour number from 0 to 23.",8,null],[11,"minute","","Returns the minute number from 0 to 59.",8,null],[11,"second","","Returns the second number from 0 to 59.",8,null],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",8,null],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",8,null],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",8,null],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",8,null],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.",8,null],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",8,null],[11,"hash","","",8,null],[11,"add","","",8,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"datetime","chrono::naive","ISO 8601 date and time without timezone.",null,null],[3,"NaiveDateTime","chrono::naive::datetime","ISO 8601 combined date and time without timezone.",null,null],[11,"clone","","",9,null],[11,"cmp","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"new","","Makes a new `NaiveDateTime` from date and time components.\nEquivalent to `date.and_time(time)` and many other helper constructors on `NaiveDate`.",9,{"inputs":[{"name":"naivedate"},{"name":"naivetime"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_unix_epoch","","*Deprecated:* Same to [`NaiveDateTime::from_timestamp`](#method.from_timestamp).",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_num_seconds_from_unix_epoch_opt","","*Deprecated:* Same to [`NaiveDateTime::from_timestamp_opt`](#method.from_timestamp_opt).",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDateTime`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",9,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"date","","Retrieves a date component.",9,null],[11,"time","","Retrieves a time component.",9,null],[11,"timestamp","","Returns the number of non-leap seconds since the midnight on January 1, 1970.",9,null],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole non-leap second.",9,null],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole non-leap second.",9,null],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole non-leap second.",9,null],[11,"num_seconds_from_unix_epoch","","*Deprecated:* Same to [`NaiveDateTime::timestamp`](#method.timestamp).",9,null],[11,"checked_add","","Adds given `Duration` to the current date and time.",9,null],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",9,null],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",9,null],[11,"format","","Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",9,null],[11,"year","","Returns the year number in the [calendar date](./index.html#calendar-date).",9,null],[11,"month","","Returns the month number starting from 1.",9,null],[11,"month0","","Returns the month number starting from 0.",9,null],[11,"day","","Returns the day of month starting from 1.",9,null],[11,"day0","","Returns the day of month starting from 0.",9,null],[11,"ordinal","","Returns the day of year starting from 1.",9,null],[11,"ordinal0","","Returns the day of year starting from 0.",9,null],[11,"weekday","","Returns the day of week.",9,null],[11,"isoweekdate","","",9,null],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",9,null],[11,"with_month","","Makes a new `NaiveDateTime` with the month number (starting from 1) changed.",9,null],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number (starting from 0) changed.",9,null],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.",9,null],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.",9,null],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.",9,null],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.",9,null],[11,"hour","","Returns the hour number from 0 to 23.",9,null],[11,"minute","","Returns the minute number from 0 to 59.",9,null],[11,"second","","Returns the second number from 0 to 59.",9,null],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",9,null],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",9,null],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",9,null],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",9,null],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.",9,null],[11,"hash","","",9,null],[11,"add","","",9,null],[11,"sub","","",9,null],[11,"sub","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"date","chrono","ISO 8601 calendar date with time zone.",null,null],[3,"Date","chrono::date","ISO 8601 calendar date with time zone.",null,null],[17,"MIN","","The minimum possible `Date`.",null,null],[17,"MAX","","The maximum possible `Date`.",null,null],[11,"clone","","",10,null],[11,"from_utc","","Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.",10,{"inputs":[{"name":"naivedate"},{"name":"offset"}],"output":{"name":"date"}}],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",10,null],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"succ","","Makes a new `Date` for the next date.",10,null],[11,"succ_opt","","Makes a new `Date` for the next date.",10,null],[11,"pred","","Makes a new `Date` for the prior date.",10,null],[11,"pred_opt","","Makes a new `Date` for the prior date.",10,null],[11,"offset","","Retrieves an associated offset from UTC.",10,null],[11,"timezone","","Retrieves an associated time zone.",10,null],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).",10,null],[11,"checked_add","","Adds given `Duration` to the current date.",10,null],[11,"checked_sub","","Subtracts given `Duration` from the current date.",10,null],[11,"naive_utc","","Returns a view to the naive UTC date.",10,null],[11,"naive_local","","Returns a view to the naive local date.",10,null],[11,"format_with_items","","Formats the date with the specified formatting items.",10,null],[11,"format","","Formats the date with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",10,null],[11,"year","","",10,null],[11,"month","","",10,null],[11,"month0","","",10,null],[11,"day","","",10,null],[11,"day0","","",10,null],[11,"ordinal","","",10,null],[11,"ordinal0","","",10,null],[11,"weekday","","",10,null],[11,"isoweekdate","","",10,null],[11,"with_year","","",10,null],[11,"with_month","","",10,null],[11,"with_month0","","",10,null],[11,"with_day","","",10,null],[11,"with_day0","","",10,null],[11,"with_ordinal","","",10,null],[11,"with_ordinal0","","",10,null],[11,"eq","","",10,null],[11,"partial_cmp","","",10,null],[11,"cmp","","",10,null],[11,"hash","","",10,null],[11,"add","","",10,null],[11,"sub","","",10,null],[11,"sub","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[0,"datetime","chrono","ISO 8601 date and time with time zone.",null,null],[3,"DateTime","chrono::datetime","ISO 8601 combined date and time with time zone.",null,null],[11,"clone","","",11,null],[11,"from_utc","","Makes a new `DateTime` with given *UTC* datetime and offset.\nThe local datetime should be constructed via the `TimeZone` trait.",11,{"inputs":[{"name":"naivedatetime"},{"name":"offset"}],"output":{"name":"datetime"}}],[11,"date","","Retrieves a date component.",11,null],[11,"time","","Retrieves a time component.\nUnlike `date`, this is not associated to the time zone.",11,null],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka &quot;UNIX timestamp&quot;).",11,null],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second boundary",11,null],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second boundary",11,null],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second boundary",11,null],[11,"num_seconds_from_unix_epoch","","*Deprecated*: Same to `DateTime::timestamp`.",11,null],[11,"offset","","Retrieves an associated offset from UTC.",11,null],[11,"timezone","","Retrieves an associated time zone.",11,null],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `DateTime` (but will change the string representation).",11,null],[11,"checked_add","","Adds given `Duration` to the current date and time.",11,null],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",11,null],[11,"naive_utc","","Returns a view to the naive UTC datetime.",11,null],[11,"naive_local","","Returns a view to the naive local datetime.",11,null],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_str","","Parses a string with the specified format string and\nreturns a new `DateTime` with a parsed `FixedOffset`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",11,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.",11,null],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.",11,null],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",11,null],[11,"format","","Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",11,null],[11,"year","","",11,null],[11,"month","","",11,null],[11,"month0","","",11,null],[11,"day","","",11,null],[11,"day0","","",11,null],[11,"ordinal","","",11,null],[11,"ordinal0","","",11,null],[11,"weekday","","",11,null],[11,"isoweekdate","","",11,null],[11,"with_year","","",11,null],[11,"with_month","","",11,null],[11,"with_month0","","",11,null],[11,"with_day","","",11,null],[11,"with_day0","","",11,null],[11,"with_ordinal","","",11,null],[11,"with_ordinal0","","",11,null],[11,"hour","","",11,null],[11,"minute","","",11,null],[11,"second","","",11,null],[11,"nanosecond","","",11,null],[11,"with_hour","","",11,null],[11,"with_minute","","",11,null],[11,"with_second","","",11,null],[11,"with_nanosecond","","",11,null],[11,"eq","","",11,null],[11,"partial_cmp","","",11,null],[11,"cmp","","",11,null],[11,"hash","","",11,null],[11,"add","","",11,null],[11,"sub","","",11,null],[11,"sub","","",11,null],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"format","chrono","Formatting utilities for date and time.",null,null],[3,"ParseError","chrono::format","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",12,null],[13,"Zero","","Zero (`0`) padding.",12,null],[13,"Space","","Space padding.",12,null],[4,"Numeric","","Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.",13,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.",13,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"Month","","Month (FW=PW=2).",13,null],[13,"Day","","Day of the month (FW=PW=2).",13,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).",13,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday of January (FW=PW=2).",13,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",13,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).",13,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",13,null],[13,"Ordinal","","Day of the year (FW=PW=3).",13,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",13,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",13,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",13,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",13,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).",13,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.",13,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",14,null],[13,"LongMonthName","","Full month names.",14,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",14,null],[13,"LongWeekdayName","","Full day of the week names.",14,null],[13,"LowerAmPm","","AM/PM.",14,null],[13,"UpperAmPm","","AM/PM.",14,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).",14,null],[13,"Nanosecond3","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.",14,null],[13,"Nanosecond6","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.",14,null],[13,"Nanosecond9","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.",14,null],[13,"TimezoneName","","Timezone name.",14,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).",14,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).",14,null],[13,"TimezoneOffset","","Same to [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.",14,null],[13,"TimezoneOffsetZ","","Same to [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.",14,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and MIME date and time.",14,null],[13,"RFC3339","","RFC 3339 &amp; ISO 8601 date and time syntax.",14,null],[4,"Item","","A single formatting item. This is used for both formatting and parsing.",null,null],[13,"Literal","","A literally printed and parsed text.",15,null],[13,"Space","","Whitespace. Prints literally but reads zero or more whitespace.",15,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.",15,null],[13,"Fixed","","Fixed-format item.",15,null],[13,"Error","","Issues a formatting error. Used to signal an invalid format string.",15,null],[5,"parse","","Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.",null,{"inputs":[{"name":"parsed"},{"name":"str"},{"name":"i"}],"output":{"name":"parseresult"}}],[5,"format","","Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.",null,{"inputs":[{"name":"formatter"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"result"}}],[0,"parsed","","A collection of parsed date and time items.\nThey can be constructed incrementally while being checked for consistency.",null,null],[3,"Parsed","chrono::format::parsed","Parsed parts of date and time. There are two classes of methods:",null,null],[12,"year","","Year.",16,null],[12,"year_div_100","","Year divided by 100. Implies that the year is &gt;= 1 BCE when set.",16,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is &gt;= 1 BCE when set.",16,null],[12,"isoyear","","Year in the [ISO week date](../../naive/date/index.html#week-date).",16,null],[12,"isoyear_div_100","","Year in the [ISO week date](../../naive/date/index.html#week-date), divided by 100.\nImplies that the year is &gt;= 1 BCE when set.",16,null],[12,"isoyear_mod_100","","Year in the [ISO week date](../../naive/date/index.html#week-date), modulo 100.\nImplies that the year is &gt;= 1 BCE when set.",16,null],[12,"month","","Month (1--12).",16,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"isoweek","","[ISO week number](../../naive/date/index.html#week-date)\n(1--52 or 1--53 depending on the year).",16,null],[12,"weekday","","Day of the week.",16,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",16,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).",16,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.",16,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",16,null],[12,"minute","","Minute number (0--59).",16,null],[12,"second","","Second number (0--60, accounting for leap seconds).",16,null],[12,"nanosecond","","The number of nanoseconds since the whole second (0--999,999,999).",16,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970.",16,null],[12,"offset","","Offset from the local time to UTC, in seconds.",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"new","","Returns the initial value of parsed parts.",16,{"inputs":[],"output":{"name":"parsed"}}],[11,"set_year","","Tries to set the [`year`](#structfield.year) field from given value.",16,null],[11,"set_year_div_100","","Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.",16,null],[11,"set_year_mod_100","","Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.",16,null],[11,"set_isoyear","","Tries to set the [`isoyear`](#structfield.isoyear) field from given value.",16,null],[11,"set_isoyear_div_100","","Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.",16,null],[11,"set_isoyear_mod_100","","Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.",16,null],[11,"set_month","","Tries to set the [`month`](#structfield.month) field from given value.",16,null],[11,"set_week_from_sun","","Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.",16,null],[11,"set_week_from_mon","","Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.",16,null],[11,"set_isoweek","","Tries to set the [`isoweek`](#structfield.isoweek) field from given value.",16,null],[11,"set_weekday","","Tries to set the [`weekday`](#structfield.weekday) field from given value.",16,null],[11,"set_ordinal","","Tries to set the [`ordinal`](#structfield.ordinal) field from given value.",16,null],[11,"set_day","","Tries to set the [`day`](#structfield.day) field from given value.",16,null],[11,"set_ampm","","Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n(`false` for AM, `true` for PM)",16,null],[11,"set_hour12","","Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\ngiven hour number in 12-hour clocks.",16,null],[11,"set_hour","","Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n[`hour_mod_12`](#structfield.hour_mod_12) fields from given value.",16,null],[11,"set_minute","","Tries to set the [`minute`](#structfield.minute) field from given value.",16,null],[11,"set_second","","Tries to set the [`second`](#structfield.second) field from given value.",16,null],[11,"set_nanosecond","","Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.",16,null],[11,"set_timestamp","","Tries to set the [`timestamp`](#structfield.timestamp) field from given value.",16,null],[11,"set_offset","","Tries to set the [`offset`](#structfield.offset) field from given value.",16,null],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",16,null],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",16,null],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,\nexcept for the [`offset`](#structfield.offset) field (assumed to have a given value).\nThis is required for parsing a local time or other known-timezone inputs.",16,null],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",16,null],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given fields.",16,null],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given fields,\nwith an additional `TimeZone` used to interpret and validate the local date.",16,null],[0,"strftime","chrono::format","`strftime`/`strptime`-inspired date and time formatting syntax.",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"clone","","",17,null],[11,"new","","Creates a new parsing iterator from the `strftime`-like format string.",17,{"inputs":[{"name":"str"}],"output":{"name":"strftimeitems"}}],[11,"next","","",17,null],[6,"ParseResult","chrono::format","Same to `Result&lt;T, ParseError&gt;`.",null,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"description","","",18,null],[11,"fmt","","",19,null],[11,"new","","Makes a new `DelayedFormat` value out of local date and time.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and time and UTC offset.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"off"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"fmt","","",19,null],[8,"Datelike","chrono","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the [calendar date](./naive/date/index.html#calendar-date).",20,null],[11,"year_ce","","Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).",20,null],[10,"month","","Returns the month number starting from 1.",20,null],[10,"month0","","Returns the month number starting from 0.",20,null],[10,"day","","Returns the day of month starting from 1.",20,null],[10,"day0","","Returns the day of month starting from 0.",20,null],[10,"ordinal","","Returns the day of year starting from 1.",20,null],[10,"ordinal0","","Returns the day of year starting from 0.",20,null],[10,"weekday","","Returns the day of week.",20,null],[10,"isoweekdate","","Returns the ISO week date: an adjusted year, week number and day of week.\nThe adjusted year may differ from that of the calendar date.",20,null],[10,"with_year","","Makes a new value with the year number changed.",20,null],[10,"with_month","","Makes a new value with the month number (starting from 1) changed.",20,null],[10,"with_month0","","Makes a new value with the month number (starting from 0) changed.",20,null],[10,"with_day","","Makes a new value with the day of month (starting from 1) changed.",20,null],[10,"with_day0","","Makes a new value with the day of month (starting from 0) changed.",20,null],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1) changed.",20,null],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0) changed.",20,null],[11,"num_days_from_ce","","Returns the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",20,null],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",21,null],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.",21,null],[10,"minute","","Returns the minute number from 0 to 59.",21,null],[10,"second","","Returns the second number from 0 to 59.",21,null],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",21,null],[10,"with_hour","","Makes a new value with the hour number changed.",21,null],[10,"with_minute","","Makes a new value with the minute number changed.",21,null],[10,"with_second","","Makes a new value with the second number changed.",21,null],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole non-leap second changed.",21,null],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",21,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"succ","","The next day in the week.",0,null],[11,"pred","","The previous day in the week.",0,null],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)",0,null],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",0,null],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",0,null],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",0,null],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"weeks","chrono::duration","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",22,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",22,null],[11,"num_days","","Returns the total number of whole days in the duration.",22,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",22,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",22,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",22,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",22,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",22,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",22,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",22,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",22,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",22,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",22,{"inputs":[{"name":"duration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",22,null],[11,"fmt","","",22,null],[11,"cmp","","",22,null],[11,"partial_cmp","","",22,null],[11,"lt","","",22,null],[11,"le","","",22,null],[11,"gt","","",22,null],[11,"ge","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"clone","","",22,null],[11,"neg","","",22,null],[11,"add","","",22,null],[11,"sub","","",22,null],[11,"mul","","",22,null],[11,"div","","",22,null],[11,"fmt","","",22,null]],"paths":[[4,"Weekday"],[4,"LocalResult"],[3,"UTC"],[3,"FixedOffset"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"Parsed"],[3,"StrftimeItems"],[3,"ParseError"],[3,"DelayedFormat"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[3,"BigInt","num","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[6,"Rational","","",null,null],[6,"BigRational","","",null,null],[3,"Complex","","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,null],[10,"mod_floor","","Floored integer modulo, satisfying:",1,null],[10,"gcd","","Greatest Common Divisor (GCD).",1,null],[10,"lcm","","Lowest Common Multiple (LCM).",1,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",1,null],[10,"is_even","","Returns `true` if the number is even.",1,null],[10,"is_odd","","Returns `true` if the number is odd.",1,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",2,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",2,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",5,null],[10,"abs_sub","","The positive difference of two numbers.",5,null],[10,"signum","","Returns the sign of the number.",5,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",5,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",5,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",6,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",6,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",7,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",7,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",8,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",9,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",10,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",11,null],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",12,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",12,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",12,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",12,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",12,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",12,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",12,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",12,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",12,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",12,null],[10,"swap_bytes","","Reverses the byte order of the integer.",12,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",12,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",12,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",12,null],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",13,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",13,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",13,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",13,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",13,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",13,null],[10,"floor","","Returns the largest integer less than or equal to a number.",13,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",13,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",13,null],[10,"trunc","","Return the integer part of a number.",13,null],[10,"fract","","Returns the fractional part of a number.",13,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",13,null],[10,"signum","","Returns a number that represents the sign of `self`.",13,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",13,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",13,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",13,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",13,null],[10,"powi","","Raise a number to an integer power.",13,null],[10,"powf","","Raise a number to a floating point power.",13,null],[10,"sqrt","","Take the square root of a number.",13,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",13,null],[10,"exp2","","Returns `2^(self)`.",13,null],[10,"ln","","Returns the natural logarithm of the number.",13,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",13,null],[10,"log2","","Returns the base 2 logarithm of the number.",13,null],[10,"log10","","Returns the base 10 logarithm of the number.",13,null],[11,"to_degrees","","Converts radians to degrees.",13,null],[11,"to_radians","","Converts degrees to radians.",13,null],[10,"max","","Returns the maximum of the two numbers.",13,null],[10,"min","","Returns the minimum of the two numbers.",13,null],[10,"abs_sub","","The positive difference of two numbers.",13,null],[10,"cbrt","","Take the cubic root of a number.",13,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",13,null],[10,"sin","","Computes the sine of a number (in radians).",13,null],[10,"cos","","Computes the cosine of a number (in radians).",13,null],[10,"tan","","Computes the tangent of a number (in radians).",13,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",13,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",13,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",13,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",13,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",13,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",13,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",13,null],[10,"sinh","","Hyperbolic sine function.",13,null],[10,"cosh","","Hyperbolic cosine function.",13,null],[10,"tanh","","Hyperbolic tangent function.",13,null],[10,"asinh","","Inverse hyperbolic sine function.",13,null],[10,"acosh","","Inverse hyperbolic cosine function.",13,null],[10,"atanh","","Inverse hyperbolic tangent function.",13,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",13,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",16,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",16,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"pow","num","",null,null],[5,"pow","num::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[0,"bigint","","",null,null],[0,"complex","","",null,null],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null],[0,"rational","","",null,null],[11,"new","","Creates and initializes a BigInt.",17,{"inputs":[{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",17,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",17,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",17,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",17,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",17,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",17,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",17,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",17,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",17,null],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`,\nnot including the sign.",17,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it&#39;s not negative.",17,null],[11,"checked_add","","",17,null],[11,"checked_sub","","",17,null],[11,"checked_mul","","",17,null],[11,"checked_div","","",17,null],[11,"hash","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"decode","","",18,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",18,null],[11,"eq","","",18,null],[11,"partial_cmp","","",18,null],[11,"cmp","","",18,null],[11,"default","","",18,{"inputs":[],"output":{"name":"biguint"}}],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"from_str","","",18,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",18,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",18,null],[11,"bitand","","",18,null],[11,"bitor","","",18,null],[11,"bitor","","",18,null],[11,"bitxor","","",18,null],[11,"bitxor","","",18,null],[11,"shl","","",18,null],[11,"shr","","",18,null],[11,"zero","","",18,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",18,null],[11,"one","","",18,{"inputs":[],"output":{"name":"biguint"}}],[11,"add","","",18,null],[11,"add","","",18,null],[11,"sub","","",18,null],[11,"sub","","",18,null],[11,"mul","","",18,null],[11,"mul","","",18,null],[11,"div","","",18,null],[11,"div","","",18,null],[11,"rem","","",18,null],[11,"rem","","",18,null],[11,"neg","","",18,null],[11,"checked_add","","",18,null],[11,"checked_sub","","",18,null],[11,"checked_mul","","",18,null],[11,"checked_div","","",18,null],[11,"div_rem","","",18,null],[11,"div_floor","","",18,null],[11,"mod_floor","","",18,null],[11,"div_mod_floor","","",18,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",18,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",18,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",18,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",18,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",18,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",18,null],[11,"to_i64","","",18,null],[11,"to_u64","","",18,null],[11,"to_f32","","",18,null],[11,"to_f64","","",18,null],[11,"from_i64","","",18,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",18,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",18,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",18,{"inputs":[{"name":"u64"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"u8"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"u16"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"u32"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"usize"}],"output":{"name":"biguint"}}],[11,"to_biguint","","",18,null],[11,"new","","Creates and initializes a `BigUint`.",18,{"inputs":[{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",18,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",18,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",18,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",18,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",18,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",18,null],[11,"parse_bytes","","Creates and initializes a `BigUint`.",18,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",18,null],[11,"hash","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"decode","","",17,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",17,null],[11,"eq","","",17,null],[11,"partial_cmp","","",17,null],[11,"cmp","","",17,null],[11,"default","","",17,{"inputs":[],"output":{"name":"bigint"}}],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"from_str","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",17,null],[11,"shr","","",17,null],[11,"zero","","",17,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",17,null],[11,"one","","",17,{"inputs":[],"output":{"name":"bigint"}}],[11,"abs","","",17,null],[11,"abs_sub","","",17,null],[11,"signum","","",17,null],[11,"is_positive","","",17,null],[11,"is_negative","","",17,null],[11,"add","","",17,null],[11,"add","","",17,null],[11,"sub","","",17,null],[11,"sub","","",17,null],[11,"mul","","",17,null],[11,"mul","","",17,null],[11,"div","","",17,null],[11,"div","","",17,null],[11,"rem","","",17,null],[11,"rem","","",17,null],[11,"neg","","",17,null],[11,"checked_add","","",17,null],[11,"checked_sub","","",17,null],[11,"checked_mul","","",17,null],[11,"checked_div","","",17,null],[11,"div_rem","","",17,null],[11,"div_floor","","",17,null],[11,"mod_floor","","",17,null],[11,"div_mod_floor","","",17,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",17,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",17,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",17,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",17,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",17,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",17,null],[11,"to_i64","","",17,null],[11,"to_u64","","",17,null],[11,"to_f32","","",17,null],[11,"to_f64","","",17,null],[11,"from_i64","","",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",17,{"inputs":[{"name":"i64"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"i8"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"i16"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"i32"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"isize"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u64"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u8"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u16"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u32"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"usize"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"to_bigint","","",17,null],[11,"to_bigint","","",18,null],[11,"to_biguint","","",17,null],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"powf","","Raises `self` to a floating point power.",0,null],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,null],[11,"powc","","Raises `self` to a complex power.",0,null],[11,"expf","","Raises a floating point number to the complex power `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null]],"paths":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[3,"BigInt"],[3,"BigUint"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"powf","","Raises `self` to a floating point power.",0,null],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,null],[11,"powc","","Raises `self` to a complex power.",0,null],[11,"expf","","Raises a floating point number to the complex power `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null]],"paths":[[3,"Complex"]]};
searchIndex["nanovg"] = {"doc":"","items":[[3,"Align","nanovg","",null,null],[3,"CreationFlags","","",null,null],[3,"ImageFlags","","",null,null],[3,"Color","","",null,null],[3,"Paint","","",null,null],[3,"Image","","",null,null],[3,"Font","","",null,null],[3,"TextRow","","",null,null],[3,"GlyphPosition","","",null,null],[3,"Transform","","",null,null],[3,"Context","","",null,null],[4,"Winding","","",null,null],[13,"CCW","","",0,null],[13,"CW","","",0,null],[4,"Solidity","","",null,null],[13,"SOLID","","",1,null],[13,"HOLE","","",1,null],[4,"LineCap","","",null,null],[13,"BUTT","","",2,null],[13,"ROUND","","",2,null],[13,"SQUARE","","",2,null],[13,"BEVEL","","",2,null],[13,"MITER","","",2,null],[4,"PatternRepeat","","",null,null],[13,"NOREPEAT","","",3,null],[13,"REPEATX","","",3,null],[13,"REPEATY","","",3,null],[5,"relative_index","","",null,null],[5,"deg_to_rad","","",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"rad_to_deg","","",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[17,"LEFT","","",null,null],[17,"CENTER","","",null,null],[17,"RIGHT","","",null,null],[17,"TOP","","",null,null],[17,"MIDDLE","","",null,null],[17,"BOTTOM","","",null,null],[17,"BASELINE","","",null,null],[17,"ANTIALIAS","","",null,null],[17,"STENCIL_STROKES","","",null,null],[17,"GENERATE_MIPMAPS","","",null,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"eq","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",2,null],[11,"hash","","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",3,null],[11,"hash","","",3,null],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"hash","","",4,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"empty","","Returns an empty set of flags.",4,{"inputs":[],"output":{"name":"align"}}],[11,"all","","Returns the set containing all flags.",4,{"inputs":[],"output":{"name":"align"}}],[11,"bits","","Returns the raw value of the flags currently stored.",4,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",4,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",4,{"inputs":[{"name":"u32"}],"output":{"name":"align"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",4,null],[11,"is_all","","Returns `true` if all flags are currently set.",4,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",4,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",4,null],[11,"insert","","Inserts the specified flags in-place.",4,null],[11,"remove","","Removes the specified flags in-place.",4,null],[11,"toggle","","Toggles the specified flags in-place.",4,null],[11,"bitor","","Returns the union of the two sets of flags.",4,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",4,null],[11,"bitand","","Returns the intersection between the two sets of flags.",4,null],[11,"sub","","Returns the set difference of the two sets of flags.",4,null],[11,"not","","Returns the complement of this set of flags.",4,null],[11,"hash","","",5,null],[11,"cmp","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"empty","","Returns an empty set of flags.",5,{"inputs":[],"output":{"name":"creationflags"}}],[11,"all","","Returns the set containing all flags.",5,{"inputs":[],"output":{"name":"creationflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",5,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",5,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",5,{"inputs":[{"name":"u32"}],"output":{"name":"creationflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,null],[11,"is_all","","Returns `true` if all flags are currently set.",5,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",5,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",5,null],[11,"insert","","Inserts the specified flags in-place.",5,null],[11,"remove","","Removes the specified flags in-place.",5,null],[11,"toggle","","Toggles the specified flags in-place.",5,null],[11,"bitor","","Returns the union of the two sets of flags.",5,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",5,null],[11,"bitand","","Returns the intersection between the two sets of flags.",5,null],[11,"sub","","Returns the set difference of the two sets of flags.",5,null],[11,"not","","Returns the complement of this set of flags.",5,null],[11,"hash","","",6,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"clone","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"empty","","Returns an empty set of flags.",6,{"inputs":[],"output":{"name":"imageflags"}}],[11,"all","","Returns the set containing all flags.",6,{"inputs":[],"output":{"name":"imageflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",6,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",6,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",6,{"inputs":[{"name":"u32"}],"output":{"name":"imageflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,null],[11,"is_all","","Returns `true` if all flags are currently set.",6,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",6,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",6,null],[11,"insert","","Inserts the specified flags in-place.",6,null],[11,"remove","","Removes the specified flags in-place.",6,null],[11,"toggle","","Toggles the specified flags in-place.",6,null],[11,"bitor","","Returns the union of the two sets of flags.",6,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",6,null],[11,"bitand","","Returns the intersection between the two sets of flags.",6,null],[11,"sub","","Returns the set difference of the two sets of flags.",6,null],[11,"not","","Returns the complement of this set of flags.",6,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"clone","","",7,null],[11,"r","","",7,null],[11,"g","","",7,null],[11,"b","","",7,null],[11,"a","","",7,null],[11,"rgb","","",7,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[11,"rgb_f","","",7,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[11,"rgba","","",7,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[11,"rgba_f","","",7,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[11,"lerp_rgba","","",7,{"inputs":[{"name":"color"},{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"trans_rgba","","",7,{"inputs":[{"name":"color"},{"name":"u8"}],"output":{"name":"color"}}],[11,"trans_rgba_f","","",7,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"hsl","","",7,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[11,"hsla","","",7,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"u8"}],"output":{"name":"color"}}],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"start_index","","",11,null],[11,"end_index","","",11,null],[11,"next_index","","",11,null],[11,"width","","",11,null],[11,"minx","","",11,null],[11,"maxx","","",11,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"byte_index","","",12,null],[11,"x","","",12,null],[11,"minx","","",12,null],[11,"maxx","","",12,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"as_mut_slice","","",13,null],[11,"into_array","","",13,null],[11,"from_array","","",13,null],[11,"new","","",13,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"transform"}}],[11,"new_identity","","",13,{"inputs":[],"output":{"name":"transform"}}],[11,"new_from_slice","","",13,null],[11,"a","","",13,null],[11,"b","","",13,null],[11,"c","","",13,null],[11,"d","","",13,null],[11,"e","","",13,null],[11,"f","","",13,null],[11,"set_identity","","",13,null],[11,"set_translate","","",13,null],[11,"set_scale","","",13,null],[11,"set_rotate","","",13,null],[11,"set_skew_x","","",13,null],[11,"set_skew_y","","",13,null],[11,"set_multiply","","",13,null],[11,"set_premultiply","","",13,null],[11,"set_inverse","","",13,null],[11,"translate","","",13,null],[11,"scale","","",13,null],[11,"rotate","","",13,null],[11,"skew_x","","",13,null],[11,"skew_y","","",13,null],[11,"multiply","","",13,null],[11,"premultiply","","",13,null],[11,"inverted","","",13,null],[11,"transform_point","","",13,null],[11,"fmt","","",14,null],[11,"drop","","",14,null],[11,"create_gl2","","",14,{"inputs":[{"name":"creationflags"}],"output":{"name":"context"}}],[11,"begin_frame","","",14,null],[11,"end_frame","","",14,null],[11,"save","","",14,null],[11,"restore","","",14,null],[11,"reset","","",14,null],[11,"stroke_color","","",14,null],[11,"stroke_paint","","",14,null],[11,"fill_color","","",14,null],[11,"fill_paint","","",14,null],[11,"miter_limit","","",14,null],[11,"stroke_width","","",14,null],[11,"line_cap","","",14,null],[11,"line_join","","",14,null],[11,"global_alpha","","",14,null],[11,"reset_transform","","",14,null],[11,"transform","","",14,null],[11,"translate","","",14,null],[11,"rotate","","",14,null],[11,"skew_x","","",14,null],[11,"skew_y","","",14,null],[11,"scale","","",14,null],[11,"current_transform","","",14,null],[11,"create_image","","",14,null],[11,"create_image_flags","","",14,null],[11,"create_image_mem","","",14,null],[11,"create_image_mem_flags","","",14,null],[11,"create_image_rgba","","",14,null],[11,"create_image_rgba_flags","","",14,null],[11,"update_image","","",14,null],[11,"image_size","","",14,null],[11,"delete_image","","",14,null],[11,"linear_gradient","","",14,null],[11,"box_gradient","","",14,null],[11,"radial_gradient","","",14,null],[11,"image_pattern","","",14,null],[11,"scissor","","",14,null],[11,"reset_scissor","","",14,null],[11,"begin_path","","",14,null],[11,"move_to","","",14,null],[11,"line_to","","",14,null],[11,"bezier_to","","",14,null],[11,"quad_to","","",14,null],[11,"arc_to","","",14,null],[11,"close_path","","",14,null],[11,"path_winding","","",14,null],[11,"arc","","",14,null],[11,"rect","","",14,null],[11,"rounded_rect","","",14,null],[11,"ellipse","","",14,null],[11,"circle","","",14,null],[11,"fill","","",14,null],[11,"stroke","","",14,null],[11,"create_font","","",14,null],[11,"create_font_mem","","",14,null],[11,"find_font","","",14,null],[11,"font_size","","",14,null],[11,"font_blur","","",14,null],[11,"text_letter_spacing","","",14,null],[11,"text_line_height","","",14,null],[11,"text_align","","",14,null],[11,"font_face_id","","",14,null],[11,"font_face","","",14,null],[11,"text","","",14,null],[11,"text_box","","",14,null],[11,"text_bounds","","",14,null],[11,"text_advance","","",14,null],[11,"text_box_bounds","","",14,null],[11,"text_glyph_positions","","return a vector of position info for all glyphs in &#39;text&#39;.\n&#39;text&#39; is utf8-encoded unicode, so the number of glyphs isn&#39;t necessarily the byte-length of the text.",14,null],[11,"text_break_lines","","",14,null],[11,"text_metrics","","",14,null],[11,"debug_dump_path_cache","","",14,null]],"paths":[[4,"Winding"],[4,"Solidity"],[4,"LineCap"],[4,"PatternRepeat"],[3,"Align"],[3,"CreationFlags"],[3,"ImageFlags"],[3,"Color"],[3,"Paint"],[3,"Image"],[3,"Font"],[3,"TextRow"],[3,"GlyphPosition"],[3,"Transform"],[3,"Context"]]};
searchIndex["linked_list"] = {"doc":"An alternative implementation of `std::collections::LinkedList`, featuring experimental\nCursor-based APIs.","items":[[3,"LinkedList","linked_list","An experimental rewrite of LinkedList to provide a more cursor-oriented API.",null,null],[3,"Cursor","","A Cursor is like an iterator, except that it can freely seek back-and-forth, and can\nsafely mutate the list during iteration. This is because the lifetime of its yielded\nreferences are tied to its own lifetime, instead of just the underlying list. This means\ncursors cannot yield multiple elements at once.",null,null],[3,"Iter","","An iterator over references to the items of a `LinkedList`.",null,null],[3,"IterMut","","An iterator over mutable references to the items of a `LinkedList`.",null,null],[3,"IntoIter","","An iterator over mutable references to the items of a `LinkedList`.",null,null],[11,"new","","Makes a new LinkedList.",0,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"push_back","","Appends an element to the back of the list.",0,null],[11,"push_front","","Appends an element to the front of the list.",0,null],[11,"pop_back","","Removes the element at back of the list. Returns None if the list is empty.",0,null],[11,"pop_front","","Removes the element at front of the list. Returns None if the list is empty.",0,null],[11,"front","","Gets the element at the front of the list, or None if empty.",0,null],[11,"back","","Gets the element at the back of the list, or None if empty.",0,null],[11,"front_mut","","Gets the element at the front of the list mutably, or None if empty.",0,null],[11,"back_mut","","Gets the element at the back of the list mutably, or None if empty.",0,null],[11,"insert","","Inserts an element at the given index.",0,null],[11,"remove","","Removes the element at the given index. Returns None if the index is out of bounds.",0,null],[11,"split_at","","Splits the list into two lists at the given index. Returns the right side of the split.\nReturns an empty list if index is out of bounds.",0,null],[11,"append","","Appends the given list to the end of this one. The old list will be empty afterwards.",0,null],[11,"splice","","Inserts the given list at the given index. The old list will be empty afterwards.",0,null],[11,"len","","Gets the number of elements in the list.",0,null],[11,"is_empty","","Whether the list is empty.",0,null],[11,"clear","","Removes all elements from the list.",0,null],[11,"cursor","","Gets a cursor over the list.",0,null],[11,"iter","","Provides a forward iterator.",0,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",0,null],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",0,null],[11,"reset","","Resets the cursor to lie between the first and last element in the list.",1,null],[11,"next","","Gets the next element in the list.",1,null],[11,"prev","","Gets the previous element in the list.",1,null],[11,"peek_next","","Gets the next element in the list, without moving the cursor head.",1,null],[11,"peek_prev","","Gets the previous element in the list, without moving the cursor head.",1,null],[11,"insert","","Inserts an element at the cursor&#39;s location in the list, and moves the cursor head to\nlie before it. Therefore, the new element will be yielded by the next call to `next`.",1,null],[11,"remove","","Removes the next element in the list, without moving the cursor. Returns None if the list\nis empty, or if `next` is the ghost element",1,null],[11,"split","","",1,null],[11,"splice","","Inserts the entire list&#39;s contents right after the cursor.",1,null],[11,"seek_forward","","Calls `next` the specified number of times.",1,null],[11,"seek_backward","","Calls `prev` the specified number of times.",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"next_back","","",2,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[11,"next","","",3,null],[11,"size_hint","","",3,null],[11,"next_back","","",3,null],[11,"drop","","",0,null],[11,"from_iter","","",0,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"extend","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"into_iter","","",0,null]],"paths":[[3,"LinkedList"],[3,"Cursor"],[3,"Iter"],[3,"IntoIter"],[3,"IterMut"]]};
searchIndex["num_rational"] = {"doc":"Rational numbers","items":[[3,"Ratio","num_rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,{"inputs":[{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or reducing.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,null],[11,"numer","","Gets an immutable reference to the numerator.",0,null],[11,"denom","","Gets an immutable reference to the denominator.",0,null],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",0,null],[11,"reduced","","Returns a reduced copy of self.",0,null],[11,"recip","","Returns the reciprocal.",0,null],[11,"floor","","Rounds towards minus infinity.",0,null],[11,"ceil","","Rounds towards plus infinity.",0,null],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",0,null],[11,"trunc","","Rounds towards zero.",0,null],[11,"fract","","Returns the fractional part of a number, with division rounded towards zero.",0,null],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,null],[11,"from_float","","Converts a float into a rational number.",0,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"rem","","",0,null],[11,"rem","","",0,null],[11,"neg","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",0,null],[11,"abs_sub","","",0,null],[11,"signum","","",0,null],[11,"is_positive","","",0,null],[11,"is_negative","","",0,null],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,null],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null]],"paths":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["xplm"] = {"doc":"The `xplm` crate provides a convenient interface to the X-Plane plugin SDK.","items":[[3,"PluginInfo","xplm","Stores information about a plugin that is provided to X-Plane",null,null],[12,"name","","The plugin name",0,null],[12,"signature","","The plugin&#39;s signature, in reverse DNS format",0,null],[12,"description","","A description of the plugin",0,null],[5,"debug","","Writes a message to the X-Plane log.txt file",null,{"inputs":[{"name":"str"}],"output":null}],[5,"enable_debug_logging","","Enables the logging of plugin-related errors to the log.txt file",null,{"inputs":[],"output":null}],[5,"find_symbol","","Finds a symbol in the set of currently loaded libraries",null,null],[0,"data","","Functionality for reading, writing, and creating datarefs",null,null],[3,"Borrowed","xplm::data","",null,null],[3,"Owned","","",null,null],[3,"Shared","","",null,null],[3,"ReadWrite","","Marks a dataref that can be read and written",null,null],[3,"ReadOnly","","Marks a dataref that can only be read",null,null],[4,"SearchError","","Possible errors encountered when finding a dataref",null,null],[13,"InvalidName","","Indicates that the provided name contains one or more null bytes\nIncludes the NulError to provide more details",1,null],[13,"NotFound","","Indicates that no dataref with the specified name was found",1,null],[13,"WrongDataType","","Indicates that the requested data type and the dataref&#39;s type\ndo not match",1,null],[13,"WrongDataAccess","","Indicates that the wrong DataAccess was requested, which usually\nmeans that a ReadWrite DataRef object was used with a read-only dataref",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"find","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"get","","",2,null],[11,"set","","",2,null],[11,"get","","",2,null],[11,"set","","",2,null],[11,"get","","",2,null],[11,"set","","",2,null],[11,"get","","",2,null],[11,"len","","",2,null],[11,"set","","",2,null],[11,"set_from_slice","","",2,null],[11,"get","","",2,null],[11,"len","","",2,null],[11,"set","","",2,null],[11,"set_from_slice","","",2,null],[11,"get","","",2,null],[11,"len","","",2,null],[11,"set","","",2,null],[11,"set_from_slice","","",2,null],[11,"get","","",2,null],[11,"len","","",2,null],[11,"set","","",2,null],[11,"set_string","","",2,null],[11,"fmt","","",3,null],[11,"create","","Creates a dataref with the provided name, set to the provided value",3,{"inputs":[{"name":"str"},{"name":"d"}],"output":{"name":"result"}}],[11,"drop","","",3,null],[11,"get","","",3,null],[11,"set","","",3,null],[11,"len","","",3,null],[11,"set_from_slice","","",3,null],[11,"len","","",3,null],[11,"set_string","","",3,null],[11,"fmt","","",4,null],[11,"find","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"drop","","",4,null],[11,"get","","",4,null],[11,"set","","",4,null],[11,"get","","",4,null],[11,"set","","",4,null],[11,"get","","",4,null],[11,"set","","",4,null],[11,"get","","",4,null],[11,"len","","",4,null],[11,"set","","",4,null],[11,"set_from_slice","","",4,null],[11,"get","","",4,null],[11,"len","","",4,null],[11,"set","","",4,null],[11,"set_from_slice","","",4,null],[11,"get","","",4,null],[11,"len","","",4,null],[11,"set","","",4,null],[11,"set_from_slice","","",4,null],[11,"get","","",4,null],[11,"len","","",4,null],[11,"set","","",4,null],[11,"set_string","","",4,null],[8,"Readable","","A trait for objects that can be read to get a value",null,null],[10,"get","","Returns the value stored in this object",5,null],[8,"Writeable","","A trait for objects in which a value can be stored",null,null],[10,"set","","Sets the value in this object",6,null],[8,"ArrayReadable","","A trait for objects in which an array of values can be stored",null,null],[10,"len","","Returns the number of values in this array",7,null],[8,"ArrayWriteable","","A trait for objects that can be written like arrays",null,null],[10,"set_from_slice","","",8,null],[8,"StringReadable","","",null,null],[10,"len","","Returns the length of this string value in bytes",9,null],[8,"StringWriteable","","",null,null],[10,"set_string","","Sets the values in this array from a string slice\nIf the string contains one or more null bytes, an error\nis returned.",10,null],[8,"DataType","","Trait for types that have associated type IDs in X-Plane",null,null],[10,"data_type","","Returns the XPLMDataTypeID for this type",11,{"inputs":[],"output":{"name":"xplmdatatypeid"}}],[8,"DataAccess","","Trait for a read/write or read-only marker",null,null],[10,"writeable","","Returns true if the dataref should be writeable",12,{"inputs":[],"output":{"name":"bool"}}],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"writeable","","",13,{"inputs":[],"output":{"name":"bool"}}],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"writeable","","",14,{"inputs":[],"output":{"name":"bool"}}],[0,"command","xplm","Functionality for finding, creating, and executing commands\nProvides functionality for accessing and creating commands",null,null],[3,"Owned","xplm::command","Marks a command that this plugin owns",null,null],[3,"External","","Marks a command that is owned by something else",null,null],[3,"Command","","A command",null,null],[4,"SearchError","","Possible errors encountered when finding a command",null,null],[13,"InvalidName","","Indicates that the provided name contains one or more null bytes\nIncludes the NulError to provide more details",15,null],[13,"NotFound","","Indicates that no dataref with the specified name was found",15,null],[4,"CreateError","","Possible errors encountered when creating a command",null,null],[13,"InvalidName","","Indicates that the provided name contains one or more null bytes\nIncludes the NulError to provide more details",16,null],[13,"EmptyName","","Indicates that the provided name was empty",16,null],[8,"CommandCallback","","Trait for things that can respond to commands",null,null],[10,"command_begin","","Called when a command begins execution",17,null],[10,"command_continue","","Called frequently while a command is being executed",17,null],[10,"command_end","","Called when a command finishes execution",17,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"from","","",15,{"inputs":[{"name":"nulerror"}],"output":{"name":"self"}}],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"from","","",16,{"inputs":[{"name":"nulerror"}],"output":{"name":"self"}}],[11,"fmt","","",18,null],[11,"fmt","","",19,null],[11,"find","","Finds a command by its name",20,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"begin","","Starts executing this command",20,null],[11,"end","","Finishes executing this command",20,null],[11,"create","","Creates a command",20,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_callback","","Sets the callback that will be called when the command is executed.",20,null],[11,"drop","","",20,null],[0,"flight_loop","xplm","Flight loop callbacks\nAllows scheduling flight loop callbacks",null,null],[3,"NextCallback","xplm::flight_loop","Information on when the next callback should run",null,null],[3,"FlightLoop","","A handle to something that calls a flight loop callback",null,null],[4,"Phase","","Phases of execution in which a callback can run",null,null],[13,"BeforeFlightModel","","The callback is run before X-Plane runs the flight model",21,null],[13,"AfterFlightModel","","The callback is run after X-Plane runs the flight model",21,null],[8,"FlightLoopCallback","","A trait for things that can receive flight loop callbacks",null,null],[10,"callback","","Called for a flight loop callback.",22,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"after_loops","","Requests the next callback after a number of flight loops.\nIf the provided number of loops is zero, the next callback will be on the next flight loop.",23,{"inputs":[{"name":"u32"}],"output":{"name":"nextcallback"}}],[11,"after_seconds","","Requests that the next callback be after a number of seconds.\nIf the provided number of seconds is zero or negative, the next callback will be\non the next flight loop.",23,{"inputs":[{"name":"f32"}],"output":{"name":"nextcallback"}}],[11,"suspend","","Requests that the callback be suspended. The callback will not be called again until it\nis rescheduled.",23,{"inputs":[],"output":{"name":"nextcallback"}}],[11,"new","","Creates a flight loop callback that will execute the given callback in the given\nphase.",24,{"inputs":[{"name":"phase"},{"name":"c"}],"output":{"name":"flightloop"}}],[11,"schedule","","Schedules the callback to be executed",24,null],[11,"drop","","Destroys the flight loop and the callback",24,null],[0,"features","xplm","SDK feature querying and enabling\nAllows control over optional SDK features",null,null],[3,"Feature","xplm::features","A feature that can be enabled or disabled",null,null],[11,"fmt","","",25,null],[11,"with_name","","Creates a feature with a name",25,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"all","","Returns all the features that X-Plane supports",25,{"inputs":[],"output":{"name":"vec"}}],[11,"name","","Returns the name of this feature",25,null],[11,"set_enabled","","Enables or disables this feature",25,null],[0,"terrain","xplm","Terrain probing\nProvides access to scenery through terrain probes",null,null],[3,"ProbeResult","xplm::terrain","The data returned from a terrain probe",null,null],[12,"position","","Position of the terrain",26,null],[12,"normal","","Normal vector of the terrain",26,null],[12,"velocity","","Velocity of the terrain, in meters per second",26,null],[12,"is_water","","If the terrain is water",26,null],[3,"Probe","","A terrain probe",null,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"fmt","","",27,null],[11,"new","","Creates a new terrain probe",27,{"inputs":[],"output":{"name":"probe"}}],[11,"probe","","Probes terain at the specified location in local coordinates",27,null],[11,"probe_altitude","","Probes terrain at the specified latitude and longitude.",27,null],[11,"drop","","",27,null],[0,"position","xplm","Position types\nTypes that represent positions in X-Plane",null,null],[3,"Vec3","xplm::position","A generic 3-dimensional vector",null,null],[12,"x","","X coordinate, East-West. East is positive.",28,null],[12,"y","","Y coordinate, up-down. Up is positive.",28,null],[12,"z","","Z coordinate, North-South. South is positive.",28,null],[3,"Local","","A position in local OpenGL coordinates",null,null],[12,"x","","X coordinate, East-West. East is positive.",29,null],[12,"y","","Y coordinate, up-down. Up is positive.",29,null],[12,"z","","Z coordinate, North-South. South is positive.",29,null],[3,"LatLon","","Stores a position as latitude and longitude",null,null],[12,"latitude","","Latitude in degrees",30,null],[12,"longitude","","Longitude in degrees",30,null],[3,"LatLonAlt","","Stores a position as latitude, longitude, and altitude",null,null],[12,"latitude","","Latitude in degrees",31,null],[12,"longitude","","Longitude in degrees",31,null],[12,"altitude","","Altitude in meters above mean sea level",31,null],[5,"local_origin","","Returns the latitude and longitude of the origin of the local coordinate\nsystem",null,{"inputs":[],"output":{"name":"latlon"}}],[5,"world_to_local","","Converts from latitude, longitude, and altitude into local coordinates",null,{"inputs":[{"name":"latlonalt"}],"output":{"name":"local"}}],[5,"local_to_world","","Converts from local coordinates into latitude, longitude, and altitude",null,{"inputs":[{"name":"local"}],"output":{"name":"latlonalt"}}],[8,"Positioned","","A trait for things that have positions",null,null],[10,"position","","Returns the position of this item",32,null],[11,"local_position","","Returns the position of this item in local coordinates",32,null],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"origin","","Returns a (0, 0, 0) vector",28,{"inputs":[],"output":{"name":"vec3"}}],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"origin","","Returns the local coordinates of the origin point (0, 0, 0)",29,{"inputs":[],"output":{"name":"local"}}],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"with_altitude","","Creates a LatLonAlt with the latitude and longitude from a provided LatLon\nand with the specified altitude",31,{"inputs":[{"name":"latlon"},{"name":"f64"}],"output":{"name":"latlonalt"}}],[11,"from","","Converts a LatLonAlt into a LatLon, discarding the altitude information",30,{"inputs":[{"name":"latlonalt"}],"output":{"name":"latlon"}}],[0,"ui","xplm","User interface elements\nUser-interface-related types",null,null],[3,"Point","xplm::ui","A point on the screen in X-Plane",null,null],[12,"x","","X coordinate",33,null],[12,"y","","Y coordinate",33,null],[3,"Rect","","A rectangle on the screen in X-Plane",null,null],[12,"left","","Left X coordinate",34,null],[12,"top","","Top Y coordinate",34,null],[12,"right","","Right X coordinate",34,null],[12,"bottom","","Bottom Y coordinate",34,null],[3,"ModifierKeys","","Defines modifier keys that may be pressed",null,null],[12,"shift","","If the shift key is pressed",35,null],[12,"option","","If the option key is pressed",35,null],[12,"control","","If the control key is pressed",35,null],[4,"Cursor","","Possible cursor states to set",null,null],[13,"Default","","Allows X-Plane to set the cursor",36,null],[13,"Hidden","","Hides the cursor",36,null],[13,"Arrow","","Makes the cursor an arrow",36,null],[4,"MouseEvent","","Events that a mouse action can create",null,null],[13,"Pressed","","The mouse button was pressed down",37,null],[13,"Dragged","","The mouse was moved while held down",37,null],[13,"Released","","The mouse button was released",37,null],[4,"KeyEvent","","Events that a key action can create",null,null],[13,"KeyDown","","A key was pressed",38,null],[13,"KeyUp","","A key was released",38,null],[4,"Key","","Defines keys",null,null],[13,"Back","","",39,null],[13,"Tab","","",39,null],[13,"Clear","","",39,null],[13,"Return","","",39,null],[13,"Escape","","",39,null],[13,"Space","","",39,null],[13,"Prior","","",39,null],[13,"Next","","",39,null],[13,"End","","",39,null],[13,"Home","","",39,null],[13,"Left","","",39,null],[13,"Up","","",39,null],[13,"Right","","",39,null],[13,"Down","","",39,null],[13,"Select","","",39,null],[13,"Print","","",39,null],[13,"Execute","","",39,null],[13,"Snapshot","","",39,null],[13,"Insert","","",39,null],[13,"Delete","","",39,null],[13,"Help","","",39,null],[13,"Key0","","Key0-Key9 correspond to the 0-9 keys at the top of a keyboard",39,null],[13,"Key1","","",39,null],[13,"Key2","","",39,null],[13,"Key3","","",39,null],[13,"Key4","","",39,null],[13,"Key5","","",39,null],[13,"Key6","","",39,null],[13,"Key7","","",39,null],[13,"Key8","","",39,null],[13,"Key9","","",39,null],[13,"A","","",39,null],[13,"B","","",39,null],[13,"C","","",39,null],[13,"D","","",39,null],[13,"E","","",39,null],[13,"F","","",39,null],[13,"G","","",39,null],[13,"H","","",39,null],[13,"I","","",39,null],[13,"J","","",39,null],[13,"K","","",39,null],[13,"L","","",39,null],[13,"M","","",39,null],[13,"N","","",39,null],[13,"O","","",39,null],[13,"P","","",39,null],[13,"Q","","",39,null],[13,"R","","",39,null],[13,"S","","",39,null],[13,"T","","",39,null],[13,"U","","",39,null],[13,"V","","",39,null],[13,"W","","",39,null],[13,"X","","",39,null],[13,"Y","","",39,null],[13,"Z","","",39,null],[13,"Pad0","","Pad0-Pad9 correspond to the 0-9 keys on the number pad",39,null],[13,"Pad1","","",39,null],[13,"Pad2","","",39,null],[13,"Pad3","","",39,null],[13,"Pad4","","",39,null],[13,"Pad5","","",39,null],[13,"Pad6","","",39,null],[13,"Pad7","","",39,null],[13,"Pad8","","",39,null],[13,"Pad9","","",39,null],[13,"Multiply","","",39,null],[13,"Add","","",39,null],[13,"Separator","","",39,null],[13,"Subtract","","",39,null],[13,"Decimal","","",39,null],[13,"Divide","","",39,null],[13,"F1","","",39,null],[13,"F2","","",39,null],[13,"F3","","",39,null],[13,"F4","","",39,null],[13,"F5","","",39,null],[13,"F6","","",39,null],[13,"F7","","",39,null],[13,"F8","","",39,null],[13,"F9","","",39,null],[13,"F10","","",39,null],[13,"F11","","",39,null],[13,"F12","","",39,null],[13,"F13","","",39,null],[13,"F14","","",39,null],[13,"F15","","",39,null],[13,"F16","","",39,null],[13,"F17","","",39,null],[13,"F18","","",39,null],[13,"F19","","",39,null],[13,"F20","","",39,null],[13,"F21","","",39,null],[13,"F22","","",39,null],[13,"F23","","",39,null],[13,"F24","","",39,null],[13,"Equal","","",39,null],[13,"Minus","","",39,null],[13,"RightBrace","","",39,null],[13,"LeftBrace","","",39,null],[13,"Quote","","",39,null],[13,"Semicolon","","",39,null],[13,"Backslash","","",39,null],[13,"Comma","","",39,null],[13,"Slash","","",39,null],[13,"Period","","",39,null],[13,"BackQuote","","",39,null],[13,"Enter","","The enter or return key on the keyboard",39,null],[13,"PadEnter","","The enter or return key on the numerical keypad",39,null],[13,"PadEqual","","The equal key on the numerical keypad",39,null],[0,"widget","","Defines widget-related types",null,null],[3,"Base","xplm::ui::widget","The basic information that each widget needs",null,null],[3,"DefaultDelegate","","A delegate that ignores all messages",null,null],[3,"Window","","Represents a window",null,null],[3,"Pane","","A pane that can subdivide a Window",null,null],[3,"Button","","A push button",null,null],[3,"CheckBox","","A check box",null,null],[4,"PaneType","","Appearance styles for panes",null,null],[13,"Pane","","A standard pane",40,null],[13,"Screen","","A dark-colored screen that can display test",40,null],[13,"List","","A list of items",40,null],[6,"BasePtr","","A refernece-counted, runtime-mutability-checked, pointer to a Base",null,null],[8,"HasBase","","Trait for all widgets that contain a Base. All widges should implement this trait.\nImplementing this trait also implements Widget (see below).",null,null],[10,"base","","",41,null],[8,"WidgetDelegate","","",null,null],[10,"handle_message","","Handles a message received by a widget",42,null],[8,"Widget","","Common functions for all types of widgets",null,null],[10,"widget_id","","Returns the ID of this widget",43,null],[10,"set_visible","","Shows or hides this widget",43,null],[10,"get_property","","Returns the value of a property, or None if this widget does not have the requested\nproperty",43,null],[10,"set_property","","Sets the value of a property of this widget",43,null],[10,"get_descriptor","","Returns the descriptor of this widget",43,null],[10,"set_descriptor","","Sets the descriptor of this widget",43,null],[10,"get_geometry","","Returns the geometry of this widget",43,null],[10,"set_geometry","","Sets the geometry of this widget",43,null],[10,"clear_children","","Removes the children of this widget",43,null],[10,"add_child","","Adds a child to this widget",43,null],[8,"ButtonListener","","Trait for an object that can receive button presses",null,null],[10,"button_pressed","","",44,null],[8,"CheckBoxListener","","Trait for an object that can receive check box events",null,null],[10,"value_changed","","Called when the check box is checked or unchecked",45,null],[11,"new","","Creates a new Widget",46,{"inputs":[{"name":"xpwidgetclass"},{"name":"str"},{"name":"rect"},{"name":"bool"},{"name":"d"}],"output":{"name":"base"}}],[11,"drop","","Destroys this widget",46,null],[11,"fmt","","",47,null],[11,"handle_message","","",47,null],[11,"new","","Creates a new Window with the provided title and geometry",48,{"inputs":[{"name":"str"},{"name":"rect"}],"output":{"name":"window"}}],[11,"set_close_buttons","","Sets whether this window should have close buttons",48,null],[11,"set_translucent","","Sets whether this window should be translucent or should be a standard opaque window",48,null],[11,"base","","",48,null],[11,"fmt","","",40,null],[11,"new","","Creates a pane with the provided title and geometry",49,{"inputs":[{"name":"str"},{"name":"rect"}],"output":{"name":"pane"}}],[11,"set_pane_type","","Sets the type of this pane",49,null],[11,"base","","",49,null],[11,"new","","Creates a button with the provided text and geometry",50,{"inputs":[{"name":"str"},{"name":"rect"},{"name":"l"}],"output":{"name":"button"}}],[11,"base","","",50,null],[11,"new","","Creates a check box with the provided geometry",51,{"inputs":[{"name":"rect"},{"name":"l"}],"output":{"name":"checkbox"}}],[11,"is_checked","","",51,null],[11,"set_checked","","",51,null],[11,"base","","",51,null],[11,"eq","xplm::ui","",33,null],[11,"ne","","",33,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"dilate","","Returns a new rectangle dilated by a specified amount",34,null],[11,"lower_left","","Returns the lower left corner of this rectangle",34,null],[11,"width","","Returns the width of this rectangle",34,null],[11,"height","","Returns the height of this rectangle",34,null],[11,"center","","Returns the center point of this rectangle",34,null],[11,"eq","","",36,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"eq","","",37,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"eq","","",38,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"eq","","",39,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[0,"nav","xplm","Provides access to the navigation database\nNavigation database access",null,null],[3,"NDB","xplm::nav","Represents a non-directional beacon",null,null],[12,"position","","Position",52,null],[12,"frequency","","Frequency",52,null],[12,"code","","Code",52,null],[12,"name","","Name",52,null],[3,"VOR","","Represents a VOR",null,null],[12,"position","","Position",53,null],[12,"frequency","","Frequency",53,null],[12,"code","","Code",53,null],[12,"name","","Name",53,null],[3,"Airport","","Represents an airport",null,null],[12,"position","","Position",54,null],[12,"code","","Code",54,null],[12,"name","","Name",54,null],[3,"ILSLocalizer","","Represents an ILS localizer (the glideslope is a separate Glideslope object)",null,null],[12,"position","","Position",55,null],[12,"heading","","Heading, true, degrees",55,null],[12,"frequency","","Frequency",55,null],[12,"code","","Code",55,null],[12,"name","","Name",55,null],[3,"Localizer","","Represents a standalone localizer",null,null],[12,"position","","Position",56,null],[12,"heading","","Heading, true, degrees",56,null],[12,"frequency","","Frequency",56,null],[12,"code","","Code",56,null],[12,"name","","Name",56,null],[3,"Glideslope","","Represents an ILS glideslope",null,null],[12,"position","","Position",57,null],[12,"heading","","Heading, true, degrees",57,null],[12,"frequency","","Frequency",57,null],[12,"code","","Code",57,null],[12,"name","","Name",57,null],[3,"OuterMarker","","Represents an outer marker",null,null],[12,"position","","Position",58,null],[12,"code","","Code",58,null],[12,"name","","Name",58,null],[3,"MiddleMarker","","Represents a middle marker",null,null],[12,"position","","Position",59,null],[12,"code","","Code",59,null],[12,"name","","Name",59,null],[3,"InnerMarker","","Represents an inner marker",null,null],[12,"position","","Position",60,null],[12,"code","","Code",60,null],[12,"name","","Name",60,null],[3,"Fix","","Represents a fix",null,null],[12,"position","","Position",61,null],[12,"code","","Code",61,null],[12,"name","","Name",61,null],[3,"DME","","Represents a DME",null,null],[12,"position","","Position",62,null],[12,"frequency","","Frequency",62,null],[12,"code","","Code",62,null],[12,"name","","Name",62,null],[3,"NavaidIterator","","An iterator over available navaids",null,null],[4,"Navaid","","Contains a navaid of any of the supported types",null,null],[13,"Airport","","",63,null],[13,"NDB","","",63,null],[13,"VOR","","",63,null],[13,"ILSLocalizer","","",63,null],[13,"Localizer","","",63,null],[13,"Glideslope","","",63,null],[13,"OuterMarker","","",63,null],[13,"MiddleMarker","","",63,null],[13,"InnerMarker","","",63,null],[13,"Fix","","",63,null],[13,"DME","","",63,null],[5,"all_navaids","","Returns an iterator over all available navaids in the database",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_airports","","Returns an iterator over all airports",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_ndbs","","Returns an iterator over all NDBs",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_vors","","Returns an iterator over all VORs",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_ils_glideslopes","","Returns an iterator over all ILS glideslopes",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_ils_localizers","","Returns an iterator over all ILS localizers",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_localizers","","Returns an iterator over all standalone localizers",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_outer_markers","","Returns an iterator over all outer markers",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_middle_markers","","Returns an iterator over all middle markers",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_inner_markers","","Returns an iterator over all inner markers",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_fixes","","Returns an iterator over all fixes",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[5,"all_dmes","","Returns an iterator over all DMEs",null,{"inputs":[],"output":{"name":"navaiditerator"}}],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"position","","",52,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"position","","",53,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"position","","",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"position","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"position","","",56,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"position","","",57,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"position","","",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"position","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"position","","",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"position","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"position","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"fmt","","",64,null],[11,"next","","",64,null],[0,"frequency","xplm","Radio frequency representation\nRadio frequency representation",null,null],[3,"Frequency","xplm::frequency","Stores a radio frequency.",null,null],[11,"clone","","",65,null],[11,"fmt","","",65,null],[11,"hertz","","Creates a frequency from a number of hertz",65,{"inputs":[{"name":"i64"}],"output":{"name":"frequency"}}],[11,"kilohertz","","Creates a frequency from a number of kilohertz",65,{"inputs":[{"name":"f32"}],"output":{"name":"frequency"}}],[11,"megahertz","","Creates a frequency from a number of Megahertz",65,{"inputs":[{"name":"f32"}],"output":{"name":"frequency"}}],[11,"gigahertz","","Creates a frequency from a number of Gigahertz",65,{"inputs":[{"name":"f32"}],"output":{"name":"frequency"}}],[11,"as_hertz","","Returns this frequency as a number of hertz",65,null],[11,"as_kilohertz","","Returns this frequency as a number of kilohertz",65,null],[11,"as_megahertz","","Returns this frequency as a number of Megahertz",65,null],[11,"as_gigahertz","","Returns this frequency as a number of gigahertz",65,null],[11,"add","","",65,null],[11,"sub","","",65,null],[11,"neg","","",65,null],[0,"graphics","xplm","OpenGL-related functionality",null,null],[3,"GraphicsState","xplm::graphics","Stores various flags that can be enabled or disabled",null,null],[12,"fog","","Enable status of fog",66,null],[12,"lighting","","Enable status of 3D lighting",66,null],[12,"alpha_testing","","Enable status of alpha testing",66,null],[12,"alpha_blending","","Enable status of alpha blending",66,null],[12,"depth_testing","","Enable status of depth testing",66,null],[12,"depth_writing","","Enable status of depth writing",66,null],[12,"textures","","The number of textures that are enabled for use",66,null],[5,"set_state","","Sets the graphics state",null,{"inputs":[{"name":"graphicsstate"}],"output":null}],[5,"bind_texture","","Binds a texture ID to a texture number",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":null}],[5,"generate_texture_numbers","","Generates texture numbers in a range not reserved for X-Plane.",null,null],[5,"generate_texture_number","","",null,{"inputs":[],"output":{"name":"i32"}}],[0,"window","","Low-level windows",null,null],[3,"Window","xplm::graphics::window","A low-level window",null,null],[8,"DrawCallback","","Trait for callbacks that can draw windows",null,null],[10,"draw","","Called to draw a window\nThe window is provided.",67,null],[8,"CursorCallback","","Trait for things that can specifiy a cursor",null,null],[10,"cursor","","Called to determine the cursor to show",68,null],[8,"MouseCallback","","Trait for things that can respond to mouse events",null,null],[10,"mouse_event","","Called when the mouse is pressed, dragged, or released",69,null],[8,"MouseWheelCallback","","Trait for things that can respond to mouse wheel events",null,null],[10,"mouse_wheel_event","","Called when the mouse wheel is moved",70,null],[8,"KeyboardCallback","","Trait for things that can respond to keyboard events",null,null],[10,"keyboard_event","","Called when a key is pressed or released",71,null],[11,"new","","Creates a new window the the specified geometry",72,{"inputs":[{"name":"rect"}],"output":{"name":"rc"}}],[11,"set_draw_callback","","Sets the callback used to draw this window",72,null],[11,"set_keyboard_callback","","Sets the callback to handle keyboard events for this window",72,null],[11,"set_mouse_callback","","Sets the callback to handle mouse events for this window",72,null],[11,"set_mouse_wheel_callback","","Sets the callback to handle mouse wheel events for this window",72,null],[11,"set_cursor_callback","","Sets the callback to specify cursors for this window",72,null],[11,"set_visible","","Sets a window to be visible or hidden",72,null],[11,"bring_to_front","","Moves this window on top of other windows",72,null],[11,"request_focus","","Gives this window keyboard focus",72,null],[11,"get_geometry","","Returns the geometry of this window",72,null],[11,"set_geometry","","Sets the geometry of this window",72,null],[11,"drop","","",72,null],[11,"clone","xplm::graphics","",66,null],[11,"fmt","","",66,null],[0,"ipc","xplm","Inter-plugin communication\nFunctionality for inter-plugin communication",null,null],[3,"PluginInfo","xplm::ipc","",null,null],[12,"name","","The name of the plugin",73,null],[12,"path","","The absolute path of the plugin binary file",73,null],[12,"signature","","The signature of the plugin",73,null],[12,"description","","The description of the plugin",73,null],[3,"Plugin","","",null,null],[3,"SendError","","An error that indicates that a message could not be sent because its message number\nwas invald",null,null],[4,"XPlaneMessage","","Messages that X-Plane can send to a plugin",null,null],[13,"PlaneCrashed","","Indicates that the plane has crashed",74,null],[13,"PlaneLoaded","","Indicates that the user has loaded a new aircraft",74,null],[13,"LiveryLoaded","","Indicates a new livery for the current aircraft has been loaded",74,null],[13,"PlaneCountChanged","","Indicates that the number of active aircraft has changed",74,null],[13,"PlaneUnloaded","","Indicates that the user has unloaded the aircraft",74,null],[13,"AirportLoaded","","Indicates that the user has positioned the aircraft at an airport",74,null],[13,"SceneryLoaded","","Indicates that some new scenery has been loaded",74,null],[13,"WillWritePreferences","","Indicates that X-Plane is about to write preferences",74,null],[17,"XPLANE_ID","","",null,null],[17,"MIN_USER_MESSAGE","","",null,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"clone","","",75,null],[11,"fmt","","",75,null],[11,"this_plugin","","",75,{"inputs":[],"output":{"name":"plugin"}}],[11,"with_signature","","",75,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"all_plugins","","",75,{"inputs":[],"output":{"name":"vec"}}],[11,"with_id","","Creates a Plugin from an XPLMPluginID.",75,{"inputs":[{"name":"xplmpluginid"}],"output":{"name":"plugin"}}],[11,"is_enabled","","",75,null],[11,"set_enabled","","",75,null],[11,"info","","",75,null],[11,"send_message","","",75,null],[11,"fmt","","",76,null],[11,"fmt","","",76,null],[11,"description","","",76,null],[11,"clone","","",74,null],[11,"fmt","","",74,null],[11,"from_i32","","Converts an integer value (as provided by X-Plane) into an XPlaneMessage",74,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[8,"Plugin","xplm","The trait that all plugins should implement",null,null],[10,"start","","Called when X-Plane loads this plugin",77,{"inputs":[],"output":{"name":"result"}}],[10,"enable","","Called when the plugin is enabled",77,null],[10,"disable","","Called when the plugin is disabled",77,null],[10,"info","","Returns information on this plugin",77,{"inputs":[],"output":{"name":"plugininfo"}}],[10,"message_from_plugin","","Called when a plugin sends a message to this plugin",77,null],[10,"message_from_xplane","","Called when X-Plane sends a message to this plugin",77,null],[10,"stop","","",77,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[14,"xplane_plugin!","","Creates an X-Plane plugin",null,null]],"paths":[[3,"PluginInfo"],[4,"SearchError"],[3,"Borrowed"],[3,"Owned"],[3,"Shared"],[8,"Readable"],[8,"Writeable"],[8,"ArrayReadable"],[8,"ArrayWriteable"],[8,"StringReadable"],[8,"StringWriteable"],[8,"DataType"],[8,"DataAccess"],[3,"ReadWrite"],[3,"ReadOnly"],[4,"SearchError"],[4,"CreateError"],[8,"CommandCallback"],[3,"Owned"],[3,"External"],[3,"Command"],[4,"Phase"],[8,"FlightLoopCallback"],[3,"NextCallback"],[3,"FlightLoop"],[3,"Feature"],[3,"ProbeResult"],[3,"Probe"],[3,"Vec3"],[3,"Local"],[3,"LatLon"],[3,"LatLonAlt"],[8,"Positioned"],[3,"Point"],[3,"Rect"],[3,"ModifierKeys"],[4,"Cursor"],[4,"MouseEvent"],[4,"KeyEvent"],[4,"Key"],[4,"PaneType"],[8,"HasBase"],[8,"WidgetDelegate"],[8,"Widget"],[8,"ButtonListener"],[8,"CheckBoxListener"],[3,"Base"],[3,"DefaultDelegate"],[3,"Window"],[3,"Pane"],[3,"Button"],[3,"CheckBox"],[3,"NDB"],[3,"VOR"],[3,"Airport"],[3,"ILSLocalizer"],[3,"Localizer"],[3,"Glideslope"],[3,"OuterMarker"],[3,"MiddleMarker"],[3,"InnerMarker"],[3,"Fix"],[3,"DME"],[4,"Navaid"],[3,"NavaidIterator"],[3,"Frequency"],[3,"GraphicsState"],[8,"DrawCallback"],[8,"CursorCallback"],[8,"MouseCallback"],[8,"MouseWheelCallback"],[8,"KeyboardCallback"],[3,"Window"],[3,"PluginInfo"],[4,"XPlaneMessage"],[3,"Plugin"],[3,"SendError"],[8,"Plugin"]]};
searchIndex["num_bigint"] = {"doc":"A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).","items":[[3,"BigUint","num_bigint","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",0,null],[13,"Other","","",0,null],[4,"Sign","","A Sign is a `BigInt`&#39;s composing element.",null,null],[13,"Minus","","",1,null],[13,"NoSign","","",1,null],[13,"Plus","","",1,null],[11,"hash","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",2,null],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null],[11,"cmp","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"biguint"}}],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",2,null],[11,"bitand","","",2,null],[11,"bitor","","",2,null],[11,"bitor","","",2,null],[11,"bitxor","","",2,null],[11,"bitxor","","",2,null],[11,"shl","","",2,null],[11,"shr","","",2,null],[11,"zero","","",2,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",2,null],[11,"one","","",2,{"inputs":[],"output":{"name":"biguint"}}],[11,"add","","",2,null],[11,"add","","",2,null],[11,"sub","","",2,null],[11,"sub","","",2,null],[11,"mul","","",2,null],[11,"mul","","",2,null],[11,"div","","",2,null],[11,"div","","",2,null],[11,"rem","","",2,null],[11,"rem","","",2,null],[11,"neg","","",2,null],[11,"checked_add","","",2,null],[11,"checked_sub","","",2,null],[11,"checked_mul","","",2,null],[11,"checked_div","","",2,null],[11,"div_rem","","",2,null],[11,"div_floor","","",2,null],[11,"mod_floor","","",2,null],[11,"div_mod_floor","","",2,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",2,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",2,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,null],[11,"to_i64","","",2,null],[11,"to_u64","","",2,null],[11,"to_f32","","",2,null],[11,"to_f64","","",2,null],[11,"from_i64","","",2,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",2,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",2,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",2,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"to_biguint","","",2,null],[11,"new","","Creates and initializes a `BigUint`.",2,{"inputs":[{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",2,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",2,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",2,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",2,null],[11,"parse_bytes","","Creates and initializes a `BigUint`.",2,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",2,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"eq","","",1,null],[11,"decode","","",1,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",1,null],[11,"neg","","Negate Sign value.",1,null],[11,"mul","","",1,null],[11,"hash","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"decode","","",3,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",3,null],[11,"eq","","",3,null],[11,"partial_cmp","","",3,null],[11,"cmp","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"bigint"}}],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",3,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",3,null],[11,"shr","","",3,null],[11,"zero","","",3,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",3,null],[11,"one","","",3,{"inputs":[],"output":{"name":"bigint"}}],[11,"abs","","",3,null],[11,"abs_sub","","",3,null],[11,"signum","","",3,null],[11,"is_positive","","",3,null],[11,"is_negative","","",3,null],[11,"add","","",3,null],[11,"add","","",3,null],[11,"sub","","",3,null],[11,"sub","","",3,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"div","","",3,null],[11,"div","","",3,null],[11,"rem","","",3,null],[11,"rem","","",3,null],[11,"neg","","",3,null],[11,"checked_add","","",3,null],[11,"checked_sub","","",3,null],[11,"checked_mul","","",3,null],[11,"checked_div","","",3,null],[11,"div_rem","","",3,null],[11,"div_floor","","",3,null],[11,"mod_floor","","",3,null],[11,"div_mod_floor","","",3,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",3,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",3,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",3,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",3,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",3,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",3,null],[11,"to_i64","","",3,null],[11,"to_u64","","",3,null],[11,"to_f32","","",3,null],[11,"to_f64","","",3,null],[11,"from_i64","","",3,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",3,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",3,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",3,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"isize"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"biguint"}],"output":{"name":"self"}}],[11,"to_bigint","","",3,null],[11,"to_bigint","","",2,null],[11,"to_biguint","","",3,null],[11,"new","","Creates and initializes a BigInt.",3,{"inputs":[{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",3,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",3,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",3,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",3,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",3,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",3,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",3,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",3,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",3,null],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`,\nnot including the sign.",3,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it&#39;s not negative.",3,null],[11,"checked_add","","",3,null],[11,"checked_sub","","",3,null],[11,"checked_mul","","",3,null],[11,"checked_div","","",3,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num_bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[6,"BigDigit","","A `BigDigit` is a `BigUint`&#39;s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num_bigint","A `BigDigit` is a `BigUint`&#39;s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",4,null],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",5,null],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",6,null],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",6,null],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",6,null],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",6,null],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",6,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"from","","",0,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}]],"paths":[[4,"ParseBigIntError"],[4,"Sign"],[3,"BigUint"],[3,"BigInt"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"]]};
searchIndex["xplm_sys"] = {"doc":"","items":[[0,"camera","xplm_sys","",null,null],[3,"Struct_Unnamed2","xplm_sys::camera","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[12,"z","","",0,null],[12,"pitch","","",0,null],[12,"heading","","",0,null],[12,"roll","","",0,null],[12,"zoom","","",0,null],[5,"XPLMControlCamera","","",null,null],[5,"XPLMDontControlCamera","","",null,null],[5,"XPLMIsCameraBeingControlled","","",null,null],[5,"XPLMReadCameraPosition","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMCameraControlDuration","","",null,null],[6,"XPLMCameraPosition_t","","",null,null],[6,"XPLMCameraControl_f","","",null,null],[17,"xplm_ControlCameraUntilViewChanges","","",null,null],[17,"xplm_ControlCameraForever","","",null,null],[11,"clone","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[0,"data_access","xplm_sys","",null,null],[5,"XPLMFindDataRef","xplm_sys::data_access","",null,null],[5,"XPLMCanWriteDataRef","","",null,null],[5,"XPLMIsDataRefGood","","",null,null],[5,"XPLMGetDataRefTypes","","",null,null],[5,"XPLMGetDatai","","",null,null],[5,"XPLMSetDatai","","",null,null],[5,"XPLMGetDataf","","",null,null],[5,"XPLMSetDataf","","",null,null],[5,"XPLMGetDatad","","",null,null],[5,"XPLMSetDatad","","",null,null],[5,"XPLMGetDatavi","","",null,null],[5,"XPLMSetDatavi","","",null,null],[5,"XPLMGetDatavf","","",null,null],[5,"XPLMSetDatavf","","",null,null],[5,"XPLMGetDatab","","",null,null],[5,"XPLMSetDatab","","",null,null],[5,"XPLMRegisterDataAccessor","","",null,null],[5,"XPLMUnregisterDataAccessor","","",null,null],[5,"XPLMShareData","","",null,null],[5,"XPLMUnshareData","","",null,null],[6,"XPLMDataRef","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMDataTypeID","","",null,null],[6,"XPLMGetDatai_f","","",null,null],[6,"XPLMSetDatai_f","","",null,null],[6,"XPLMGetDataf_f","","",null,null],[6,"XPLMSetDataf_f","","",null,null],[6,"XPLMGetDatad_f","","",null,null],[6,"XPLMSetDatad_f","","",null,null],[6,"XPLMGetDatavi_f","","",null,null],[6,"XPLMSetDatavi_f","","",null,null],[6,"XPLMGetDatavf_f","","",null,null],[6,"XPLMSetDatavf_f","","",null,null],[6,"XPLMGetDatab_f","","",null,null],[6,"XPLMSetDatab_f","","",null,null],[6,"XPLMDataChanged_f","","",null,null],[17,"xplmType_Unknown","","",null,null],[17,"xplmType_Int","","",null,null],[17,"xplmType_Float","","",null,null],[17,"xplmType_Double","","",null,null],[17,"xplmType_FloatArray","","",null,null],[17,"xplmType_IntArray","","",null,null],[17,"xplmType_Data","","",null,null],[0,"defs","xplm_sys","",null,null],[6,"XPLMPluginID","xplm_sys::defs","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMKeyFlags","","",null,null],[17,"xplm_ShiftFlag","","",null,null],[17,"xplm_OptionAltFlag","","",null,null],[17,"xplm_ControlFlag","","",null,null],[17,"xplm_DownFlag","","",null,null],[17,"xplm_UpFlag","","",null,null],[0,"display","xplm_sys","",null,null],[3,"Struct_Unnamed4","xplm_sys::display","",null,null],[12,"structSize","","",1,null],[12,"left","","",1,null],[12,"top","","",1,null],[12,"right","","",1,null],[12,"bottom","","",1,null],[12,"visible","","",1,null],[12,"drawWindowFunc","","",1,null],[12,"handleMouseClickFunc","","",1,null],[12,"handleKeyFunc","","",1,null],[12,"handleCursorFunc","","",1,null],[12,"handleMouseWheelFunc","","",1,null],[12,"refcon","","",1,null],[5,"XPLMRegisterDrawCallback","","",null,null],[5,"XPLMUnregisterDrawCallback","","",null,null],[5,"XPLMRegisterKeySniffer","","",null,null],[5,"XPLMUnregisterKeySniffer","","",null,null],[5,"XPLMGetScreenSize","","",null,null],[5,"XPLMGetMouseLocation","","",null,null],[5,"XPLMCreateWindow","","",null,null],[5,"XPLMCreateWindowEx","","",null,null],[5,"XPLMDestroyWindow","","",null,null],[5,"XPLMGetWindowGeometry","","",null,null],[5,"XPLMSetWindowGeometry","","",null,null],[5,"XPLMGetWindowIsVisible","","",null,null],[5,"XPLMSetWindowIsVisible","","",null,null],[5,"XPLMGetWindowRefCon","","",null,null],[5,"XPLMSetWindowRefCon","","",null,null],[5,"XPLMTakeKeyboardFocus","","",null,null],[5,"XPLMBringWindowToFront","","",null,null],[5,"XPLMIsWindowInFront","","",null,null],[5,"XPLMRegisterHotKey","","",null,null],[5,"XPLMUnregisterHotKey","","",null,null],[5,"XPLMCountHotKeys","","",null,null],[5,"XPLMGetNthHotKey","","",null,null],[5,"XPLMGetHotKeyInfo","","",null,null],[5,"XPLMSetHotKeyCombination","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMDrawingPhase","","",null,null],[6,"XPLMDrawCallback_f","","",null,null],[6,"XPLMKeySniffer_f","","",null,null],[6,"Enum_Unnamed2","","",null,null],[6,"XPLMMouseStatus","","",null,null],[6,"Enum_Unnamed3","","",null,null],[6,"XPLMCursorStatus","","",null,null],[6,"XPLMWindowID","","",null,null],[6,"XPLMDrawWindow_f","","",null,null],[6,"XPLMHandleKey_f","","",null,null],[6,"XPLMHandleMouseClick_f","","",null,null],[6,"XPLMHandleCursor_f","","",null,null],[6,"XPLMHandleMouseWheel_f","","",null,null],[6,"XPLMCreateWindow_t","","",null,null],[6,"XPLMHotKey_f","","",null,null],[6,"XPLMHotKeyID","","",null,null],[17,"xplm_Phase_FirstScene","","",null,null],[17,"xplm_Phase_Terrain","","",null,null],[17,"xplm_Phase_Airports","","",null,null],[17,"xplm_Phase_Vectors","","",null,null],[17,"xplm_Phase_Objects","","",null,null],[17,"xplm_Phase_Airplanes","","",null,null],[17,"xplm_Phase_LastScene","","",null,null],[17,"xplm_Phase_FirstCockpit","","",null,null],[17,"xplm_Phase_Panel","","",null,null],[17,"xplm_Phase_Gauges","","",null,null],[17,"xplm_Phase_Window","","",null,null],[17,"xplm_Phase_LastCockpit","","",null,null],[17,"xplm_Phase_LocalMap3D","","",null,null],[17,"xplm_Phase_LocalMap2D","","",null,null],[17,"xplm_Phase_LocalMapProfile","","",null,null],[17,"xplm_MouseDown","","",null,null],[17,"xplm_MouseDrag","","",null,null],[17,"xplm_MouseUp","","",null,null],[17,"xplm_CursorDefault","","",null,null],[17,"xplm_CursorHidden","","",null,null],[17,"xplm_CursorArrow","","",null,null],[17,"xplm_CursorCustom","","",null,null],[11,"clone","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[0,"graphics","xplm_sys","",null,null],[5,"XPLMSetGraphicsState","xplm_sys::graphics","",null,null],[5,"XPLMBindTexture2d","","",null,null],[5,"XPLMGenerateTextureNumbers","","",null,null],[5,"XPLMGetTexture","","",null,null],[5,"XPLMWorldToLocal","","",null,null],[5,"XPLMLocalToWorld","","",null,null],[5,"XPLMDrawTranslucentDarkBox","","",null,null],[5,"XPLMDrawString","","",null,null],[5,"XPLMDrawNumber","","",null,null],[5,"XPLMGetFontDimensions","","",null,null],[5,"XPLMMeasureString","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMTextureID","","",null,null],[6,"Enum_Unnamed2","","",null,null],[6,"XPLMFontID","","",null,null],[17,"xplm_Tex_GeneralInterface","","",null,null],[17,"xplm_Tex_AircraftPaint","","",null,null],[17,"xplm_Tex_AircraftLiteMap","","",null,null],[17,"xplmFont_Basic","","",null,null],[17,"xplmFont_Menus","","",null,null],[17,"xplmFont_Metal","","",null,null],[17,"xplmFont_Led","","",null,null],[17,"xplmFont_LedWide","","",null,null],[17,"xplmFont_PanelHUD","","",null,null],[17,"xplmFont_PanelEFIS","","",null,null],[17,"xplmFont_PanelGPS","","",null,null],[17,"xplmFont_RadiosGA","","",null,null],[17,"xplmFont_RadiosBC","","",null,null],[17,"xplmFont_RadiosHM","","",null,null],[17,"xplmFont_RadiosGANarrow","","",null,null],[17,"xplmFont_RadiosBCNarrow","","",null,null],[17,"xplmFont_RadiosHMNarrow","","",null,null],[17,"xplmFont_Timer","","",null,null],[17,"xplmFont_FullRound","","",null,null],[17,"xplmFont_SmallRound","","",null,null],[17,"xplmFont_Menus_Localized","","",null,null],[17,"xplmFont_Proportional","","",null,null],[0,"menus","xplm_sys","",null,null],[5,"XPLMFindPluginsMenu","xplm_sys::menus","",null,null],[5,"XPLMCreateMenu","","",null,null],[5,"XPLMDestroyMenu","","",null,null],[5,"XPLMClearAllMenuItems","","",null,null],[5,"XPLMAppendMenuItem","","",null,null],[5,"XPLMAppendMenuSeparator","","",null,null],[5,"XPLMSetMenuItemName","","",null,null],[5,"XPLMCheckMenuItem","","",null,null],[5,"XPLMCheckMenuItemState","","",null,null],[5,"XPLMEnableMenuItem","","",null,null],[5,"XPLMRemoveMenuItem","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMMenuCheck","","",null,null],[6,"XPLMMenuID","","",null,null],[6,"XPLMMenuHandler_f","","",null,null],[17,"xplm_Menu_NoCheck","","",null,null],[17,"xplm_Menu_Unchecked","","",null,null],[17,"xplm_Menu_Checked","","",null,null],[0,"navigation","xplm_sys","",null,null],[5,"XPLMGetFirstNavAid","xplm_sys::navigation","",null,null],[5,"XPLMGetNextNavAid","","",null,null],[5,"XPLMFindFirstNavAidOfType","","",null,null],[5,"XPLMFindLastNavAidOfType","","",null,null],[5,"XPLMFindNavAid","","",null,null],[5,"XPLMGetNavAidInfo","","",null,null],[5,"XPLMCountFMSEntries","","",null,null],[5,"XPLMGetDisplayedFMSEntry","","",null,null],[5,"XPLMGetDestinationFMSEntry","","",null,null],[5,"XPLMSetDisplayedFMSEntry","","",null,null],[5,"XPLMSetDestinationFMSEntry","","",null,null],[5,"XPLMGetFMSEntryInfo","","",null,null],[5,"XPLMSetFMSEntryInfo","","",null,null],[5,"XPLMSetFMSEntryLatLon","","",null,null],[5,"XPLMClearFMSEntry","","",null,null],[5,"XPLMGetGPSDestinationType","","",null,null],[5,"XPLMGetGPSDestination","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMNavType","","",null,null],[6,"XPLMNavRef","","",null,null],[17,"xplm_Nav_Unknown","","",null,null],[17,"xplm_Nav_Airport","","",null,null],[17,"xplm_Nav_NDB","","",null,null],[17,"xplm_Nav_VOR","","",null,null],[17,"xplm_Nav_ILS","","",null,null],[17,"xplm_Nav_Localizer","","",null,null],[17,"xplm_Nav_GlideSlope","","",null,null],[17,"xplm_Nav_OuterMarker","","",null,null],[17,"xplm_Nav_MiddleMarker","","",null,null],[17,"xplm_Nav_InnerMarker","","",null,null],[17,"xplm_Nav_Fix","","",null,null],[17,"xplm_Nav_DME","","",null,null],[17,"xplm_Nav_LatLon","","",null,null],[0,"planes","xplm_sys","",null,null],[3,"Struct_Unnamed1","xplm_sys::planes","",null,null],[12,"structSize","","",2,null],[12,"gearPosition","","",2,null],[12,"flapRatio","","",2,null],[12,"spoilerRatio","","",2,null],[12,"speedBrakeRatio","","",2,null],[12,"slatRatio","","",2,null],[12,"wingSweep","","",2,null],[12,"thrust","","",2,null],[12,"yokePitch","","",2,null],[12,"yokeHeading","","",2,null],[12,"yokeRoll","","",2,null],[5,"XPLMSetUsersAircraft","","",null,null],[5,"XPLMPlaceUserAtAirport","","",null,null],[5,"XPLMCountAircraft","","",null,null],[5,"XPLMGetNthAircraftModel","","",null,null],[5,"XPLMAcquirePlanes","","",null,null],[5,"XPLMReleasePlanes","","",null,null],[5,"XPLMSetActiveAircraftCount","","",null,null],[5,"XPLMSetAircraftModel","","",null,null],[5,"XPLMDisableAIForPlane","","",null,null],[5,"XPLMDrawAircraft","","",null,null],[5,"XPLMReinitUsersPlane","","",null,null],[6,"XPLMPlaneDrawState_t","","",null,null],[6,"XPLMPlanesAvailable_f","","",null,null],[11,"clone","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[0,"plugin","xplm_sys","",null,null],[5,"XPLMGetMyID","xplm_sys::plugin","",null,null],[5,"XPLMCountPlugins","","",null,null],[5,"XPLMGetNthPlugin","","",null,null],[5,"XPLMFindPluginByPath","","",null,null],[5,"XPLMFindPluginBySignature","","",null,null],[5,"XPLMGetPluginInfo","","",null,null],[5,"XPLMIsPluginEnabled","","",null,null],[5,"XPLMEnablePlugin","","",null,null],[5,"XPLMDisablePlugin","","",null,null],[5,"XPLMReloadPlugins","","",null,null],[5,"XPLMSendMessageToPlugin","","",null,null],[5,"XPLMHasFeature","","",null,null],[5,"XPLMIsFeatureEnabled","","",null,null],[5,"XPLMEnableFeature","","",null,null],[5,"XPLMEnumerateFeatures","","",null,null],[6,"XPLMFeatureEnumerator_f","","",null,null],[0,"processing","xplm_sys","",null,null],[3,"Struct_Unnamed2","xplm_sys::processing","",null,null],[12,"structSize","","",3,null],[12,"phase","","",3,null],[12,"callbackFunc","","",3,null],[12,"refcon","","",3,null],[5,"XPLMGetElapsedTime","","",null,null],[5,"XPLMGetCycleNumber","","",null,null],[5,"XPLMRegisterFlightLoopCallback","","",null,null],[5,"XPLMUnregisterFlightLoopCallback","","",null,null],[5,"XPLMSetFlightLoopCallbackInterval","","",null,null],[5,"XPLMCreateFlightLoop","","",null,null],[5,"XPLMDestroyFlightLoop","","",null,null],[5,"XPLMScheduleFlightLoop","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMFlightLoopPhaseType","","",null,null],[6,"XPLMFlightLoopID","","",null,null],[6,"XPLMFlightLoop_f","","",null,null],[6,"XPLMCreateFlightLoop_t","","",null,null],[17,"xplm_FlightLoop_Phase_BeforeFlightModel","","",null,null],[17,"xplm_FlightLoop_Phase_AfterFlightModel","","",null,null],[11,"clone","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[0,"scenery","xplm_sys","",null,null],[3,"Struct_Unnamed3","xplm_sys::scenery","",null,null],[12,"structSize","","",4,null],[12,"locationX","","",4,null],[12,"locationY","","",4,null],[12,"locationZ","","",4,null],[12,"normalX","","",4,null],[12,"normalY","","",4,null],[12,"normalZ","","",4,null],[12,"velocityX","","",4,null],[12,"velocityY","","",4,null],[12,"velocityZ","","",4,null],[12,"is_wet","","",4,null],[3,"Struct_Unnamed4","","",null,null],[12,"structSize","","",5,null],[12,"x","","",5,null],[12,"y","","",5,null],[12,"z","","",5,null],[12,"pitch","","",5,null],[12,"heading","","",5,null],[12,"roll","","",5,null],[5,"XPLMCreateProbe","","",null,null],[5,"XPLMDestroyProbe","","",null,null],[5,"XPLMProbeTerrainXYZ","","",null,null],[5,"XPLMLoadObject","","",null,null],[5,"XPLMLoadObjectAsync","","",null,null],[5,"XPLMDrawObjects","","",null,null],[5,"XPLMUnloadObject","","",null,null],[5,"XPLMLookupObjects","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMProbeType","","",null,null],[6,"Enum_Unnamed2","","",null,null],[6,"XPLMProbeResult","","",null,null],[6,"XPLMProbeRef","","",null,null],[6,"XPLMProbeInfo_t","","",null,null],[6,"XPLMObjectRef","","",null,null],[6,"XPLMDrawInfo_t","","",null,null],[6,"XPLMObjectLoaded_f","","",null,null],[6,"XPLMLibraryEnumerator_f","","",null,null],[17,"xplm_ProbeY","","",null,null],[17,"xplm_ProbeHitTerrain","","",null,null],[17,"xplm_ProbeError","","",null,null],[17,"xplm_ProbeMissed","","",null,null],[11,"clone","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[0,"utilities","xplm_sys","",null,null],[5,"XPLMSimulateKeyPress","xplm_sys::utilities","",null,null],[5,"XPLMSpeakString","","",null,null],[5,"XPLMCommandKeyStroke","","",null,null],[5,"XPLMCommandButtonPress","","",null,null],[5,"XPLMCommandButtonRelease","","",null,null],[5,"XPLMGetVirtualKeyDescription","","",null,null],[5,"XPLMReloadScenery","","",null,null],[5,"XPLMGetSystemPath","","",null,null],[5,"XPLMGetPrefsPath","","",null,null],[5,"XPLMGetDirectorySeparator","","",null,null],[5,"XPLMExtractFileAndPath","","",null,null],[5,"XPLMGetDirectoryContents","","",null,null],[5,"XPLMInitialized","","",null,null],[5,"XPLMGetVersions","","",null,null],[5,"XPLMGetLanguage","","",null,null],[5,"XPLMDebugString","","",null,null],[5,"XPLMSetErrorCallback","","",null,null],[5,"XPLMFindSymbol","","",null,null],[5,"XPLMLoadDataFile","","",null,null],[5,"XPLMSaveDataFile","","",null,null],[5,"XPLMFindCommand","","",null,null],[5,"XPLMCommandBegin","","",null,null],[5,"XPLMCommandEnd","","",null,null],[5,"XPLMCommandOnce","","",null,null],[5,"XPLMCreateCommand","","",null,null],[5,"XPLMRegisterCommandHandler","","",null,null],[5,"XPLMUnregisterCommandHandler","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPLMCommandKeyID","","",null,null],[6,"Enum_Unnamed2","","",null,null],[6,"XPLMCommandButtonID","","",null,null],[6,"Enum_Unnamed3","","",null,null],[6,"XPLMHostApplicationID","","",null,null],[6,"Enum_Unnamed4","","",null,null],[6,"XPLMLanguageCode","","",null,null],[6,"Enum_Unnamed5","","",null,null],[6,"XPLMDataFileType","","",null,null],[6,"XPLMError_f","","",null,null],[6,"Enum_Unnamed6","","",null,null],[6,"XPLMCommandPhase","","",null,null],[6,"XPLMCommandRef","","",null,null],[6,"XPLMCommandCallback_f","","",null,null],[17,"xplm_key_pause","","",null,null],[17,"xplm_key_revthrust","","",null,null],[17,"xplm_key_jettison","","",null,null],[17,"xplm_key_brakesreg","","",null,null],[17,"xplm_key_brakesmax","","",null,null],[17,"xplm_key_gear","","",null,null],[17,"xplm_key_timedn","","",null,null],[17,"xplm_key_timeup","","",null,null],[17,"xplm_key_fadec","","",null,null],[17,"xplm_key_otto_dis","","",null,null],[17,"xplm_key_otto_atr","","",null,null],[17,"xplm_key_otto_asi","","",null,null],[17,"xplm_key_otto_hdg","","",null,null],[17,"xplm_key_otto_gps","","",null,null],[17,"xplm_key_otto_lev","","",null,null],[17,"xplm_key_otto_hnav","","",null,null],[17,"xplm_key_otto_alt","","",null,null],[17,"xplm_key_otto_vvi","","",null,null],[17,"xplm_key_otto_vnav","","",null,null],[17,"xplm_key_otto_nav1","","",null,null],[17,"xplm_key_otto_nav2","","",null,null],[17,"xplm_key_targ_dn","","",null,null],[17,"xplm_key_targ_up","","",null,null],[17,"xplm_key_hdgdn","","",null,null],[17,"xplm_key_hdgup","","",null,null],[17,"xplm_key_barodn","","",null,null],[17,"xplm_key_baroup","","",null,null],[17,"xplm_key_obs1dn","","",null,null],[17,"xplm_key_obs1up","","",null,null],[17,"xplm_key_obs2dn","","",null,null],[17,"xplm_key_obs2up","","",null,null],[17,"xplm_key_com1_1","","",null,null],[17,"xplm_key_com1_2","","",null,null],[17,"xplm_key_com1_3","","",null,null],[17,"xplm_key_com1_4","","",null,null],[17,"xplm_key_nav1_1","","",null,null],[17,"xplm_key_nav1_2","","",null,null],[17,"xplm_key_nav1_3","","",null,null],[17,"xplm_key_nav1_4","","",null,null],[17,"xplm_key_com2_1","","",null,null],[17,"xplm_key_com2_2","","",null,null],[17,"xplm_key_com2_3","","",null,null],[17,"xplm_key_com2_4","","",null,null],[17,"xplm_key_nav2_1","","",null,null],[17,"xplm_key_nav2_2","","",null,null],[17,"xplm_key_nav2_3","","",null,null],[17,"xplm_key_nav2_4","","",null,null],[17,"xplm_key_adf_1","","",null,null],[17,"xplm_key_adf_2","","",null,null],[17,"xplm_key_adf_3","","",null,null],[17,"xplm_key_adf_4","","",null,null],[17,"xplm_key_adf_5","","",null,null],[17,"xplm_key_adf_6","","",null,null],[17,"xplm_key_transpon_1","","",null,null],[17,"xplm_key_transpon_2","","",null,null],[17,"xplm_key_transpon_3","","",null,null],[17,"xplm_key_transpon_4","","",null,null],[17,"xplm_key_transpon_5","","",null,null],[17,"xplm_key_transpon_6","","",null,null],[17,"xplm_key_transpon_7","","",null,null],[17,"xplm_key_transpon_8","","",null,null],[17,"xplm_key_flapsup","","",null,null],[17,"xplm_key_flapsdn","","",null,null],[17,"xplm_key_cheatoff","","",null,null],[17,"xplm_key_cheaton","","",null,null],[17,"xplm_key_sbrkoff","","",null,null],[17,"xplm_key_sbrkon","","",null,null],[17,"xplm_key_ailtrimL","","",null,null],[17,"xplm_key_ailtrimR","","",null,null],[17,"xplm_key_rudtrimL","","",null,null],[17,"xplm_key_rudtrimR","","",null,null],[17,"xplm_key_elvtrimD","","",null,null],[17,"xplm_key_elvtrimU","","",null,null],[17,"xplm_key_forward","","",null,null],[17,"xplm_key_down","","",null,null],[17,"xplm_key_left","","",null,null],[17,"xplm_key_right","","",null,null],[17,"xplm_key_back","","",null,null],[17,"xplm_key_tower","","",null,null],[17,"xplm_key_runway","","",null,null],[17,"xplm_key_chase","","",null,null],[17,"xplm_key_free1","","",null,null],[17,"xplm_key_free2","","",null,null],[17,"xplm_key_spot","","",null,null],[17,"xplm_key_fullscrn1","","",null,null],[17,"xplm_key_fullscrn2","","",null,null],[17,"xplm_key_tanspan","","",null,null],[17,"xplm_key_smoke","","",null,null],[17,"xplm_key_map","","",null,null],[17,"xplm_key_zoomin","","",null,null],[17,"xplm_key_zoomout","","",null,null],[17,"xplm_key_cycledump","","",null,null],[17,"xplm_key_replay","","",null,null],[17,"xplm_key_tranID","","",null,null],[17,"xplm_key_max","","",null,null],[17,"xplm_joy_nothing","","",null,null],[17,"xplm_joy_start_all","","",null,null],[17,"xplm_joy_start_0","","",null,null],[17,"xplm_joy_start_1","","",null,null],[17,"xplm_joy_start_2","","",null,null],[17,"xplm_joy_start_3","","",null,null],[17,"xplm_joy_start_4","","",null,null],[17,"xplm_joy_start_5","","",null,null],[17,"xplm_joy_start_6","","",null,null],[17,"xplm_joy_start_7","","",null,null],[17,"xplm_joy_throt_up","","",null,null],[17,"xplm_joy_throt_dn","","",null,null],[17,"xplm_joy_prop_up","","",null,null],[17,"xplm_joy_prop_dn","","",null,null],[17,"xplm_joy_mixt_up","","",null,null],[17,"xplm_joy_mixt_dn","","",null,null],[17,"xplm_joy_carb_tog","","",null,null],[17,"xplm_joy_carb_on","","",null,null],[17,"xplm_joy_carb_off","","",null,null],[17,"xplm_joy_trev","","",null,null],[17,"xplm_joy_trm_up","","",null,null],[17,"xplm_joy_trm_dn","","",null,null],[17,"xplm_joy_rot_trm_up","","",null,null],[17,"xplm_joy_rot_trm_dn","","",null,null],[17,"xplm_joy_rud_lft","","",null,null],[17,"xplm_joy_rud_cntr","","",null,null],[17,"xplm_joy_rud_rgt","","",null,null],[17,"xplm_joy_ail_lft","","",null,null],[17,"xplm_joy_ail_cntr","","",null,null],[17,"xplm_joy_ail_rgt","","",null,null],[17,"xplm_joy_B_rud_lft","","",null,null],[17,"xplm_joy_B_rud_rgt","","",null,null],[17,"xplm_joy_look_up","","",null,null],[17,"xplm_joy_look_dn","","",null,null],[17,"xplm_joy_look_lft","","",null,null],[17,"xplm_joy_look_rgt","","",null,null],[17,"xplm_joy_glance_l","","",null,null],[17,"xplm_joy_glance_r","","",null,null],[17,"xplm_joy_v_fnh","","",null,null],[17,"xplm_joy_v_fwh","","",null,null],[17,"xplm_joy_v_tra","","",null,null],[17,"xplm_joy_v_twr","","",null,null],[17,"xplm_joy_v_run","","",null,null],[17,"xplm_joy_v_cha","","",null,null],[17,"xplm_joy_v_fr1","","",null,null],[17,"xplm_joy_v_fr2","","",null,null],[17,"xplm_joy_v_spo","","",null,null],[17,"xplm_joy_flapsup","","",null,null],[17,"xplm_joy_flapsdn","","",null,null],[17,"xplm_joy_vctswpfwd","","",null,null],[17,"xplm_joy_vctswpaft","","",null,null],[17,"xplm_joy_gear_tog","","",null,null],[17,"xplm_joy_gear_up","","",null,null],[17,"xplm_joy_gear_down","","",null,null],[17,"xplm_joy_lft_brake","","",null,null],[17,"xplm_joy_rgt_brake","","",null,null],[17,"xplm_joy_brakesREG","","",null,null],[17,"xplm_joy_brakesMAX","","",null,null],[17,"xplm_joy_speedbrake","","",null,null],[17,"xplm_joy_ott_dis","","",null,null],[17,"xplm_joy_ott_atr","","",null,null],[17,"xplm_joy_ott_asi","","",null,null],[17,"xplm_joy_ott_hdg","","",null,null],[17,"xplm_joy_ott_alt","","",null,null],[17,"xplm_joy_ott_vvi","","",null,null],[17,"xplm_joy_tim_start","","",null,null],[17,"xplm_joy_tim_reset","","",null,null],[17,"xplm_joy_ecam_up","","",null,null],[17,"xplm_joy_ecam_dn","","",null,null],[17,"xplm_joy_fadec","","",null,null],[17,"xplm_joy_yaw_damp","","",null,null],[17,"xplm_joy_art_stab","","",null,null],[17,"xplm_joy_chute","","",null,null],[17,"xplm_joy_JATO","","",null,null],[17,"xplm_joy_arrest","","",null,null],[17,"xplm_joy_jettison","","",null,null],[17,"xplm_joy_fuel_dump","","",null,null],[17,"xplm_joy_puffsmoke","","",null,null],[17,"xplm_joy_prerotate","","",null,null],[17,"xplm_joy_UL_prerot","","",null,null],[17,"xplm_joy_UL_collec","","",null,null],[17,"xplm_joy_TOGA","","",null,null],[17,"xplm_joy_shutdown","","",null,null],[17,"xplm_joy_con_atc","","",null,null],[17,"xplm_joy_fail_now","","",null,null],[17,"xplm_joy_pause","","",null,null],[17,"xplm_joy_rock_up","","",null,null],[17,"xplm_joy_rock_dn","","",null,null],[17,"xplm_joy_rock_lft","","",null,null],[17,"xplm_joy_rock_rgt","","",null,null],[17,"xplm_joy_rock_for","","",null,null],[17,"xplm_joy_rock_aft","","",null,null],[17,"xplm_joy_idle_hilo","","",null,null],[17,"xplm_joy_lanlights","","",null,null],[17,"xplm_joy_max","","",null,null],[17,"xplm_Host_Unknown","","",null,null],[17,"xplm_Host_XPlane","","",null,null],[17,"xplm_Host_PlaneMaker","","",null,null],[17,"xplm_Host_WorldMaker","","",null,null],[17,"xplm_Host_Briefer","","",null,null],[17,"xplm_Host_PartMaker","","",null,null],[17,"xplm_Host_YoungsMod","","",null,null],[17,"xplm_Host_XAuto","","",null,null],[17,"xplm_Language_Unknown","","",null,null],[17,"xplm_Language_English","","",null,null],[17,"xplm_Language_French","","",null,null],[17,"xplm_Language_German","","",null,null],[17,"xplm_Language_Italian","","",null,null],[17,"xplm_Language_Spanish","","",null,null],[17,"xplm_Language_Korean","","",null,null],[17,"xplm_Language_Russian","","",null,null],[17,"xplm_Language_Greek","","",null,null],[17,"xplm_Language_Japanese","","",null,null],[17,"xplm_Language_Chinese","","",null,null],[17,"xplm_DataFile_Situation","","",null,null],[17,"xplm_DataFile_ReplayMovie","","",null,null],[17,"xplm_CommandBegin","","",null,null],[17,"xplm_CommandContinue","","",null,null],[17,"xplm_CommandEnd","","",null,null],[0,"widgets","xplm_sys","",null,null],[0,"standard_widgets","xplm_sys::widgets","",null,null],[6,"Enum_Unnamed1","xplm_sys::widgets::standard_widgets","",null,null],[6,"Enum_Unnamed2","","",null,null],[6,"Enum_Unnamed3","","",null,null],[6,"Enum_Unnamed4","","",null,null],[6,"Enum_Unnamed5","","",null,null],[6,"Enum_Unnamed6","","",null,null],[6,"Enum_Unnamed7","","",null,null],[6,"Enum_Unnamed8","","",null,null],[6,"Enum_Unnamed9","","",null,null],[6,"Enum_Unnamed10","","",null,null],[6,"Enum_Unnamed11","","",null,null],[6,"Enum_Unnamed12","","",null,null],[6,"Enum_Unnamed13","","",null,null],[6,"Enum_Unnamed14","","",null,null],[6,"Enum_Unnamed15","","",null,null],[6,"Enum_Unnamed16","","",null,null],[6,"Enum_Unnamed17","","",null,null],[6,"Enum_Unnamed18","","",null,null],[6,"Enum_Unnamed19","","",null,null],[17,"xpMainWindowStyle_MainWindow","","",null,null],[17,"xpMainWindowStyle_Translucent","","",null,null],[17,"xpProperty_MainWindowType","","",null,null],[17,"xpProperty_MainWindowHasCloseBoxes","","",null,null],[17,"xpMessage_CloseButtonPushed","","",null,null],[17,"xpSubWindowStyle_SubWindow","","",null,null],[17,"xpSubWindowStyle_Screen","","",null,null],[17,"xpSubWindowStyle_ListView","","",null,null],[17,"xpProperty_SubWindowType","","",null,null],[17,"xpPushButton","","",null,null],[17,"xpRadioButton","","",null,null],[17,"xpWindowCloseBox","","",null,null],[17,"xpLittleDownArrow","","",null,null],[17,"xpLittleUpArrow","","",null,null],[17,"xpButtonBehaviorPushButton","","",null,null],[17,"xpButtonBehaviorCheckBox","","",null,null],[17,"xpButtonBehaviorRadioButton","","",null,null],[17,"xpProperty_ButtonType","","",null,null],[17,"xpProperty_ButtonBehavior","","",null,null],[17,"xpProperty_ButtonState","","",null,null],[17,"xpMsg_PushButtonPressed","","",null,null],[17,"xpMsg_ButtonStateChanged","","",null,null],[17,"xpTextEntryField","","",null,null],[17,"xpTextTransparent","","",null,null],[17,"xpTextTranslucent","","",null,null],[17,"xpProperty_EditFieldSelStart","","",null,null],[17,"xpProperty_EditFieldSelEnd","","",null,null],[17,"xpProperty_EditFieldSelDragStart","","",null,null],[17,"xpProperty_TextFieldType","","",null,null],[17,"xpProperty_PasswordMode","","",null,null],[17,"xpProperty_MaxCharacters","","",null,null],[17,"xpProperty_ScrollPosition","","",null,null],[17,"xpProperty_Font","","",null,null],[17,"xpProperty_ActiveEditSide","","",null,null],[17,"xpMsg_TextFieldChanged","","",null,null],[17,"xpScrollBarTypeScrollBar","","",null,null],[17,"xpScrollBarTypeSlider","","",null,null],[17,"xpProperty_ScrollBarSliderPosition","","",null,null],[17,"xpProperty_ScrollBarMin","","",null,null],[17,"xpProperty_ScrollBarMax","","",null,null],[17,"xpProperty_ScrollBarPageAmount","","",null,null],[17,"xpProperty_ScrollBarType","","",null,null],[17,"xpProperty_ScrollBarSlop","","",null,null],[17,"xpMsg_ScrollBarSliderPositionChanged","","",null,null],[17,"xpProperty_CaptionLit","","",null,null],[17,"xpShip","","",null,null],[17,"xpILSGlideScope","","",null,null],[17,"xpMarkerLeft","","",null,null],[17,"xp_Airport","","",null,null],[17,"xpNDB","","",null,null],[17,"xpVOR","","",null,null],[17,"xpRadioTower","","",null,null],[17,"xpAircraftCarrier","","",null,null],[17,"xpFire","","",null,null],[17,"xpMarkerRight","","",null,null],[17,"xpCustomObject","","",null,null],[17,"xpCoolingTower","","",null,null],[17,"xpSmokeStack","","",null,null],[17,"xpBuilding","","",null,null],[17,"xpPowerLine","","",null,null],[17,"xpVORWithCompassRose","","",null,null],[17,"xpOilPlatform","","",null,null],[17,"xpOilPlatformSmall","","",null,null],[17,"xpWayPoint","","",null,null],[17,"xpProperty_GeneralGraphicsType","","",null,null],[17,"xpProperty_ProgressPosition","","",null,null],[17,"xpProperty_ProgressMin","","",null,null],[17,"xpProperty_ProgressMax","","",null,null],[0,"ui_graphics","xplm_sys::widgets","",null,null],[5,"XPDrawWindow","xplm_sys::widgets::ui_graphics","",null,null],[5,"XPGetWindowDefaultDimensions","","",null,null],[5,"XPDrawElement","","",null,null],[5,"XPGetElementDefaultDimensions","","",null,null],[5,"XPDrawTrack","","",null,null],[5,"XPGetTrackDefaultDimensions","","",null,null],[5,"XPGetTrackMetrics","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPWindowStyle","","",null,null],[6,"Enum_Unnamed2","","",null,null],[6,"XPElementStyle","","",null,null],[6,"Enum_Unnamed3","","",null,null],[6,"XPTrackStyle","","",null,null],[17,"xpWindow_Help","","",null,null],[17,"xpWindow_MainWindow","","",null,null],[17,"xpWindow_SubWindow","","",null,null],[17,"xpWindow_Screen","","",null,null],[17,"xpWindow_ListView","","",null,null],[17,"xpElement_TextField","","",null,null],[17,"xpElement_CheckBox","","",null,null],[17,"xpElement_CheckBoxLit","","",null,null],[17,"xpElement_WindowCloseBox","","",null,null],[17,"xpElement_WindowCloseBoxPressed","","",null,null],[17,"xpElement_PushButton","","",null,null],[17,"xpElement_PushButtonLit","","",null,null],[17,"xpElement_OilPlatform","","",null,null],[17,"xpElement_OilPlatformSmall","","",null,null],[17,"xpElement_Ship","","",null,null],[17,"xpElement_ILSGlideScope","","",null,null],[17,"xpElement_MarkerLeft","","",null,null],[17,"xpElement_Airport","","",null,null],[17,"xpElement_Waypoint","","",null,null],[17,"xpElement_NDB","","",null,null],[17,"xpElement_VOR","","",null,null],[17,"xpElement_RadioTower","","",null,null],[17,"xpElement_AircraftCarrier","","",null,null],[17,"xpElement_Fire","","",null,null],[17,"xpElement_MarkerRight","","",null,null],[17,"xpElement_CustomObject","","",null,null],[17,"xpElement_CoolingTower","","",null,null],[17,"xpElement_SmokeStack","","",null,null],[17,"xpElement_Building","","",null,null],[17,"xpElement_PowerLine","","",null,null],[17,"xpElement_CopyButtons","","",null,null],[17,"xpElement_CopyButtonsWithEditingGrid","","",null,null],[17,"xpElement_EditingGrid","","",null,null],[17,"xpElement_ScrollBar","","",null,null],[17,"xpElement_VORWithCompassRose","","",null,null],[17,"xpElement_Zoomer","","",null,null],[17,"xpElement_TextFieldMiddle","","",null,null],[17,"xpElement_LittleDownArrow","","",null,null],[17,"xpElement_LittleUpArrow","","",null,null],[17,"xpElement_WindowDragBar","","",null,null],[17,"xpElement_WindowDragBarSmooth","","",null,null],[17,"xpTrack_ScrollBar","","",null,null],[17,"xpTrack_Slider","","",null,null],[17,"xpTrack_Progress","","",null,null],[0,"widget_defs","xplm_sys::widgets","",null,null],[3,"Struct_Unnamed2","xplm_sys::widgets::widget_defs","",null,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"button","","",6,null],[12,"delta","","",6,null],[3,"Struct_Unnamed3","","",null,null],[12,"key","","",7,null],[12,"flags","","",7,null],[12,"vkey","","",7,null],[3,"Struct_Unnamed4","","",null,null],[12,"dx","","",8,null],[12,"dy","","",8,null],[12,"dwidth","","",8,null],[12,"dheight","","",8,null],[6,"XPWidgetID","","",null,null],[6,"Enum_Unnamed1","","",null,null],[6,"XPWidgetPropertyID","","",null,null],[6,"XPMouseState_t","","",null,null],[6,"XPKeyState_t","","",null,null],[6,"XPWidgetGeometryChange_t","","",null,null],[6,"Enum_Unnamed5","","",null,null],[6,"XPDispatchMode","","",null,null],[6,"XPWidgetClass","","",null,null],[6,"Enum_Unnamed6","","",null,null],[6,"XPWidgetMessage","","",null,null],[6,"XPWidgetFunc_t","","",null,null],[17,"xpProperty_Refcon","","",null,null],[17,"xpProperty_Dragging","","",null,null],[17,"xpProperty_DragXOff","","",null,null],[17,"xpProperty_DragYOff","","",null,null],[17,"xpProperty_Hilited","","",null,null],[17,"xpProperty_Object","","",null,null],[17,"xpProperty_Clip","","",null,null],[17,"xpProperty_Enabled","","",null,null],[17,"xpProperty_UserStart","","",null,null],[17,"xpMode_Direct","","",null,null],[17,"xpMode_UpChain","","",null,null],[17,"xpMode_Recursive","","",null,null],[17,"xpMode_DirectAllCallbacks","","",null,null],[17,"xpMode_Once","","",null,null],[17,"xpMsg_None","","",null,null],[17,"xpMsg_Create","","",null,null],[17,"xpMsg_Destroy","","",null,null],[17,"xpMsg_Paint","","",null,null],[17,"xpMsg_Draw","","",null,null],[17,"xpMsg_KeyPress","","",null,null],[17,"xpMsg_KeyTakeFocus","","",null,null],[17,"xpMsg_KeyLoseFocus","","",null,null],[17,"xpMsg_MouseDown","","",null,null],[17,"xpMsg_MouseDrag","","",null,null],[17,"xpMsg_MouseUp","","",null,null],[17,"xpMsg_Reshape","","",null,null],[17,"xpMsg_ExposedChanged","","",null,null],[17,"xpMsg_AcceptChild","","",null,null],[17,"xpMsg_LoseChild","","",null,null],[17,"xpMsg_AcceptParent","","",null,null],[17,"xpMsg_Shown","","",null,null],[17,"xpMsg_Hidden","","",null,null],[17,"xpMsg_DescriptorChanged","","",null,null],[17,"xpMsg_PropertyChanged","","",null,null],[17,"xpMsg_MouseWheel","","",null,null],[17,"xpMsg_CursorAdjust","","",null,null],[17,"xpMsg_UserStart","","",null,null],[11,"clone","","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[0,"widget_utils","xplm_sys::widgets","",null,null],[3,"Struct_Unnamed1","xplm_sys::widgets::widget_utils","",null,null],[12,"left","","",9,null],[12,"top","","",9,null],[12,"right","","",9,null],[12,"bottom","","",9,null],[12,"visible","","",9,null],[12,"descriptor","","",9,null],[12,"isRoot","","",9,null],[12,"containerIndex","","",9,null],[12,"widgetClass","","",9,null],[5,"XPUCreateWidgets","","",null,null],[5,"XPUMoveWidgetBy","","",null,null],[5,"XPUFixedLayout","","",null,null],[5,"XPUSelectIfNeeded","","",null,null],[5,"XPUDefocusKeyboard","","",null,null],[5,"XPUDragWidget","","",null,null],[6,"XPWidgetCreate_t","","",null,null],[11,"clone","","",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[0,"widgets","xplm_sys::widgets","",null,null],[5,"XPCreateWidget","xplm_sys::widgets::widgets","",null,null],[5,"XPCreateCustomWidget","","",null,null],[5,"XPDestroyWidget","","",null,null],[5,"XPSendMessageToWidget","","",null,null],[5,"XPPlaceWidgetWithin","","",null,null],[5,"XPCountChildWidgets","","",null,null],[5,"XPGetNthChildWidget","","",null,null],[5,"XPGetParentWidget","","",null,null],[5,"XPShowWidget","","",null,null],[5,"XPHideWidget","","",null,null],[5,"XPIsWidgetVisible","","",null,null],[5,"XPFindRootWidget","","",null,null],[5,"XPBringRootWidgetToFront","","",null,null],[5,"XPIsWidgetInFront","","",null,null],[5,"XPGetWidgetGeometry","","",null,null],[5,"XPSetWidgetGeometry","","",null,null],[5,"XPGetWidgetForLocation","","",null,null],[5,"XPGetWidgetExposedGeometry","","",null,null],[5,"XPSetWidgetDescriptor","","",null,null],[5,"XPGetWidgetDescriptor","","",null,null],[5,"XPSetWidgetProperty","","",null,null],[5,"XPGetWidgetProperty","","",null,null],[5,"XPSetKeyboardFocus","","",null,null],[5,"XPLoseKeyboardFocus","","",null,null],[5,"XPGetWidgetWithFocus","","",null,null],[5,"XPAddWidgetCallback","","",null,null],[5,"XPGetWidgetClassFunc","","",null,null]],"paths":[[3,"Struct_Unnamed2"],[3,"Struct_Unnamed4"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Struct_Unnamed1"]]};
searchIndex["geojson"] = {"doc":"# Examples","items":[[3,"Geometry","geojson","Geometry Objects",null,null],[12,"bbox","","",0,null],[12,"value","","",0,null],[12,"crs","","",0,null],[3,"Feature","","Feature Objects",null,null],[12,"bbox","","",1,null],[12,"crs","","",1,null],[12,"geometry","","",1,null],[12,"id","","",1,null],[12,"properties","","",1,null],[3,"FeatureCollection","","Feature Collection Objects",null,null],[12,"bbox","","",2,null],[12,"crs","","",2,null],[12,"features","","",2,null],[4,"Crs","","Coordinate Reference System Objects",null,null],[13,"Named","","Named CRS",3,null],[12,"name","geojson::Crs","",3,null],[13,"Linked","geojson","Linked CRS",3,null],[12,"href","geojson::Crs","",3,null],[12,"type_","","",3,null],[4,"GeoJson","geojson","GeoJSON Objects",null,null],[13,"Geometry","","",4,null],[13,"Feature","","",4,null],[13,"FeatureCollection","","",4,null],[4,"Value","","The underlying Geometry value",null,null],[13,"Point","","Point",5,null],[13,"MultiPoint","","MultiPoint",5,null],[13,"LineString","","LineString",5,null],[13,"MultiLineString","","MultiLineString",5,null],[13,"Polygon","","Polygon",5,null],[13,"MultiPolygon","","MultiPolygon",5,null],[13,"GeometryCollection","","GeometryCollection",5,null],[4,"Error","","Error when reading a GeoJSON object from a str or Object",null,null],[13,"BboxExpectedArray","","",6,null],[13,"BboxExpectedNumericValues","","",6,null],[13,"CrsExpectedObject","","",6,null],[13,"CrsUnknownType","","",6,null],[13,"GeoJsonExpectedObject","","",6,null],[13,"GeoJsonUnknownType","","",6,null],[13,"GeometryUnknownType","","",6,null],[13,"MalformedJson","","",6,null],[13,"PropertiesExpectedObjectOrNull","","",6,null],[13,"FeatureInvalidGeometryValue","","",6,null],[13,"ExpectedStringValue","","",6,null],[13,"ExpectedProperty","","",6,null],[13,"ExpectedF64Value","","",6,null],[13,"ExpectedArrayValue","","",6,null],[13,"ExpectedObjectValue","","",6,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"to_json","","",3,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"from","","",4,{"inputs":[{"name":"geometry"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"feature"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"featurecollection"}],"output":{"name":"geojson"}}],[11,"to_json","","",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"to_json","","",5,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"new","","Returns a new `Geometry` with the specified `value`. `bbox` and `crs` will be set to\n`None`.",0,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"to_json","","",0,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"to_json","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"to_json","","",2,null],[6,"Bbox","","Bounding Boxes",null,null],[6,"Position","","Positions",null,null],[6,"PointType","","",null,null],[6,"LineStringType","","",null,null],[6,"PolygonType","","",null,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null]],"paths":[[3,"Geometry"],[3,"Feature"],[3,"FeatureCollection"],[4,"Crs"],[4,"GeoJson"],[4,"Value"],[4,"Error"]]};
searchIndex["xplane_plugin"] = {"doc":"","items":[[3,"PluginInfo","xplane_plugin","Stores information about a plugin that is provided to X-Plane",null,null],[12,"name","","The plugin name",0,null],[12,"signature","","The plugin&#39;s signature, in reverse DNS format",0,null],[12,"description","","A description of the plugin",0,null],[8,"Plugin","","The trait that all plugins should implement",null,null],[10,"start","","Called when X-Plane loads this plugin\nOn success, returns a plugin object",1,{"inputs":[],"output":{"name":"option"}}],[10,"enable","","Called when the plugin is enabled",1,null],[10,"disable","","Called when the plugin is disabled",1,null],[10,"info","","Returns information on this plugin",1,null],[10,"stop","","",1,null],[14,"xplane_plugin!","","Creates an X-Plane plugin",null,null]],"paths":[[3,"PluginInfo"],[8,"Plugin"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"fmt","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"eq","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",25,null],[10,"read_nil","","",25,null],[10,"read_usize","","",25,null],[10,"read_u64","","",25,null],[10,"read_u32","","",25,null],[10,"read_u16","","",25,null],[10,"read_u8","","",25,null],[10,"read_isize","","",25,null],[10,"read_i64","","",25,null],[10,"read_i32","","",25,null],[10,"read_i16","","",25,null],[10,"read_i8","","",25,null],[10,"read_bool","","",25,null],[10,"read_f64","","",25,null],[10,"read_f32","","",25,null],[10,"read_char","","",25,null],[10,"read_str","","",25,null],[10,"read_enum","","",25,null],[10,"read_enum_variant","","",25,null],[10,"read_enum_variant_arg","","",25,null],[10,"read_enum_struct_variant","","",25,null],[10,"read_enum_struct_variant_field","","",25,null],[10,"read_struct","","",25,null],[10,"read_struct_field","","",25,null],[10,"read_tuple","","",25,null],[10,"read_tuple_arg","","",25,null],[10,"read_tuple_struct","","",25,null],[10,"read_tuple_struct_arg","","",25,null],[10,"read_option","","",25,null],[10,"read_seq","","",25,null],[10,"read_seq_elt","","",25,null],[10,"read_map","","",25,null],[10,"read_map_elt_key","","",25,null],[10,"read_map_elt_val","","",25,null],[10,"error","","",25,null],[8,"Encoder","","",null,null],[16,"Error","","",26,null],[10,"emit_nil","","",26,null],[10,"emit_usize","","",26,null],[10,"emit_u64","","",26,null],[10,"emit_u32","","",26,null],[10,"emit_u16","","",26,null],[10,"emit_u8","","",26,null],[10,"emit_isize","","",26,null],[10,"emit_i64","","",26,null],[10,"emit_i32","","",26,null],[10,"emit_i16","","",26,null],[10,"emit_i8","","",26,null],[10,"emit_bool","","",26,null],[10,"emit_f64","","",26,null],[10,"emit_f32","","",26,null],[10,"emit_char","","",26,null],[10,"emit_str","","",26,null],[10,"emit_enum","","",26,null],[10,"emit_enum_variant","","",26,null],[10,"emit_enum_variant_arg","","",26,null],[10,"emit_enum_struct_variant","","",26,null],[10,"emit_enum_struct_variant_field","","",26,null],[10,"emit_struct","","",26,null],[10,"emit_struct_field","","",26,null],[10,"emit_tuple","","",26,null],[10,"emit_tuple_arg","","",26,null],[10,"emit_tuple_struct","","",26,null],[10,"emit_tuple_struct_arg","","",26,null],[10,"emit_option","","",26,null],[10,"emit_option_none","","",26,null],[10,"emit_option_some","","",26,null],[10,"emit_seq","","",26,null],[10,"emit_seq_elt","","",26,null],[10,"emit_map","","",26,null],[10,"emit_map_elt_key","","",26,null],[10,"emit_map_elt_val","","",26,null],[8,"Decodable","","",null,null],[10,"decode","","",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",28,null],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",29,null],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"cmp","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"clone","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",15,null],[12,"sa_data","","",15,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",16,null],[12,"sin_port","","",16,null],[12,"sin_addr","","",16,null],[12,"sin_zero","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",19,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",20,null],[12,"ai_family","","",20,null],[12,"ai_socktype","","",20,null],[12,"ai_protocol","","",20,null],[12,"ai_addrlen","","",20,null],[12,"ai_addr","","",20,null],[12,"ai_canonname","","",20,null],[12,"ai_next","","",20,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",21,null],[12,"nl_pid","","",21,null],[12,"nl_groups","","",21,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",22,null],[12,"sll_protocol","","",22,null],[12,"sll_ifindex","","",22,null],[12,"sll_hatype","","",22,null],[12,"sll_pkttype","","",22,null],[12,"sll_halen","","",22,null],[12,"sll_addr","","",22,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",23,null],[12,"tm_min","","",23,null],[12,"tm_hour","","",23,null],[12,"tm_mday","","",23,null],[12,"tm_mon","","",23,null],[12,"tm_year","","",23,null],[12,"tm_wday","","",23,null],[12,"tm_yday","","",23,null],[12,"tm_isdst","","",23,null],[12,"tm_gmtoff","","",23,null],[12,"tm_zone","","",23,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",24,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",25,null],[12,"dli_fbase","","",25,null],[12,"dli_sname","","",25,null],[12,"dli_saddr","","",25,null],[3,"epoll_event","","",null,null],[12,"events","","",26,null],[12,"u64","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[12,"domainname","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"dirent","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"dirent64","","",null,null],[12,"d_ino","","",30,null],[12,"d_off","","",30,null],[12,"d_reclen","","",30,null],[12,"d_type","","",30,null],[12,"d_name","","",30,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",31,null],[12,"rlim_max","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_pathv","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_flags","","",32,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",33,null],[12,"ifa_name","","",33,null],[12,"ifa_flags","","",33,null],[12,"ifa_addr","","",33,null],[12,"ifa_netmask","","",33,null],[12,"ifa_ifu","","",33,null],[12,"ifa_data","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",34,null],[12,"pw_passwd","","",34,null],[12,"pw_uid","","",34,null],[12,"pw_gid","","",34,null],[12,"pw_gecos","","",34,null],[12,"pw_dir","","",34,null],[12,"pw_shell","","",34,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",35,null],[12,"f_frsize","","",35,null],[12,"f_blocks","","",35,null],[12,"f_bfree","","",35,null],[12,"f_bavail","","",35,null],[12,"f_files","","",35,null],[12,"f_ffree","","",35,null],[12,"f_favail","","",35,null],[12,"f_fsid","","",35,null],[12,"f_flag","","",35,null],[12,"f_namemax","","",35,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",36,null],[12,"dqb_bsoftlimit","","",36,null],[12,"dqb_curspace","","",36,null],[12,"dqb_ihardlimit","","",36,null],[12,"dqb_isoftlimit","","",36,null],[12,"dqb_curinodes","","",36,null],[12,"dqb_btime","","",36,null],[12,"dqb_itime","","",36,null],[12,"dqb_valid","","",36,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",37,null],[12,"ssi_errno","","",37,null],[12,"ssi_code","","",37,null],[12,"ssi_pid","","",37,null],[12,"ssi_uid","","",37,null],[12,"ssi_fd","","",37,null],[12,"ssi_tid","","",37,null],[12,"ssi_band","","",37,null],[12,"ssi_overrun","","",37,null],[12,"ssi_trapno","","",37,null],[12,"ssi_status","","",37,null],[12,"ssi_int","","",37,null],[12,"ssi_ptr","","",37,null],[12,"ssi_utime","","",37,null],[12,"ssi_stime","","",37,null],[12,"ssi_addr","","",37,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",38,null],[12,"mq_maxmsg","","",38,null],[12,"mq_msgsize","","",38,null],[12,"mq_curmsgs","","",38,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",39,null],[12,"if_name","","",39,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",40,null],[12,"e_exit","","",40,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",41,null],[12,"tv_usec","","",41,null],[3,"utmpx","","",null,null],[12,"ut_type","","",42,null],[12,"ut_pid","","",42,null],[12,"ut_line","","",42,null],[12,"ut_id","","",42,null],[12,"ut_user","","",42,null],[12,"ut_host","","",42,null],[12,"ut_exit","","",42,null],[12,"ut_session","","",42,null],[12,"ut_tv","","",42,null],[12,"ut_addr_v6","","",42,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",43,null],[12,"sa_mask","","",43,null],[12,"sa_flags","","",43,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",44,null],[12,"ss_flags","","",44,null],[12,"ss_size","","",44,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",45,null],[12,"si_errno","","",45,null],[12,"si_code","","",45,null],[12,"_pad","","",45,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",46,null],[12,"gl_pathv","","",46,null],[12,"gl_offs","","",46,null],[12,"gl_flags","","",46,null],[3,"ucred","","",null,null],[12,"pid","","",47,null],[12,"uid","","",47,null],[12,"gid","","",47,null],[3,"statfs","","",null,null],[12,"f_type","","",48,null],[12,"f_bsize","","",48,null],[12,"f_blocks","","",48,null],[12,"f_bfree","","",48,null],[12,"f_bavail","","",48,null],[12,"f_files","","",48,null],[12,"f_ffree","","",48,null],[12,"f_fsid","","",48,null],[12,"f_namelen","","",48,null],[12,"f_frsize","","",48,null],[3,"msghdr","","",null,null],[12,"msg_name","","",49,null],[12,"msg_namelen","","",49,null],[12,"msg_iov","","",49,null],[12,"msg_iovlen","","",49,null],[12,"msg_control","","",49,null],[12,"msg_controllen","","",49,null],[12,"msg_flags","","",49,null],[3,"termios","","",null,null],[12,"c_iflag","","",50,null],[12,"c_oflag","","",50,null],[12,"c_cflag","","",50,null],[12,"c_lflag","","",50,null],[12,"c_line","","",50,null],[12,"c_cc","","",50,null],[12,"c_ispeed","","",50,null],[12,"c_ospeed","","",50,null],[3,"flock","","",null,null],[12,"l_type","","",51,null],[12,"l_whence","","",51,null],[12,"l_start","","",51,null],[12,"l_len","","",51,null],[12,"l_pid","","",51,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",52,null],[12,"loads","","",52,null],[12,"totalram","","",52,null],[12,"freeram","","",52,null],[12,"sharedram","","",52,null],[12,"bufferram","","",52,null],[12,"totalswap","","",52,null],[12,"freeswap","","",52,null],[12,"procs","","",52,null],[12,"pad","","",52,null],[12,"totalhigh","","",52,null],[12,"freehigh","","",52,null],[12,"mem_unit","","",52,null],[12,"_f","","",52,null],[3,"stat","","",null,null],[12,"st_dev","","",53,null],[12,"st_ino","","",53,null],[12,"st_nlink","","",53,null],[12,"st_mode","","",53,null],[12,"st_uid","","",53,null],[12,"st_gid","","",53,null],[12,"st_rdev","","",53,null],[12,"st_size","","",53,null],[12,"st_blksize","","",53,null],[12,"st_blocks","","",53,null],[12,"st_atime","","",53,null],[12,"st_atime_nsec","","",53,null],[12,"st_mtime","","",53,null],[12,"st_mtime_nsec","","",53,null],[12,"st_ctime","","",53,null],[12,"st_ctime_nsec","","",53,null],[3,"stat64","","",null,null],[12,"st_dev","","",54,null],[12,"st_ino","","",54,null],[12,"st_nlink","","",54,null],[12,"st_mode","","",54,null],[12,"st_uid","","",54,null],[12,"st_gid","","",54,null],[12,"st_rdev","","",54,null],[12,"st_size","","",54,null],[12,"st_blksize","","",54,null],[12,"st_blocks","","",54,null],[12,"st_atime","","",54,null],[12,"st_atime_nsec","","",54,null],[12,"st_mtime","","",54,null],[12,"st_mtime_nsec","","",54,null],[12,"st_ctime","","",54,null],[12,"st_ctime_nsec","","",54,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",55,null],[12,"exponent","","",55,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",56,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",57,null],[12,"swd","","",57,null],[12,"ftw","","",57,null],[12,"fop","","",57,null],[12,"rip","","",57,null],[12,"rdp","","",57,null],[12,"mxcsr","","",57,null],[12,"mxcr_mask","","",57,null],[12,"_st","","",57,null],[12,"_xmm","","",57,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",58,null],[12,"fpregs","","",58,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",59,null],[12,"uc_link","","",59,null],[12,"uc_stack","","",59,null],[12,"uc_mcontext","","",59,null],[12,"uc_sigmask","","",59,null],[3,"ipc_perm","","",null,null],[12,"__key","","",60,null],[12,"uid","","",60,null],[12,"gid","","",60,null],[12,"cuid","","",60,null],[12,"cgid","","",60,null],[12,"mode","","",60,null],[12,"__seq","","",60,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",61,null],[12,"shm_segsz","","",61,null],[12,"shm_atime","","",61,null],[12,"shm_dtime","","",61,null],[12,"shm_ctime","","",61,null],[12,"shm_cpid","","",61,null],[12,"shm_lpid","","",61,null],[12,"shm_nattch","","",61,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",62,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",63,null],[11,"clone","","",52,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",64,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",65,null],[11,"clone","","",66,null],[11,"clone","","",67,null],[11,"clone","","",68,null],[11,"clone","","",69,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",70,null],[11,"clone","","",38,null],[11,"clone","","",71,null],[11,"clone","","",39,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",72,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["astro"] = {"doc":"","items":[[0,"util","astro","Some programming utilities",null,null],[5,"round_upto_digits","astro::util","Returns a float rounded upto a certain number of decimal digits",null,{"inputs":[{"name":"f64"},{"name":"u32"}],"output":{"name":"f64"}}],[0,"coords","astro","Transform between coordinate systems",null,null],[3,"GeographPoint","astro::coords","Represents a point on the geographical surface of the Earth",null,null],[12,"long","","Geographical longitude",0,null],[12,"lat","","Geographical latitude",0,null],[3,"EqPoint","","Represents a point in the equatorial coordinate system",null,null],[12,"asc","","Right ascension",1,null],[12,"dec","","Declination",1,null],[3,"EclPoint","","Represents a point in the ecliptic coordinate system",null,null],[12,"long","","Ecliptic longitude",2,null],[12,"lat","","Ecliptic latitude",2,null],[5,"hr_angl_frm_observer_long","","Computes the hour angle from geographical longitude and Greenwhich\nsidereal time",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"hr_angl_frm_loc_sidr","","Computes the hour angle from local sidereal time and right\nascension",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"ecl_long_frm_eq","","Computes the ecliptic longitude from equatorial coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"ecl_lat_frm_eq","","Computes the ecliptic latitude from equatorial coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"asc_frm_ecl","","Computes the right ascension from ecliptic coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"dec_frm_ecl","","Computes the declination from ecliptic coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"az_frm_eq","","Computes the azimuth from equatorial coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"alt_frm_eq","","Computes the altitude from equatorial coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"hr_angl_frm_hz","","Computes the hour angle from local horizontal coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"dec_frm_hz","","Computes the declination from local horizontal coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"gal_long_frm_eq","","Computes the galactic longitude from equatorial coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"gal_lat_frm_eq","","Computes the galactic latitude from equatorial coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"asc_frm_gal","","Computes the right ascension from galactic coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"dec_frm_gal","","Computes the declination from galactic coordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[11,"anglr_sepr","","",0,null],[11,"anglr_sepr","","",1,null],[11,"anglr_sepr","","",2,null],[0,"aberr","astro","Corrections for aberration",null,null],[5,"sol_aberr","astro::aberr","Computes solar aberration in ecliptic longitude",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"stell_aberr_in_eq_coords","","Computes stellar aberration in equatorial coordinates",null,null],[0,"angle","astro","Angles for astronomy",null,null],[5,"anglr_sepr","astro::angle","Computes the angular separation between two angular points",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"deg_frm_dms","","Computes an angle in degrees with decimals, from an angle\nexpressed in degrees, arcminutes and arcseconds",null,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"dms_frm_deg","","Computes an angle expressed in degrees, arcminutes and\narcseconds, from an angle in degrees with decimals",null,null],[5,"deg_frm_hms","","Computes an angle in degrees with decimals, from an angle\nexpressed in hours, minutes and seconds",null,{"inputs":[{"name":"i64"},{"name":"i64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"hms_frm_deg","","Computes an angle expressed in hours, minutes and\nseconds, from an angle in degrees with decimals",null,null],[5,"limit_to_360","","Computes the equivalent angle in [0, 360] degree range",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"limit_to_two_PI","","Computes the equivalent angle in [0, 2π] radian range",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[17,"TWO_PI","","",null,null],[0,"asteroid","astro","Diameters of asteroids",null,null],[5,"diameter","astro::asteroid","Computes the diameter of an asteroid",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"apparent_diameter","","Computes the apparent diameter of an asteroid",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[0,"atmos","astro","Corrections for atmospheric refraction",null,null],[5,"refrac_frm_apprnt_alt_15","astro::atmos","Computes the refraction term for true altitudes greater than 15\ndegrees",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"refrac_frm_true_alt_15","","Computes the refraction term for apparent altitudes greater than 15\ndegrees",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"refrac_frm_apprnt_alt","","Computes the refraction term for true altitude",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"refrac_frm_true_alt","","Computes the refraction term for apparent altitude",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"refrac_by_pressr","","Computes the refraction term modifier for local pressure",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"refrac_by_temp","","Computes the refraction term modifier for local temperature",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[0,"binary_star","astro","Binary stars",null,null],[5,"mn_ann_motion_of_compan","astro::binary_star","Computes mean annual motion of companion star",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"mn_anom_of_compan","","Computes mean anomaly of companion star",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"rad_vec","","Computes radius vector of a binary star",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"true_anom","","Computes true anomaly of a binary star",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"apprnt_coords_angl","","Computes apparent position angle of a binary star",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"anglr_sepr","","Computes angular separation of a binary star",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"ecc_of_apprnt_orb","","Computes eccentricity of an apparent orbit",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[0,"consts","astro","Some physical constants",null,null],[0,"wgs72","astro::consts","World Geodetic System 1972",null,null],[17,"EQUATORIAL_RADIUS","astro::consts::wgs72","Equatorial radius of the Earth (Semimajor axis) *| in meters*",null,null],[17,"POLAR_RADIUS","","Polar radius of the Earth (Semiminor axis) *| in meters*",null,null],[17,"FLATTENING","","Flattening",null,null],[17,"ANGULAR_VELOCITY","","Angular velocity of the Earth *| in radians / second*",null,null],[17,"GRAV_CONST","","Gravitational constant (including the mass of the Earth&#39;s\natmosphere) *| in meters^3 / second^2*",null,null],[0,"wgs84","astro::consts","World Geodetic System 1984",null,null],[17,"EQUATORIAL_RADIUS","astro::consts::wgs84","Equatorial radius of the Earth (Semimajor axis) *| in meters*",null,null],[17,"POLAR_RADIUS","","Polar radius of the Earth (Semiminor axis) *| in meters*",null,null],[17,"FLATTENING","","Flattening",null,null],[17,"ANGULAR_VELOCITY","","Angular velocity of the Earth *| in radians / second*",null,null],[17,"GRAV_CONST","","Gravitational constant (including the mass of the Earth&#39;s\natmosphere) *| in meters^3 / second^2*",null,null],[17,"GAUSS_GRAV","astro::consts","Gaussian gravitational constant *| in radians*",null,null],[17,"SPEED_OF_LIGHT","","Speed of light in vaccum *| in meters per second*",null,null],[17,"EARTH_MOON_MASS_RATIO","","Earth-Moon mass ratio",null,null],[17,"SUN_EARTH_MASS_RATIO","","Sun-Earth mass ratio",null,null],[0,"ecliptic","astro","The Earth&#39;s ecliptic",null,null],[5,"mn_oblq_laskar","astro::ecliptic","Computes the mean obliquity of the ecliptic using\nJ. Laskar&#39;s formula",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"mn_oblq_IAU","","Computes the mean obliquity of the ecliptic using\nthe IAU formula",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"eclip_points_on_hz","","Computes the longitudes of the two ecliptic points on\na horizon on Earth",null,null],[5,"angl_betwn_eclip_and_hz","","Computes the angle between the ecliptic and a horizon\non Earth",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[0,"interpol","astro","Interpolation of intermediate values of functions",null,null],[5,"three_values","astro::interpol","Interpolates an intermediate value of a function from three of it&#39;s\ngiven values",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"five_values","","Interpolates an intermediate value of a function from five of it&#39;s\ngiven values",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[0,"lunar","astro","The Earth&#39;s moon",null,null],[4,"Phase","astro::lunar","Represents a phase of the Moon",null,null],[13,"New","","New Moon",3,null],[13,"First","","First Quarter",3,null],[13,"Full","","Full Moon",3,null],[13,"Last","","Last Quarter",3,null],[5,"eq_hz_parllx","","Computes the equatorial horizontal parallax of the Moon",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"semidiameter","","Computes the equatorial semidiameter of the Moon",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"inc_of_mn_lunar_eq","","Computes the inclination of the mean lunar equator with the\necliptic",null,{"inputs":[],"output":{"name":"f64"}}],[5,"optical_libr","","Computes the optical librations of the Moon in longitude and\nlatitude",null,null],[5,"physical_libr","","Computes the physical librations of the Moon in longitude and\nlatitude",null,null],[5,"total_libr","","Computes the total librations of the Moon in longitude and\nlatitude",null,null],[5,"pos_angl_of_axis_of_rot","","Computes the position angle of the axis of rotation of the Moon",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"topocent_libr_by_diff_corrections","","Computes the topocentric librations of the Moon",null,null],[5,"geocent_ecl_pos","","Computes the geocentric ecliptic position of the Moon,\nreferred to the mean equinox of the date",null,null],[5,"mn_ascend_node","","Computes the longitude of the mean ascending node of the Moon",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"true_ascend_node","","Computes the longitude of the true ascending node of the Moon",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"mn_perigee","","Computes the longitude of the mean perigee of the Moon",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"bright_limb","","Computes the position angle of the Moon&#39;s bright limb",null,{"inputs":[{"name":"eqpoint"},{"name":"eqpoint"}],"output":{"name":"f64"}}],[5,"illum_frac_frm_eq_coords","","Computes the illuminated fraction of the lunar disk, using equatorial\ncoordinates",null,{"inputs":[{"name":"eqpoint"},{"name":"eqpoint"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"illum_frac_frm_ecl_coords","","Computes the illuminated fraction of the lunar disk, using eclipctic\ncoordinates",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"time_of_passage_through_nodes","","Computes the times of passage of the Moon through the ascending and\ndescending nodes, close to a given date",null,null],[5,"time_of_phase","","Computes the Julian day corresponding to one of the four phases\nof the Moon",null,{"inputs":[{"name":"date"},{"name":"phase"}],"output":{"name":"f64"}}],[0,"misc","astro","Miscellaneous routines",null,null],[5,"parllc_angl","astro::misc","Computes the parallactic angle of a celestial body",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"parllc_angl_on_hz","","Computes the parallactic angle of a celestial body on the\nhorizon",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[0,"nutation","astro","Corrections for nutation",null,null],[5,"nutation","astro::nutation","Computes nutation in ecliptic longitude and obliquity",null,null],[5,"nutation_in_eq_coords","","Computes nutation in equatorial coordinates",null,null],[0,"orbit","astro","Elliptic, parabolic and near-parabolic orbits",null,null],[4,"Node","astro::orbit","Represents an orbital node",null,null],[13,"Ascend","","Ascending node",4,null],[13,"Descend","","Descending node",4,null],[0,"elliptic","","Elliptic orbits",null,null],[5,"true_anom","astro::orbit::elliptic","Computes the true anomaly of a body in an elliptic orbit",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"rad_vec_frm_ecc_anom","","Computes the radius vector of a body in an elliptic orbit from it&#39;s\neccentric anomaly",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"rad_vec_frm_true_anom","","Computes the radius vector of a body in an elliptic orbit from it&#39;s\ntrue anomaly",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"ecc_anom","","Computes the eccentric anomaly of a body in an elliptic orbit",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"vel","","Computes the velocity of a body in an elliptic orbit",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"perih_vel","","Computes the velocity of a body at perihelion in an elliptic orbit",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"aph_vel","","Computes the velocity of a body at aphelion in an elliptic orbit",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"length_ramanujan","","Computes the approximate length of an ellipse using the Ramanujan\nmethod",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"length","","Computes the approximate length of an ellipse",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"semimaj_axis","","Computes the semimajor axis of an elliptic orbit",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"mn_motion","","Computes the mean motion of an elliptic orbit",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"passage_through_node","","Computes the time of passage of a body through a node of an elliptic\norbit, and it&#39;s radius vector at that time",null,null],[0,"parabolic","astro::orbit","Parabolic orbits",null,null],[5,"true_anom_and_rad_vec","astro::orbit::parabolic","Computes the true anomaly and radius vector of a body in a parabolic\norbit at a given time",null,null],[5,"passage_through_node","","Computes the time of passage of a body through a node of a parabolic\norbit and it&#39;s radius vector at that time",null,null],[0,"near_parabolic","astro::orbit","Near-parabolic orbits",null,null],[5,"true_anom_and_rad_vec","astro::orbit::near_parabolic","Computes the true anomaly and radius vector of a body in a near-parabolic\norbit at a given time",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"result"}}],[0,"parallax","astro","Find topocentric coordinates",null,null],[5,"eq_hz_parallax","astro::parallax","Computes the equatorial horizontal parallax of a celestial body",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"topocent_eq_coords","","Computes the topocentric equatorial coordinates of a celestial body",null,{"inputs":[{"name":"eqpoint"},{"name":"f64"},{"name":"geographpoint"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eqpoint"}}],[5,"topopcent_ecl_coords","","Computes the topocentric ecliptic coordinates of a celestial body",null,null],[0,"planet","astro","8 Planets of the Solar System",null,null],[4,"Planet","astro::planet","Represents a planet",null,null],[13,"Mercury","","Mercury *Helped with testing General Relativity*",5,null],[13,"Venus","","Venus **Climate change was here**",5,null],[13,"Earth","","Earth *Pale blue dot, right?*",5,null],[13,"Mars","","Mars *Panspermia sounds nice*",5,null],[13,"Jupiter","","Jupiter *Oh, Europa*",5,null],[13,"Saturn","","Saturn *62 moons, and some moonlets*",5,null],[13,"Uranus","","Uranus *Remember King George?*",5,null],[13,"Neptune","","Neptune *Oceans of liquid diamond (probably)*",5,null],[5,"illum_frac_frm_phase_angl","","Computes the illuminated fraction of a planet&#39;s disk from it&#39;s phase\nangle",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"illum_frac_frm_dist","","Computes the illuminated fraction of a planet&#39;s disk from it&#39;s distance\nto the Sun and Earth",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"phase_angl","","Computes a planet&#39;s phase angle",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"pos_angle_of_bright_limb","","Computes the position angle of the bright limb of a planet",null,{"inputs":[{"name":"eqpoint"},{"name":"eqpoint"}],"output":{"name":"f64"}}],[5,"semidiameter","","Computes a planet&#39;s equatorial semidiameter",null,{"inputs":[{"name":"planet"},{"name":"f64"}],"output":{"name":"result"}}],[5,"orb_elements","","Computes a planet&#39;s orbital elements, referred to the mean equinox of\nthe date",null,null],[5,"heliocent_coords","","Computes a planet&#39;s heliocentric coordinates, referred to the mean\nequinox of the date",null,null],[5,"geocent_geomet_ecl_coords","","Computes a planet&#39;s geocentric, geometric ecliptic position,\nuncorrected for light-time",null,null],[5,"geocent_apprnt_ecl_coords","","Computes a planet&#39;s geocentric, apparent ecliptic position, corrected\nfor light-time",null,null],[5,"ecl_coords_to_FK5","","Computes a planet&#39;s geocentric ecliptic coordinates converted to the\nFK5 system",null,null],[5,"geocent_eq_coords","","",null,null],[5,"heliocent_coords_frm_orb_elements","","",null,null],[5,"apprnt_mag_muller","","Computes a planet&#39;s apparent magnitude using G. Muller&#39;s formulae",null,{"inputs":[{"name":"planet"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"result"}}],[5,"apprnt_mag_84","","Computes a planet&#39;s apparent magnitude using the Astronomical\nAlmanac&#39;s method adopted in 1984",null,{"inputs":[{"name":"planet"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"result"}}],[0,"earth","","The Earth",null,null],[5,"flat_fac","astro::planet::earth","Returns the flattening factor of the Earth",null,{"inputs":[],"output":{"name":"f64"}}],[5,"eq_rad","","Returns the equatorial radius of the Earth *| in kilometers*",null,{"inputs":[],"output":{"name":"f64"}}],[5,"pol_rad","","Returns the polar radius of the Earth *| in kilometers*",null,{"inputs":[],"output":{"name":"f64"}}],[5,"ecc_of_meridian","","Returns the eccentricity of the Earth&#39;s meridian",null,{"inputs":[],"output":{"name":"f64"}}],[5,"approx_geodesic_dist","","Computes a low accuracy geodesic distance between two points\non the Earth&#39;s surface *| in kilometers*",null,{"inputs":[{"name":"geographpoint"},{"name":"geographpoint"}],"output":{"name":"f64"}}],[5,"geodesic_dist","","Computes a high accuracy geodesic distance between two points on the Earth&#39;s\nsurface *| in kilometers*",null,{"inputs":[{"name":"geographpoint"},{"name":"geographpoint"}],"output":{"name":"f64"}}],[5,"rho_sin_cos_phi","","Computes two quantities that are used elsewhere in the library",null,null],[5,"rho","","Computes the distance from the Earth&#39;s center to a point on the\nellipsoid",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"rot_angular_velocity","","Returns the rotational angular velocity of the Earth\n*| in radian per second*",null,{"inputs":[],"output":{"name":"f64"}}],[5,"rad_of_parll_lat","","Computes the radius of the parallel of a latitude",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"linear_velocity_at_lat","","Computes the linear velocity of a point at a latitude",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"rad_curv_of_meridian","","Computes the radius of curvature of the Earth&#39;s meridian\nat a latitude",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"geograph_geocent_lat_diff","","Computes the difference between the geographic latitude and\ngeocentric latitude",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"equation_of_time","","Computes the equation of time *| in radians*",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"angl_betwn_diurnal_path_and_hz","","Computes the angle between diurnal path and the horizon",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[0,"mars","astro::planet","Mars",null,null],[3,"Ephemeris","astro::planet::mars","Holds Mar&#39;s ephemeris values for physical observations",null,null],[12,"De","","Mars-centric declination of the Earth",6,null],[12,"Ds","","Mars-centric declination of the Sun",6,null],[12,"P","","Geocentric position angle of Mars&#39;s northern rotation pole,\nor also called the position angle of the axis",6,null],[12,"q","","Angular amount of the greatest defect of illumination",6,null],[12,"w","","Longitude of the central meridian, as seen from the Earth",6,null],[12,"d","","Apparent diameter of Mars",6,null],[5,"north_pol_eq_coords_J1950","","Returns the equatorial coordinates of Mars&#39;s north pole for the epoch\nJ1950.0",null,{"inputs":[],"output":{"name":"eqpoint"}}],[5,"north_pol_eq_coords_J2000","","Returns the equatorial coordinates of Mars&#39;s north pole for the epoch\nJ2000.0",null,{"inputs":[],"output":{"name":"eqpoint"}}],[5,"north_pol_ecl_coords","","Computes the ecliptic coordinates of Mars&#39;s north pole, referred to\nthe mean equinox of the date",null,{"inputs":[{"name":"f64"}],"output":{"name":"eclpoint"}}],[5,"ephemeris","","Computes quantites used in the ephemeris for physical observations of\nMars",null,{"inputs":[{"name":"f64"},{"name":"eclpoint"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"ephemeris"}}],[0,"jupiter","astro::planet","Jupiter",null,null],[3,"Ephemeris","astro::planet::jupiter","Holds Jupiter&#39;s ephemeris values for physical observations",null,null],[12,"De","","Jupiter-centric declination of the Earth",7,null],[12,"Ds","","Jupiter-centric declination of the Sun",7,null],[12,"P","","Geocentric position angle of Jupiter&#39;s northern\nrotation pole, or also called, position angle\nof the axis",7,null],[12,"w1","","Longitude of the central meridian for Rotational System I",7,null],[12,"w2","","Longitude of the central meridian for Rotational System II",7,null],[5,"eq_semidiameter","","Computes Jupiter&#39;s equatorial semidiameter",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"pol_semidiameter","","Computes Jupiter&#39;s polar semidiameter",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"ephemeris","","Return quantites used in the ephemeris for physical observations\nof Jupiter",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"ephemeris"}}],[0,"moon","","The four Galilean moons",null,null],[4,"Moon","astro::planet::jupiter::moon","Represents a Galilean moon",null,null],[13,"Io","","Io",8,null],[13,"Europa","","Europa",8,null],[13,"Ganymede","","Ganymede",8,null],[13,"Callisto","","Callisto",8,null],[5,"apprnt_rect_coords","","Computes the apparent rectangular coordinates for a Galilean moon",null,null],[0,"saturn","astro::planet","Saturn",null,null],[5,"apprnt_mag_muller","astro::planet::saturn","Computes Saturn&#39;s apparent magnitude using G. Muller&#39;s formula",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"apprnt_mag_84","","Computes Saturn&#39;s apparent magnitude using the Astronomical\nAlmanac&#39;s formula adopted in 1984",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"pol_semidiameter","","Computes Saturn&#39;s polar semidiameter",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"eq_semidiameter","","Computes Saturn&#39;s equatorial semidiameter",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[0,"moon","","Eight moons of Saturn",null,null],[4,"Moon","astro::planet::saturn::moon","Represents a moon of Saturn",null,null],[13,"Mimas","","Mimas",9,null],[13,"Enceladus","","Enceladus",9,null],[13,"Tethys","","Tethys",9,null],[13,"Dione","","Dione",9,null],[13,"Rhea","","Rhea",9,null],[13,"Titan","","Titan",9,null],[13,"Hyperion","","Hyperion",9,null],[13,"Iapetus","","Iapetus",9,null],[5,"apprnt_rect_coords","","Computes the apparent rectangular coordinates for a moon of Saturn",null,null],[0,"ring","astro::planet::saturn","The ring system of Saturn",null,null],[3,"Elements","astro::planet::saturn::ring","Holds the elements for the ring system of Saturn",null,null],[12,"B","","Saturnicentric latitude of the Earth, referred to the plane\nof the ring",10,null],[12,"B1","","Saturnicentric latitude of the Sun, referred to the plane of\nthe ring",10,null],[12,"P","","Geocentric position angle of the northern semiminor axis of\nthe apparent ellipse of the ring of the axis",10,null],[12,"deltaU","","Difference between Saturnicentric longitudes of the Sun and\nthe Earth, measured in the plane of the ring",10,null],[12,"a","","Major axis of the outer edge of the outer ring",10,null],[12,"b","","Minor axis of the outer edge of the outer ring",10,null],[5,"inc","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"ascend_node","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"elements","","Computes the elements for the ring system of Saturn",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"elements"}}],[5,"inn_edge_outer_ring","","",null,null],[5,"out_edge_inner_ing","","",null,null],[5,"inn_edge_inner_ring","","",null,null],[5,"inn_edge_dusk_ring","","",null,null],[0,"pluto","astro","The dwarf planet Pluto",null,null],[5,"semdiameter","astro::pluto","Computes the geocentric equatorial semidiameter of Pluto",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"apprnt_mag_84","","Computes the apparent magnitude of Pluto using the Astronomical\nAlmanac&#39;s method adopted in 1984",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"heliocent_pos","","Computes the heliocentric coordinates of Pluto, referred to the\nstandard equinox of J2000.0",null,null],[5,"mn_orb_elements_2000AD","","Returns the mean orbital elements of Pluto near 2000 AD",null,null],[0,"precess","astro","Corrections for precession",null,null],[5,"annual_precess","astro::precess","Computes annual precession in equatorial coordinates towards a new\nepoch",null,null],[5,"precess_eq_coords","","Computes equatorial coordinates reduced to a different epoch",null,null],[5,"precess_eq_coords_FK5","","Computes equatorial coordinates, from coordinates referred to the\nFK4 system, reduced to a different epoch",null,null],[5,"precess_ecl_coords","","Computes ecliptic coordinates reduced to a different epoch",null,null],[5,"precess_orb_elements","","Computes orbital elements reduced to a different equinox",null,null],[0,"star","astro","Stars",null,null],[5,"combined_mag","astro::star","Computes the combined magnitude of two stars",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"combined_mag_of_many","","Computes the combined magnitude of two or more stars",null,null],[5,"brightness_ratio","","Computes the brightness ratio of two stars",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"mag_diff","","Computes the difference in magnitude of two stars",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"abs_mag_frm_parallax","","Computes the absolute magnitude of a star from its parallax",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"abs_mag_frm_dist","","Computes the absolute magnitude of a star from its distance from earth",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"angl_between_north_celes_and_eclip_pole","","Computes the angle between a vector from a star to the\nnorth celestial pole of the Earth and a vector from the\nsame star to the north pole of the ecliptic",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"eq_coords_frm_motion","","Computes the equatorial coordinates of a star at\nat a different time from it&#39;s motion in space",null,null],[5,"proper_motion_in_eq_coords","","",null,null],[0,"sun","astro","The Sun",null,null],[5,"semidiameter","astro::sun","Computes the Sun&#39;s equatorial semidiameter",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"geocent_ecl_pos","","Computes the Sun&#39;s geocentric ecliptic position, referred to the mean\nequinox of the date",null,null],[5,"ecl_coords_to_FK5","","Computes the Sun&#39;s geocentric ecliptic coordinates converted to the\nFK5 system",null,null],[5,"geocent_rect_coords","","Computes the Sun&#39;s geocentric rectangular coordinates, referred to\nthe mean equinox of the date",null,null],[5,"ephemeris","","Return quantites used in the ephemeris for physical observations of\nthe Sun",null,null],[5,"synodic_rot","","Computes an approximate time for the beginning of a solar synodic\nrotation",null,{"inputs":[{"name":"i64"}],"output":{"name":"f64"}}],[0,"time","astro","Time for astronomy",null,null],[3,"Date","astro::time","Represents a date with year, month, decimal day and calendar type",null,null],[12,"year","","Year",11,null],[12,"month","","Month",11,null],[12,"decimal_day","","Decimal day",11,null],[12,"cal_type","","Calendar type",11,null],[3,"DayOfMonth","","Represents a day of a month with hours, minutes and seconds",null,null],[12,"day","","Day of month",12,null],[12,"hr","","Hour of day",12,null],[12,"min","","Minute of hour",12,null],[12,"sec","","Second of minute",12,null],[12,"time_zone","","Time zone *| in decimal hours*",12,null],[4,"CalType","","Represents a calendar type",null,null],[13,"Gregorian","","Gregorian calendar",13,null],[13,"Julian","","Julian calendar",13,null],[5,"decimal_day","","Computes decimal day for a `DayOfMonth`",null,{"inputs":[{"name":"dayofmonth"}],"output":{"name":"f64"}}],[5,"decimal_year","","Computes decimal year for a `Date`",null,{"inputs":[{"name":"date"}],"output":{"name":"f64"}}],[5,"is_leap_year","","Checks if a year is a leap year",null,{"inputs":[{"name":"i16"},{"name":"caltype"}],"output":{"name":"bool"}}],[5,"julian_cent","","Computes Julian century for a Julian day",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"julian_mill","","Computes Julian millennium for a Julian day",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"julian_day","","Computes Julian day from a `Date`",null,{"inputs":[{"name":"date"}],"output":{"name":"f64"}}],[5,"julian_ephemeris_day","","Computes the Julian Ephemeris day",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"date_frm_julian_day","","Computes a year, month and decimal day equivalent to a given Julian day",null,{"inputs":[{"name":"f64"}],"output":{"name":"result"}}],[5,"apprnt_sidr","","Computes apparent sidereal time from the mean sidereal time",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"mn_sidr","","Computes mean sidereal time for a Julian day",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"delta_t","","Computes an approximate value of ΔT for a given year and month",null,{"inputs":[{"name":"i32"},{"name":"u8"}],"output":{"name":"f64"}}],[0,"transit","astro","Time of rise, transit and set for a celestial body",null,null],[4,"TransitBody","astro::transit","Represents a celestial body in transit",null,null],[13,"StarOrPlanet","","A star or a planet",14,null],[13,"Sun","","The Sun",14,null],[13,"Moon","","The Moon",14,null],[4,"TransitType","","Represents a transit type",null,null],[13,"Rise","","Rise",15,null],[13,"Transit","","Transit at zenith",15,null],[13,"Set","","Set",15,null],[5,"time","","Computes the time of transit for a celestial body",null,null],[14,"Horner_eval!","astro","Evaluates a polynomial using Horner&#39;s algorithm",null,null],[14,"ecl_frm_eq!","","Computes ecliptic coordinates from equatorial coordinates",null,null],[14,"eq_frm_ecl!","","Computes equatorial coordinates from ecliptic coordinates",null,null],[14,"loc_hz_frm_eq!","","Computes local horizontal coordinates from equatorial coordinates",null,null],[14,"gal_frm_eq!","","Computes galactic coordinates from equatorial coordinates",null,null],[14,"eq_frm_gal!","","Computes equatorial coordinates from galactic coordinates",null,null],[14,"apprnt_sidr!","","Computes apparent sidereal time for a Julian day",null,null]],"paths":[[3,"GeographPoint"],[3,"EqPoint"],[3,"EclPoint"],[4,"Phase"],[4,"Node"],[4,"Planet"],[3,"Ephemeris"],[3,"Ephemeris"],[4,"Moon"],[4,"Moon"],[3,"Elements"],[3,"Date"],[3,"DayOfMonth"],[4,"CalType"],[4,"TransitBody"],[4,"TransitType"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"clone","","",2,null],[11,"next","","",2,null],[11,"clone","","",3,null],[11,"next","","",3,null]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[5,"div_rem","num_integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null]],"paths":[[8,"Integer"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[11,"to_degrees","","Converts radians to degrees.",11,null],[11,"to_radians","","Converts degrees to radians.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",12,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",16,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",16,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",16,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",16,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",16,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",16,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",16,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",16,null],[10,"swap_bytes","","Reverses the byte order of the integer.",16,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",16,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",16,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",16,null],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",17,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["sun"] = {"doc":"The `sun` crate is a library for calculating the position of the sun.\nIt is a port of the JavaScript library\n[suncalc](https://github.com/mourner/suncalc).","items":[[3,"Position","sun","Holds the [azimuth](https://en.wikipedia.org/wiki/Azimuth)\nand [altitude](https://en.wikipedia.org/wiki/Horizontal_coordinate_system)\nangles of the sun position.",null,null],[12,"azimuth","","",0,null],[12,"altitude","","",0,null],[5,"pos","","Calculates the sun position for a given date and latitude/longitude.\nThe angles are calculated as [radians](https://en.wikipedia.org/wiki/Radian).",null,{"inputs":[{"name":"i64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"position"}}],[11,"fmt","","",0,null]],"paths":[[3,"Position"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags!","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
